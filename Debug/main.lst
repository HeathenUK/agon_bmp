Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED07-Oct-23     22:42:37     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",8
                           A   144    .DEFINE "baudRate"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "dataBits"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "stopBits"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "parity"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "flowcontrol"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "eir"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 12
                           A   173    .ENDEF
                           A   174    .ENDREC "NONAME3"
                           A   175    .BEGREC "NONAME4",15
                           A   176    .DEFINE "fs"
                           A   177    .VALUE 0
                           A   178    .CLASS 8
                           A   179    .TYPE 46
                           A   180    .ENDEF
                           A   181    .DEFINE "id"
                           A   182    .VALUE 3
                           A   183    .CLASS 8
                           A   184    .TYPE 13
                           A   185    .ENDEF
                           A   186    .DEFINE "attr"
                           A   187    .VALUE 5
                           A   188    .CLASS 8
                           A   189    .TYPE 12
                           A   190    .ENDEF
                           A   191    .DEFINE "stat"
                           A   192    .VALUE 6
                           A   193    .CLASS 8
                           A   194    .TYPE 12
                           A   195    .ENDEF
                           A   196    .DEFINE "sclust"
                           A   197    .VALUE 7
                           A   198    .CLASS 8
                           A   199    .TYPE 15
                           A   200    .ENDEF
                           A   201    .DEFINE "objsize"
                           A   202    .VALUE 11
                           A   203    .CLASS 8
                           A   204    .TYPE 15
                           A   205    .ENDEF
                           A   206    .ENDREC "NONAME4"
                           A   207    .BEGREC "NONAME5",36
                           A   208    .DEFINE "obj"
                           A   209    .VALUE 0
                           A   210    .CLASS 8
                           A   211    .TAG "NONAME4"
                           A   212    .TYPE 8
                           A   213    .ENDEF
                           A   214    .DEFINE "flag"
                           A   215    .VALUE 15
                           A   216    .CLASS 8
                           A   217    .TYPE 12
                           A   218    .ENDEF
                           A   219    .DEFINE "err"
                           A   220    .VALUE 16
                           A   221    .CLASS 8
                           A   222    .TYPE 12
                           A   223    .ENDEF
                           A   224    .DEFINE "fptr"
                           A   225    .VALUE 17
                           A   226    .CLASS 8
                           A   227    .TYPE 15
                           A   228    .ENDEF
                           A   229    .DEFINE "clust"
                           A   230    .VALUE 21
                           A   231    .CLASS 8
                           A   232    .TYPE 15
                           A   233    .ENDEF
                           A   234    .DEFINE "sect"
                           A   235    .VALUE 25
                           A   236    .CLASS 8
                           A   237    .TYPE 15
                           A   238    .ENDEF
                           A   239    .DEFINE "dir_sect"
                           A   240    .VALUE 29
                           A   241    .CLASS 8
                           A   242    .TYPE 15
                           A   243    .ENDEF
                           A   244    .DEFINE "dir_ptr"
                           A   245    .VALUE 33
                           A   246    .CLASS 8
                           A   247    .TYPE 46
                           A   248    .ENDEF
                           A   249    .ENDREC "NONAME5"
                           A   250    ;    1	//Copyright HeathenUK 2023, others' cop
                           A   251    ;    2	
                           A   252    ;    3	#include <stdio.h>
                           A   253    ;    4	#include <stdlib.h>
                           A   254    ;    5	#include <ctype.h>
                           A   255    ;    6	#include <stdint.h>
                           A   256    ;    7	#include <string.h>
                           A   257    ;    8	#include <eZ80.h>
                           A   258    ;    9	#include <defines.h>
                           A   259    ;   10	#include "mos-interface.h"
                           A   260    ;   11	#include "vdp.h"
                           A   261    ;   12	
                           A   262    ;   13	typedef struct {
                           A   263    ;   14		
                           A   264    ;   15		uint16_t bmp_width;
                           A   265    ;   16		uint16_t bmp_height;
                           A   266    ;   17		uint8_t  bmp_bitdepth;
                           A   267    ;   18		
                           A   268    ;   19	} bmp_info;
                           A   269    .BEGREC "NONAME6",5
                           A   270    .DEFINE "bmp_width"
                           A   271    .VALUE 0
                           A   272    .CLASS 8
                           A   273    .TYPE 13
                           A   274    .ENDEF
                           A   275    .DEFINE "bmp_height"
                           A   276    .VALUE 2
                           A   277    .CLASS 8
                           A   278    .TYPE 13
                           A   279    .ENDEF
                           A   280    .DEFINE "bmp_bitdepth"
                           A   281    .VALUE 4
                           A   282    .CLASS 8
                           A   283    .TYPE 12
                           A   284    .ENDEF
                           A   285    .ENDREC "NONAME6"
                           A   286    ;   20	
                           A   287    ;   21	extern void write16bit(uint16_t w);
                           A   288    ;   22	extern void write24bit(uint24_t w);
                           A   289    ;   23	extern void write32bit(uint32_t w);
                           A   290    ;   24	
                           A   291    ;   25	void delay_secs(UINT16 ticks_end) { //1
0B00E5                     A   292    _delay_secs:
                           A   293    .DEFINE "_delay_secs"
                           A   294    
                           A   295    .VALUE _delay_secs
                           A   296    
                           A   297    .CLASS 2
                           A   298    
                           A   299    .TYPE 65
                           A   300    
                           A   301    .ENDEF
                           A   302    
                           A   303    .BEGFUNC "delay_secs",25,"_delay_secs"
                           A   304    
                           A   305    .LINE 25
                           A   306    
                           A   307    .DEFINE "ticks_end"
                           A   308    
                           A   309    .CLASS 65
                           A   310    
                           A   311    .VALUE 6
                           A   312    
                           A   313    .TYPE 13
                           A   314    
                           A   315    .ENDEF
                           A   316    
                           A   317    .DEFINE "ticks"
                           A   318    
                           A   319    .CLASS 65
                           A   320    
                           A   321    .VALUE -4
                           A   322    
                           A   323    .TYPE 15
                           A   324    
                           A   325    .ENDEF
                           A   326    
0B00E5 DDE5                A   327    	PUSH	IX
0B00E7 DD210000 00         A   328    	LD	IX,0
0B00EC DD39                A   329    	ADD	IX,SP
0B00EE C5                  A   330    	PUSH	BC
0B00EF 3B                  A   331    	DEC	SP
                           A   332    ;   26		
                           A   333    ;   27		UINT32 ticks = 0;
                           A   334    .LINE 27
                           A   335    
0B00F0 01000000            A   336    	LD	BC,0
0B00F4 AF                  A   337    	XOR	A,A
0B00F5 DD0FFC              A   338    	LD	(IX+%FFFFFFFC),BC
0B00F8 DD77FF              A   339    	LD	(IX+%FFFFFFFF),A
                           A   340    ;   28		ticks_end *= 60;
                           A   341    .LINE 28
                           A   342    
0B00FB 49213C00            A   343    	LD.LIS	HL,60
0B00FF DD0706              A   344    	LD	BC,(IX+%6)
0B0102 CD 90 2A 0B         A   345    	CALL	__smulu
0B0106 DD7506              A   346    	LD	(IX+%6),L
0B0109 DD7407              A   347    	LD	(IX+%7),H
                           A   348    ;   29		while(true) {
0B010C                     A   349    L_3:
                           A   350    .LINE 29
                           A   351    
                           A   352    ;   30			
                           A   353    ;   31			waitvblank();
                           A   354    .LINE 31
                           A   355    
0B010C CD 39 20 0B         A   356    	CALL	_waitvblank
                           A   357    ;   32			ticks++;
                           A   358    .LINE 32
                           A   359    
0B0110 DD27FC              A   360    	LD	HL,(IX+%FFFFFFFC)
0B0113 DD5EFF              A   361    	LD	E,(IX+%FFFFFFFF)
0B0116 3E01                A   362    	LD	A,%1
0B0118 CD F3 23 0B         A   363    	CALL	__ladd_b
0B011C DD2FFC              A   364    	LD	(IX+%FFFFFFFC),HL
0B011F DD73FF              A   365    	LD	(IX+%FFFFFFFF),E
                           A   366    ;   33			if(ticks >= ticks_end) break;
                           A   367    .LINE 33
                           A   368    
0B0122 DD0706              A   369    	LD	BC,(IX+%6)
0B0125 CD A2 27 0B         A   370    	CALL	__stoiu
0B0129 E5C1                A   371    	LD	BC,HL
0B012B AF                  A   372    	XOR	A,A
0B012C DD27FC              A   373    	LD	HL,(IX+%FFFFFFFC)
0B012F DD5EFF              A   374    	LD	E,(IX+%FFFFFFFF)
0B0132 CD 9D 29 0B         A   375    	CALL	__lcmpu
0B0136 38 D4               A   376    	JR	C,L_3
                           A   377    ;   34			
                           A   378    ;   35		}
                           A   379    ;   36		
                           A   380    ;   37	}
                           A   381    .LINE 37
                           A   382    
0B0138 DDF9                A   383    	LD	SP,IX
0B013A DDE1                A   384    	POP	IX
0B013C C9                  A   385    	RET	
                           A   386    
                           A   387    
                           A   388    ;**************************** _delay_secs *****
                           A   389    ;Name                         Addr/Register   S
                           A   390    ;_waitvblank                         IMPORT  --
                           A   391    ;ticks                                 IX-4    
                           A   392    ;ticks_end                             IX+6    
                           A   393    
                           A   394    
                           A   395    ; Stack Frame Size: 13 (bytes)
                           A   396    ;       Spill Code: 0 (instruction)
                           A   397    
                           A   398    
                           A   399    .ENDFUNC "delay_secs",37,"_delay_secs"
                           A   400    ;   38	
                           A   401    ;   39	int min(int a, int b) {
0B013D                     A   402    _min:
                           A   403    .DEFINE "_min"
                           A   404    
                           A   405    .VALUE _min
                           A   406    
                           A   407    .CLASS 2
                           A   408    
                           A   409    .TYPE 68
                           A   410    
                           A   411    .ENDEF
                           A   412    
                           A   413    .BEGFUNC "min",39,"_min"
                           A   414    
                           A   415    .LINE 39
                           A   416    
                           A   417    .DEFINE "a"
                           A   418    
                           A   419    .CLASS 65
                           A   420    
                           A   421    .VALUE 6
                           A   422    
                           A   423    .TYPE 4
                           A   424    
                           A   425    .ENDEF
                           A   426    
                           A   427    .DEFINE "b"
                           A   428    
                           A   429    .CLASS 65
                           A   430    
                           A   431    .VALUE 9
                           A   432    
                           A   433    .TYPE 4
                           A   434    
                           A   435    .ENDEF
                           A   436    
0B013D DDE5                A   437    	PUSH	IX
0B013F DD210000 00         A   438    	LD	IX,0
0B0144 DD39                A   439    	ADD	IX,SP
                           A   440    ;   40	    if (a > b)
                           A   441    .LINE 40
                           A   442    
0B0146 DD0706              A   443    	LD	BC,(IX+%6)
0B0149 DD2709              A   444    	LD	HL,(IX+%9)
0B014C B7                  A   445    	OR	A,A
0B014D ED42                A   446    	SBC	HL,BC
0B014F F2 59 01 0B         A   447    	JP	P,L__3
0B0153 EA 62 01 0B         A   448    	JP	PE,L_6
0B0157 18 04               A   449    	JR	L__4
0B0159                     A   450    L__3:
0B0159 E2 62 01 0B         A   451    	JP	PO,L_6
0B015D                     A   452    L__4:
                           A   453    ;   41	        return b;
                           A   454    .LINE 41
                           A   455    
0B015D DD2709              A   456    	LD	HL,(IX+%9)
0B0160 18 03               A   457    	JR	L_7
0B0162                     A   458    L_6:
                           A   459    ;   42	    return a;
                           A   460    .LINE 42
                           A   461    
0B0162 DD2706              A   462    	LD	HL,(IX+%6)
                           A   463    ;   43	}
0B0165                     A   464    L_7:
                           A   465    .LINE 43
                           A   466    
0B0165 DDF9                A   467    	LD	SP,IX
0B0167 DDE1                A   468    	POP	IX
0B0169 C9                  A   469    	RET	
                           A   470    
                           A   471    
                           A   472    ;**************************** _min ************
                           A   473    ;Name                         Addr/Register   S
                           A   474    ;b                                     IX+9    
                           A   475    ;a                                     IX+6    
                           A   476    
                           A   477    
                           A   478    ; Stack Frame Size: 12 (bytes)
                           A   479    ;       Spill Code: 0 (instruction)
                           A   480    
                           A   481    
                           A   482    .ENDFUNC "min",43,"_min"
                           A   483    ;   44	
                           A   484    ;   45	int max(int a, int b) {
0B016A                     A   485    _max:
                           A   486    .DEFINE "_max"
                           A   487    
                           A   488    .VALUE _max
                           A   489    
                           A   490    .CLASS 2
                           A   491    
                           A   492    .TYPE 68
                           A   493    
                           A   494    .ENDEF
                           A   495    
                           A   496    .BEGFUNC "max",45,"_max"
                           A   497    
                           A   498    .LINE 45
                           A   499    
                           A   500    .DEFINE "a"
                           A   501    
                           A   502    .CLASS 65
                           A   503    
                           A   504    .VALUE 6
                           A   505    
                           A   506    .TYPE 4
                           A   507    
                           A   508    .ENDEF
                           A   509    
                           A   510    .DEFINE "b"
                           A   511    
                           A   512    .CLASS 65
                           A   513    
                           A   514    .VALUE 9
                           A   515    
                           A   516    .TYPE 4
                           A   517    
                           A   518    .ENDEF
                           A   519    
0B016A DDE5                A   520    	PUSH	IX
0B016C DD210000 00         A   521    	LD	IX,0
0B0171 DD39                A   522    	ADD	IX,SP
                           A   523    ;   46	    if (a > b)
                           A   524    .LINE 46
                           A   525    
0B0173 DD0706              A   526    	LD	BC,(IX+%6)
0B0176 DD2709              A   527    	LD	HL,(IX+%9)
0B0179 B7                  A   528    	OR	A,A
0B017A ED42                A   529    	SBC	HL,BC
0B017C F2 86 01 0B         A   530    	JP	P,L__7
0B0180 EA 8F 01 0B         A   531    	JP	PE,L_9
0B0184 18 04               A   532    	JR	L__8
0B0186                     A   533    L__7:
0B0186 E2 8F 01 0B         A   534    	JP	PO,L_9
0B018A                     A   535    L__8:
                           A   536    ;   47	        return a;
                           A   537    .LINE 47
                           A   538    
0B018A DD2706              A   539    	LD	HL,(IX+%6)
0B018D 18 03               A   540    	JR	L_10
0B018F                     A   541    L_9:
                           A   542    ;   48	    return b;
                           A   543    .LINE 48
                           A   544    
0B018F DD2709              A   545    	LD	HL,(IX+%9)
                           A   546    ;   49	}
0B0192                     A   547    L_10:
                           A   548    .LINE 49
                           A   549    
0B0192 DDF9                A   550    	LD	SP,IX
0B0194 DDE1                A   551    	POP	IX
0B0196 C9                  A   552    	RET	
                           A   553    
                           A   554    
                           A   555    ;**************************** _max ************
                           A   556    ;Name                         Addr/Register   S
                           A   557    ;b                                     IX+9    
                           A   558    ;a                                     IX+6    
                           A   559    
                           A   560    
                           A   561    ; Stack Frame Size: 12 (bytes)
                           A   562    ;       Spill Code: 0 (instruction)
                           A   563    
                           A   564    
                           A   565    .ENDFUNC "max",49,"_max"
                           A   566    ;   50	
                           A   567    ;   51	void flip(uint32_t * framebuffer, int w
0B0197                     A   568    _flip:
                           A   569    .DEFINE "_flip"
                           A   570    
                           A   571    .VALUE _flip
                           A   572    
                           A   573    .CLASS 2
                           A   574    
                           A   575    .TYPE 65
                           A   576    
                           A   577    .ENDEF
                           A   578    
                           A   579    .BEGFUNC "flip",51,"_flip"
                           A   580    
                           A   581    .LINE 51
                           A   582    
                           A   583    .DEFINE "framebuffer"
                           A   584    
                           A   585    .CLASS 65
                           A   586    
                           A   587    .VALUE 6
                           A   588    
                           A   589    .TYPE 47
                           A   590    
                           A   591    .ENDEF
                           A   592    
                           A   593    .DEFINE "width"
                           A   594    
                           A   595    .CLASS 65
                           A   596    
                           A   597    .VALUE 9
                           A   598    
                           A   599    .TYPE 4
                           A   600    
                           A   601    .ENDEF
                           A   602    
                           A   603    .DEFINE "height"
                           A   604    
                           A   605    .CLASS 65
                           A   606    
                           A   607    .VALUE 12
                           A   608    
                           A   609    .TYPE 4
                           A   610    
                           A   611    .ENDEF
                           A   612    
                           A   613    .DEFINE "y"
                           A   614    
                           A   615    .CLASS 65
                           A   616    
                           A   617    .VALUE -2
                           A   618    
                           A   619    .TYPE 13
                           A   620    
                           A   621    .ENDEF
                           A   622    
                           A   623    .DEFINE "row_buffer"
                           A   624    
                           A   625    .CLASS 65
                           A   626    
                           A   627    .VALUE -5
                           A   628    
                           A   629    .TYPE 47
                           A   630    
                           A   631    .ENDEF
                           A   632    
                           A   633    .DEFINE "row_size"
                           A   634    
                           A   635    .CLASS 65
                           A   636    
                           A   637    .VALUE -8
                           A   638    
                           A   639    .TYPE 4
                           A   640    
                           A   641    .ENDEF
                           A   642    
                           A   643    .DEFINE "top_row"
                           A   644    
                           A   645    .CLASS 65
                           A   646    
                           A   647    .VALUE -11
                           A   648    
                           A   649    .TYPE 47
                           A   650    
                           A   651    .ENDEF
                           A   652    
                           A   653    .DEFINE "bottom_row"
                           A   654    
                           A   655    .CLASS 65
                           A   656    
                           A   657    .VALUE -14
                           A   658    
                           A   659    .TYPE 47
                           A   660    
                           A   661    .ENDEF
                           A   662    
0B0197 DDE5                A   663    	PUSH	IX
0B0199 DD210000 00         A   664    	LD	IX,0
0B019E DD39                A   665    	ADD	IX,SP
0B01A0 ED22F1              A   666    	LEA	HL,IX+%FFFFFFF1
0B01A3 F9                  A   667    	LD	SP,HL
                           A   668    ;   52	    uint16_t y;
                           A   669    ;   53	    uint32_t * row_buffer = (uint32_t *
                           A   670    .LINE 53
                           A   671    
0B01A4 DD2709              A   672    	LD	HL,(IX+%9)
0B01A7 29                  A   673    	ADD	HL,HL
0B01A8 29                  A   674    	ADD	HL,HL
0B01A9 E5                  A   675    	PUSH	HL
0B01AA DD77F1              A   676    	LD	(IX+%FFFFFFF1),A
0B01AD CD 0D 25 0B         A   677    	CALL	_malloc
0B01B1 DD7EF1              A   678    	LD	A,(IX+%FFFFFFF1)
0B01B4 C1                  A   679    	POP	BC
0B01B5 DD2FFB              A   680    	LD	(IX+%FFFFFFFB),HL
                           A   681    ;   54	    int row_size = width * sizeof(uint3
                           A   682    .LINE 54
                           A   683    
0B01B8 DD2709              A   684    	LD	HL,(IX+%9)
0B01BB 29                  A   685    	ADD	HL,HL
0B01BC 29                  A   686    	ADD	HL,HL
0B01BD DD2FF8              A   687    	LD	(IX+%FFFFFFF8),HL
                           A   688    ;   55	
                           A   689    ;   56	    for (y = 0; y < height / 2; y++) {
                           A   690    .LINE 56
                           A   691    
0B01C0 DD36FE00            A   692    	LD	(IX+%FFFFFFFE),%0
0B01C4 DD36FF00            A   693    	LD	(IX+%FFFFFFFF),%0
0B01C8 C3 58 02 0B         A   694    	JR	L_14
0B01CC                     A   695    L_12:
                           A   696    ;   57	        uint32_t * top_row = framebuffe
                           A   697    .LINE 57
                           A   698    
0B01CC DD07FE              A   699    	LD	BC,(IX+%FFFFFFFE)
0B01CF CD A2 27 0B         A   700    	CALL	__stoiu
0B01D3 DD0709              A   701    	LD	BC,(IX+%9)
0B01D6 CD 21 29 0B         A   702    	CALL	__imuls
0B01DA 29                  A   703    	ADD	HL,HL
0B01DB 29                  A   704    	ADD	HL,HL
0B01DC DD0706              A   705    	LD	BC,(IX+%6)
0B01DF 09                  A   706    	ADD	HL,BC
0B01E0 DD2FF5              A   707    	LD	(IX+%FFFFFFF5),HL
                           A   708    ;   58	        uint32_t * bottom_row = framebu
                           A   709    .LINE 58
                           A   710    
0B01E3 DD07FE              A   711    	LD	BC,(IX+%FFFFFFFE)
0B01E6 CD A2 27 0B         A   712    	CALL	__stoiu
0B01EA E5C1                A   713    	LD	BC,HL
0B01EC DD270C              A   714    	LD	HL,(IX+%C)
0B01EF B7                  A   715    	OR	A,A
0B01F0 ED42                A   716    	SBC	HL,BC
0B01F2 2B                  A   717    	DEC	HL
0B01F3 DD0709              A   718    	LD	BC,(IX+%9)
0B01F6 CD 21 29 0B         A   719    	CALL	__imuls
0B01FA 29                  A   720    	ADD	HL,HL
0B01FB 29                  A   721    	ADD	HL,HL
0B01FC DD0706              A   722    	LD	BC,(IX+%6)
0B01FF 09                  A   723    	ADD	HL,BC
0B0200 DD2FF2              A   724    	LD	(IX+%FFFFFFF2),HL
                           A   725    ;   59	
                           A   726    ;   60	        memcpy(row_buffer, top_row, row
                           A   727    .LINE 60
                           A   728    
0B0203 DD07F8              A   729    	LD	BC,(IX+%FFFFFFF8)
0B0206 C5                  A   730    	PUSH	BC
0B0207 DD07F5              A   731    	LD	BC,(IX+%FFFFFFF5)
0B020A C5                  A   732    	PUSH	BC
0B020B DD07FB              A   733    	LD	BC,(IX+%FFFFFFFB)
0B020E C5                  A   734    	PUSH	BC
0B020F DD77F1              A   735    	LD	(IX+%FFFFFFF1),A
0B0212 CD C1 28 0B         A   736    	CALL	_memcpy
0B0216 DD7EF1              A   737    	LD	A,(IX+%FFFFFFF1)
0B0219 C1                  A   738    	POP	BC
0B021A C1                  A   739    	POP	BC
0B021B C1                  A   740    	POP	BC
                           A   741    ;   61	        memcpy(top_row, bottom_row, row
                           A   742    .LINE 61
                           A   743    
0B021C DD07F8              A   744    	LD	BC,(IX+%FFFFFFF8)
0B021F C5                  A   745    	PUSH	BC
0B0220 DD07F2              A   746    	LD	BC,(IX+%FFFFFFF2)
0B0223 C5                  A   747    	PUSH	BC
0B0224 DD07F5              A   748    	LD	BC,(IX+%FFFFFFF5)
0B0227 C5                  A   749    	PUSH	BC
0B0228 DD77F1              A   750    	LD	(IX+%FFFFFFF1),A
0B022B CD C1 28 0B         A   751    	CALL	_memcpy
0B022F DD7EF1              A   752    	LD	A,(IX+%FFFFFFF1)
0B0232 C1                  A   753    	POP	BC
0B0233 C1                  A   754    	POP	BC
0B0234 C1                  A   755    	POP	BC
                           A   756    ;   62	        memcpy(bottom_row, row_buffer, 
                           A   757    .LINE 62
                           A   758    
0B0235 DD07F8              A   759    	LD	BC,(IX+%FFFFFFF8)
0B0238 C5                  A   760    	PUSH	BC
0B0239 DD07FB              A   761    	LD	BC,(IX+%FFFFFFFB)
0B023C C5                  A   762    	PUSH	BC
0B023D DD07F2              A   763    	LD	BC,(IX+%FFFFFFF2)
0B0240 C5                  A   764    	PUSH	BC
0B0241 DD77F1              A   765    	LD	(IX+%FFFFFFF1),A
0B0244 CD C1 28 0B         A   766    	CALL	_memcpy
0B0248 DD7EF1              A   767    	LD	A,(IX+%FFFFFFF1)
0B024B C1                  A   768    	POP	BC
0B024C C1                  A   769    	POP	BC
0B024D C1                  A   770    	POP	BC
0B024E DD27FE              A   771    	LD	HL,(IX+%FFFFFFFE)
0B0251 23                  A   772    	INC	HL
0B0252 DD75FE              A   773    	LD	(IX+%FFFFFFFE),L
0B0255 DD74FF              A   774    	LD	(IX+%FFFFFFFF),H
                           A   775    ;   63	    }
0B0258                     A   776    L_14:
                           A   777    .LINE 63
                           A   778    
0B0258 01020000            A   779    	LD	BC,2
0B025C DD270C              A   780    	LD	HL,(IX+%C)
0B025F CD 5D 29 0B         A   781    	CALL	__idivs
0B0263 E5D1                A   782    	LD	DE,HL
0B0265 DD07FE              A   783    	LD	BC,(IX+%FFFFFFFE)
0B0268 CD A2 27 0B         A   784    	CALL	__stoiu
0B026C B7                  A   785    	OR	A,A
0B026D ED52                A   786    	SBC	HL,DE
0B026F FA 79 02 0B         A   787    	JP	M,L__11
0B0273 EA CC 01 0B         A   788    	JP	PE,L_12
0B0277 18 04               A   789    	JR	L__12
0B0279                     A   790    L__11:
0B0279 E2 CC 01 0B         A   791    	JP	PO,L_12
0B027D                     A   792    L__12:
                           A   793    ;   64	
                           A   794    ;   65	    free(row_buffer);
                           A   795    .LINE 65
                           A   796    
0B027D DD07FB              A   797    	LD	BC,(IX+%FFFFFFFB)
0B0280 C5                  A   798    	PUSH	BC
0B0281 CD 08 24 0B         A   799    	CALL	_free
0B0285 C1                  A   800    	POP	BC
                           A   801    ;   66	}
                           A   802    .LINE 66
                           A   803    
0B0286 DDF9                A   804    	LD	SP,IX
0B0288 DDE1                A   805    	POP	IX
0B028A C9                  A   806    	RET	
                           A   807    
                           A   808    
                           A   809    ;**************************** _flip ***********
                           A   810    ;Name                         Addr/Register   S
                           A   811    ;_free                               IMPORT  --
                           A   812    ;_memcpy                             IMPORT  --
                           A   813    ;_malloc                             IMPORT  --
                           A   814    ;bottom_row                           IX-14    
                           A   815    ;top_row                              IX-11    
                           A   816    ;row_size                              IX-8    
                           A   817    ;row_buffer                            IX-5    
                           A   818    ;y                                     IX-2    
                           A   819    ;height                               IX+12    
                           A   820    ;width                                 IX+9    
                           A   821    ;framebuffer                           IX+6    
                           A   822    
                           A   823    
                           A   824    ; Stack Frame Size: 30 (bytes)
                           A   825    ;       Spill Code: 0 (instruction)
                           A   826    
                           A   827    
                           A   828    .ENDFUNC "flip",66,"_flip"
                           A   829    ;   67	
                           A   830    ;   68	void twiddle_buffer(char* buffer, int w
0B028B                     A   831    _twiddle_buffer:
                           A   832    .DEFINE "_twiddle_buffer"
                           A   833    
                           A   834    .VALUE _twiddle_buffer
                           A   835    
                           A   836    .CLASS 2
                           A   837    
                           A   838    .TYPE 65
                           A   839    
                           A   840    .ENDEF
                           A   841    
                           A   842    .BEGFUNC "twiddle_buffer",68,"_twiddle_buffer"
                           A   843    
                           A   844    .LINE 68
                           A   845    
                           A   846    .DEFINE "buffer"
                           A   847    
                           A   848    .CLASS 65
                           A   849    
                           A   850    .VALUE 6
                           A   851    
                           A   852    .TYPE 34
                           A   853    
                           A   854    .ENDEF
                           A   855    
                           A   856    .DEFINE "width"
                           A   857    
                           A   858    .CLASS 65
                           A   859    
                           A   860    .VALUE 9
                           A   861    
                           A   862    .TYPE 4
                           A   863    
                           A   864    .ENDEF
                           A   865    
                           A   866    .DEFINE "height"
                           A   867    
                           A   868    .CLASS 65
                           A   869    
                           A   870    .VALUE 12
                           A   871    
                           A   872    .TYPE 4
                           A   873    
                           A   874    .ENDEF
                           A   875    
                           A   876    .DEFINE "col"
                           A   877    
                           A   878    .CLASS 65
                           A   879    
                           A   880    .VALUE -3
                           A   881    
                           A   882    .TYPE 4
                           A   883    
                           A   884    .ENDEF
                           A   885    
                           A   886    .DEFINE "tempRow"
                           A   887    
                           A   888    .CLASS 65
                           A   889    
                           A   890    .VALUE -6
                           A   891    
                           A   892    .TYPE 34
                           A   893    
                           A   894    .ENDEF
                           A   895    
                           A   896    .DEFINE "oppositeRowPtr"
                           A   897    
                           A   898    .CLASS 65
                           A   899    
                           A   900    .VALUE -9
                           A   901    
                           A   902    .TYPE 34
                           A   903    
                           A   904    .ENDEF
                           A   905    
                           A   906    .DEFINE "rowPtr"
                           A   907    
                           A   908    .CLASS 65
                           A   909    
                           A   910    .VALUE -12
                           A   911    
                           A   912    .TYPE 34
                           A   913    
                           A   914    .ENDEF
                           A   915    
                           A   916    .DEFINE "row"
                           A   917    
                           A   918    .CLASS 65
                           A   919    
                           A   920    .VALUE -15
                           A   921    
                           A   922    .TYPE 4
                           A   923    
                           A   924    .ENDEF
                           A   925    
0B028B DDE5                A   926    	PUSH	IX
0B028D DD210000 00         A   927    	LD	IX,0
0B0292 DD39                A   928    	ADD	IX,SP
0B0294 ED22E4              A   929    	LEA	HL,IX+%FFFFFFE4
0B0297 F9                  A   930    	LD	SP,HL
                           A   931    ;   69	    int row, col;
                           A   932    ;   70	    char* rowPtr;
                           A   933    ;   71		char* oppositeRowPtr;
                           A   934    ;   72		char* tempRow = (char*)malloc(width
                           A   935    .LINE 72
                           A   936    
0B0298 DD2709              A   937    	LD	HL,(IX+%9)
0B029B 29                  A   938    	ADD	HL,HL
0B029C 29                  A   939    	ADD	HL,HL
0B029D E5                  A   940    	PUSH	HL
0B029E DD77E4              A   941    	LD	(IX+%FFFFFFE4),A
0B02A1 CD 0D 25 0B         A   942    	CALL	_malloc
0B02A5 DD7EE4              A   943    	LD	A,(IX+%FFFFFFE4)
0B02A8 C1                  A   944    	POP	BC
0B02A9 DD2FFA              A   945    	LD	(IX+%FFFFFFFA),HL
                           A   946    ;   73	
                           A   947    ;   74	    //Iterate over each row
                           A   948    ;   75	    for (row = 0; row < height / 2; row
                           A   949    .LINE 75
                           A   950    
0B02AC 01000000            A   951    	LD	BC,0
0B02B0 DD0FF1              A   952    	LD	(IX+%FFFFFFF1),BC
0B02B3 C3 6B 04 0B         A   953    	JR	L_24
0B02B7                     A   954    L_22:
                           A   955    ;   76	        rowPtr = buffer + row * width *
                           A   956    .LINE 76
                           A   957    
0B02B7 DD27F1              A   958    	LD	HL,(IX+%FFFFFFF1)
0B02BA DD0709              A   959    	LD	BC,(IX+%9)
0B02BD CD 21 29 0B         A   960    	CALL	__imuls
0B02C1 29                  A   961    	ADD	HL,HL
0B02C2 29                  A   962    	ADD	HL,HL
0B02C3 DD0706              A   963    	LD	BC,(IX+%6)
0B02C6 09                  A   964    	ADD	HL,BC
0B02C7 DD2FF4              A   965    	LD	(IX+%FFFFFFF4),HL
                           A   966    ;   77	        oppositeRowPtr = buffer + (heig
                           A   967    .LINE 77
                           A   968    
0B02CA DD07F1              A   969    	LD	BC,(IX+%FFFFFFF1)
0B02CD DD270C              A   970    	LD	HL,(IX+%C)
0B02D0 B7                  A   971    	OR	A,A
0B02D1 ED42                A   972    	SBC	HL,BC
0B02D3 2B                  A   973    	DEC	HL
0B02D4 DD0709              A   974    	LD	BC,(IX+%9)
0B02D7 CD 21 29 0B         A   975    	CALL	__imuls
0B02DB 29                  A   976    	ADD	HL,HL
0B02DC 29                  A   977    	ADD	HL,HL
0B02DD DD0706              A   978    	LD	BC,(IX+%6)
0B02E0 09                  A   979    	ADD	HL,BC
0B02E1 DD2FF7              A   980    	LD	(IX+%FFFFFFF7),HL
                           A   981    ;   78	
                           A   982    ;   79	        //Swap bytes within each row (B
                           A   983    ;   80	        for (col = 0; col < width; col+
                           A   984    .LINE 80
                           A   985    
0B02E4 01000000            A   986    	LD	BC,0
0B02E8 DD0FFD              A   987    	LD	(IX+%FFFFFFFD),BC
0B02EB C3 4D 04 0B         A   988    	JR	L_21
0B02EF                     A   989    L_19:
                           A   990    ;   81	            tempRow[col * 4] = opposite
                           A   991    .LINE 81
                           A   992    
0B02EF DD27FD              A   993    	LD	HL,(IX+%FFFFFFFD)
0B02F2 29                  A   994    	ADD	HL,HL
0B02F3 29                  A   995    	ADD	HL,HL
0B02F4 E5C1                A   996    	LD	BC,HL
0B02F6 DD27FD              A   997    	LD	HL,(IX+%FFFFFFFD)
0B02F9 29                  A   998    	ADD	HL,HL
0B02FA 29                  A   999    	ADD	HL,HL
0B02FB DD17F7              A  1000    	LD	DE,(IX+%FFFFFFF7)
0B02FE 19                  A  1001    	ADD	HL,DE
0B02FF E5FDE1              A  1002    	LD	IY,HL
0B0302 C5D1                A  1003    	LD	DE,BC
0B0304 DD27FA              A  1004    	LD	HL,(IX+%FFFFFFFA)
0B0307 19                  A  1005    	ADD	HL,DE
0B0308 FD7E02              A  1006    	LD	A,(IY+%2)
0B030B 77                  A  1007    	LD	(HL),A
                           A  1008    ;   82	            tempRow[col * 4 + 1] = oppo
                           A  1009    .LINE 82
                           A  1010    
0B030C DD27FD              A  1011    	LD	HL,(IX+%FFFFFFFD)
0B030F 29                  A  1012    	ADD	HL,HL
0B0310 29                  A  1013    	ADD	HL,HL
0B0311 E5D1                A  1014    	LD	DE,HL
0B0313 DD27F7              A  1015    	LD	HL,(IX+%FFFFFFF7)
0B0316 09                  A  1016    	ADD	HL,BC
0B0317 E5FDE1              A  1017    	LD	IY,HL
0B031A D5C1                A  1018    	LD	BC,DE
0B031C DD27FA              A  1019    	LD	HL,(IX+%FFFFFFFA)
0B031F 09                  A  1020    	ADD	HL,BC
0B0320 23                  A  1021    	INC	HL
0B0321 FD7E01              A  1022    	LD	A,(IY+%1)
0B0324 77                  A  1023    	LD	(HL),A
                           A  1024    ;   83	            tempRow[col * 4 + 2] = oppo
                           A  1025    .LINE 83
                           A  1026    
0B0325 DD27FD              A  1027    	LD	HL,(IX+%FFFFFFFD)
0B0328 29                  A  1028    	ADD	HL,HL
0B0329 29                  A  1029    	ADD	HL,HL
0B032A E5C1                A  1030    	LD	BC,HL
0B032C DD27F7              A  1031    	LD	HL,(IX+%FFFFFFF7)
0B032F 19                  A  1032    	ADD	HL,DE
0B0330 E5FDE1              A  1033    	LD	IY,HL
0B0333 C5D1                A  1034    	LD	DE,BC
0B0335 DD27FA              A  1035    	LD	HL,(IX+%FFFFFFFA)
0B0338 19                  A  1036    	ADD	HL,DE
0B0339 23                  A  1037    	INC	HL
0B033A 23                  A  1038    	INC	HL
0B033B FD7E00              A  1039    	LD	A,(IY)
0B033E 77                  A  1040    	LD	(HL),A
                           A  1041    ;   84	            tempRow[col * 4 + 3] = oppo
                           A  1042    .LINE 84
                           A  1043    
0B033F DD27FD              A  1044    	LD	HL,(IX+%FFFFFFFD)
0B0342 29                  A  1045    	ADD	HL,HL
0B0343 29                  A  1046    	ADD	HL,HL
0B0344 E5D1                A  1047    	LD	DE,HL
0B0346 DD27F7              A  1048    	LD	HL,(IX+%FFFFFFF7)
0B0349 09                  A  1049    	ADD	HL,BC
0B034A E5FDE1              A  1050    	LD	IY,HL
0B034D DD2FEE              A  1051    	LD	(IX+%FFFFFFEE),HL	; spill
0B0350 ED2303              A  1052    	LEA	HL,IY+%3
0B0353 DD2FEB              A  1053    	LD	(IX+%FFFFFFEB),HL	; spill
0B0356 D5C1                A  1054    	LD	BC,DE
0B0358 DD27FA              A  1055    	LD	HL,(IX+%FFFFFFFA)
0B035B 09                  A  1056    	ADD	HL,BC
0B035C E5FDE1              A  1057    	LD	IY,HL
0B035F DD27EB              A  1058    	LD	HL,(IX+%FFFFFFEB)	; unspill
0B0362 7E                  A  1059    	LD	A,(HL)
0B0363 FD7703              A  1060    	LD	(IY+%3),A
                           A  1061    ;   85	
                           A  1062    ;   86	            oppositeRowPtr[col * 4] = r
                           A  1063    .LINE 86
                           A  1064    
0B0366 DD27FD              A  1065    	LD	HL,(IX+%FFFFFFFD)
0B0369 29                  A  1066    	ADD	HL,HL
0B036A 29                  A  1067    	ADD	HL,HL
0B036B E5C1                A  1068    	LD	BC,HL
0B036D DD27F4              A  1069    	LD	HL,(IX+%FFFFFFF4)
0B0370 19                  A  1070    	ADD	HL,DE
0B0371 E5FDE1              A  1071    	LD	IY,HL
0B0374 C5D1                A  1072    	LD	DE,BC
0B0376 DD27F7              A  1073    	LD	HL,(IX+%FFFFFFF7)
0B0379 19                  A  1074    	ADD	HL,DE
0B037A FD7E02              A  1075    	LD	A,(IY+%2)
0B037D 77                  A  1076    	LD	(HL),A
                           A  1077    ;   87	            oppositeRowPtr[col * 4 + 1]
                           A  1078    .LINE 87
                           A  1079    
0B037E DD27FD              A  1080    	LD	HL,(IX+%FFFFFFFD)
0B0381 29                  A  1081    	ADD	HL,HL
0B0382 29                  A  1082    	ADD	HL,HL
0B0383 E5D1                A  1083    	LD	DE,HL
0B0385 DD27F4              A  1084    	LD	HL,(IX+%FFFFFFF4)
0B0388 09                  A  1085    	ADD	HL,BC
0B0389 E5FDE1              A  1086    	LD	IY,HL
0B038C D5C1                A  1087    	LD	BC,DE
0B038E DD27F7              A  1088    	LD	HL,(IX+%FFFFFFF7)
0B0391 09                  A  1089    	ADD	HL,BC
0B0392 23                  A  1090    	INC	HL
0B0393 FD7E01              A  1091    	LD	A,(IY+%1)
0B0396 77                  A  1092    	LD	(HL),A
                           A  1093    ;   88	            oppositeRowPtr[col * 4 + 2]
                           A  1094    .LINE 88
                           A  1095    
0B0397 DD27FD              A  1096    	LD	HL,(IX+%FFFFFFFD)
0B039A 29                  A  1097    	ADD	HL,HL
0B039B 29                  A  1098    	ADD	HL,HL
0B039C E5C1                A  1099    	LD	BC,HL
0B039E DD27F4              A  1100    	LD	HL,(IX+%FFFFFFF4)
0B03A1 19                  A  1101    	ADD	HL,DE
0B03A2 E5FDE1              A  1102    	LD	IY,HL
0B03A5 C5D1                A  1103    	LD	DE,BC
0B03A7 DD27F7              A  1104    	LD	HL,(IX+%FFFFFFF7)
0B03AA 19                  A  1105    	ADD	HL,DE
0B03AB 23                  A  1106    	INC	HL
0B03AC 23                  A  1107    	INC	HL
0B03AD FD7E00              A  1108    	LD	A,(IY)
0B03B0 77                  A  1109    	LD	(HL),A
                           A  1110    ;   89	            oppositeRowPtr[col * 4 + 3]
                           A  1111    .LINE 89
                           A  1112    
0B03B1 DD27FD              A  1113    	LD	HL,(IX+%FFFFFFFD)
0B03B4 29                  A  1114    	ADD	HL,HL
0B03B5 29                  A  1115    	ADD	HL,HL
0B03B6 E5D1                A  1116    	LD	DE,HL
0B03B8 DD27F4              A  1117    	LD	HL,(IX+%FFFFFFF4)
0B03BB 09                  A  1118    	ADD	HL,BC
0B03BC E5FDE1              A  1119    	LD	IY,HL
0B03BF DD2FEE              A  1120    	LD	(IX+%FFFFFFEE),HL	; spill
0B03C2 ED2303              A  1121    	LEA	HL,IY+%3
0B03C5 DD2FE8              A  1122    	LD	(IX+%FFFFFFE8),HL	; spill
0B03C8 D5C1                A  1123    	LD	BC,DE
0B03CA DD27F7              A  1124    	LD	HL,(IX+%FFFFFFF7)
0B03CD 09                  A  1125    	ADD	HL,BC
0B03CE E5FDE1              A  1126    	LD	IY,HL
0B03D1 DD27E8              A  1127    	LD	HL,(IX+%FFFFFFE8)	; unspill
0B03D4 7E                  A  1128    	LD	A,(HL)
0B03D5 FD7703              A  1129    	LD	(IY+%3),A
                           A  1130    ;   90	
                           A  1131    ;   91	            rowPtr[col * 4] = tempRow[c
                           A  1132    .LINE 91
                           A  1133    
0B03D8 DD27FD              A  1134    	LD	HL,(IX+%FFFFFFFD)
0B03DB 29                  A  1135    	ADD	HL,HL
0B03DC 29                  A  1136    	ADD	HL,HL
0B03DD E5C1                A  1137    	LD	BC,HL
0B03DF DD27FA              A  1138    	LD	HL,(IX+%FFFFFFFA)
0B03E2 19                  A  1139    	ADD	HL,DE
0B03E3 E5FDE1              A  1140    	LD	IY,HL
0B03E6 C5D1                A  1141    	LD	DE,BC
0B03E8 DD27F4              A  1142    	LD	HL,(IX+%FFFFFFF4)
0B03EB 19                  A  1143    	ADD	HL,DE
0B03EC FD7E00              A  1144    	LD	A,(IY)
0B03EF 77                  A  1145    	LD	(HL),A
                           A  1146    ;   92	            rowPtr[col * 4 + 1] = tempR
                           A  1147    .LINE 92
                           A  1148    
0B03F0 DD27FD              A  1149    	LD	HL,(IX+%FFFFFFFD)
0B03F3 29                  A  1150    	ADD	HL,HL
0B03F4 29                  A  1151    	ADD	HL,HL
0B03F5 E5D1                A  1152    	LD	DE,HL
0B03F7 DD27FA              A  1153    	LD	HL,(IX+%FFFFFFFA)
0B03FA 09                  A  1154    	ADD	HL,BC
0B03FB E5FDE1              A  1155    	LD	IY,HL
0B03FE D5C1                A  1156    	LD	BC,DE
0B0400 DD27F4              A  1157    	LD	HL,(IX+%FFFFFFF4)
0B0403 09                  A  1158    	ADD	HL,BC
0B0404 23                  A  1159    	INC	HL
0B0405 FD7E01              A  1160    	LD	A,(IY+%1)
0B0408 77                  A  1161    	LD	(HL),A
                           A  1162    ;   93	            rowPtr[col * 4 + 2] = tempR
                           A  1163    .LINE 93
                           A  1164    
0B0409 DD27FD              A  1165    	LD	HL,(IX+%FFFFFFFD)
0B040C 29                  A  1166    	ADD	HL,HL
0B040D 29                  A  1167    	ADD	HL,HL
0B040E E5C1                A  1168    	LD	BC,HL
0B0410 DD27FA              A  1169    	LD	HL,(IX+%FFFFFFFA)
0B0413 19                  A  1170    	ADD	HL,DE
0B0414 E5FDE1              A  1171    	LD	IY,HL
0B0417 C5D1                A  1172    	LD	DE,BC
0B0419 DD27F4              A  1173    	LD	HL,(IX+%FFFFFFF4)
0B041C 19                  A  1174    	ADD	HL,DE
0B041D 23                  A  1175    	INC	HL
0B041E 23                  A  1176    	INC	HL
0B041F FD7E02              A  1177    	LD	A,(IY+%2)
0B0422 77                  A  1178    	LD	(HL),A
                           A  1179    ;   94	            rowPtr[col * 4 + 3] = tempR
                           A  1180    .LINE 94
                           A  1181    
0B0423 DD27FA              A  1182    	LD	HL,(IX+%FFFFFFFA)
0B0426 09                  A  1183    	ADD	HL,BC
0B0427 E5FDE1              A  1184    	LD	IY,HL
0B042A DD2FEE              A  1185    	LD	(IX+%FFFFFFEE),HL	; spill
0B042D ED2303              A  1186    	LEA	HL,IY+%3
0B0430 DD2FE5              A  1187    	LD	(IX+%FFFFFFE5),HL	; spill
0B0433 DD27FD              A  1188    	LD	HL,(IX+%FFFFFFFD)
0B0436 29                  A  1189    	ADD	HL,HL
0B0437 29                  A  1190    	ADD	HL,HL
0B0438 DD07F4              A  1191    	LD	BC,(IX+%FFFFFFF4)
0B043B 09                  A  1192    	ADD	HL,BC
0B043C E5FDE1              A  1193    	LD	IY,HL
0B043F DD27E5              A  1194    	LD	HL,(IX+%FFFFFFE5)	; unspill
0B0442 7E                  A  1195    	LD	A,(HL)
0B0443 FD7703              A  1196    	LD	(IY+%3),A
0B0446 DD07FD              A  1197    	LD	BC,(IX+%FFFFFFFD)
0B0449 03                  A  1198    	INC	BC
0B044A DD0FFD              A  1199    	LD	(IX+%FFFFFFFD),BC
                           A  1200    ;   95	        }
0B044D                     A  1201    L_21:
                           A  1202    .LINE 95
                           A  1203    
0B044D DD0709              A  1204    	LD	BC,(IX+%9)
0B0450 DD27FD              A  1205    	LD	HL,(IX+%FFFFFFFD)
0B0453 B7                  A  1206    	OR	A,A
0B0454 ED42                A  1207    	SBC	HL,BC
0B0456 FA 60 04 0B         A  1208    	JP	M,L__16
0B045A EA EF 02 0B         A  1209    	JP	PE,L_19
0B045E 18 04               A  1210    	JR	L__17
0B0460                     A  1211    L__16:
0B0460 E2 EF 02 0B         A  1212    	JP	PO,L_19
0B0464                     A  1213    L__17:
0B0464 DD07F1              A  1214    	LD	BC,(IX+%FFFFFFF1)
0B0467 03                  A  1215    	INC	BC
0B0468 DD0FF1              A  1216    	LD	(IX+%FFFFFFF1),BC
                           A  1217    ;   96	    }
0B046B                     A  1218    L_24:
                           A  1219    .LINE 96
                           A  1220    
0B046B 01020000            A  1221    	LD	BC,2
0B046F DD270C              A  1222    	LD	HL,(IX+%C)
0B0472 CD 5D 29 0B         A  1223    	CALL	__idivs
0B0476 E5C1                A  1224    	LD	BC,HL
0B0478 DD27F1              A  1225    	LD	HL,(IX+%FFFFFFF1)
0B047B B7                  A  1226    	OR	A,A
0B047C ED42                A  1227    	SBC	HL,BC
0B047E FA 88 04 0B         A  1228    	JP	M,L__18
0B0482 EA B7 02 0B         A  1229    	JP	PE,L_22
0B0486 18 04               A  1230    	JR	L__19
0B0488                     A  1231    L__18:
0B0488 E2 B7 02 0B         A  1232    	JP	PO,L_22
0B048C                     A  1233    L__19:
                           A  1234    ;   97		free(tempRow);
                           A  1235    .LINE 97
                           A  1236    
0B048C DD07FA              A  1237    	LD	BC,(IX+%FFFFFFFA)
0B048F C5                  A  1238    	PUSH	BC
0B0490 CD 08 24 0B         A  1239    	CALL	_free
0B0494 C1                  A  1240    	POP	BC
                           A  1241    ;   98	}
                           A  1242    .LINE 98
                           A  1243    
0B0495 DDF9                A  1244    	LD	SP,IX
0B0497 DDE1                A  1245    	POP	IX
0B0499 C9                  A  1246    	RET	
                           A  1247    
                           A  1248    
                           A  1249    ;**************************** _twiddle_buffer *
                           A  1250    ;Name                         Addr/Register   S
                           A  1251    ;_free                               IMPORT  --
                           A  1252    ;_malloc                             IMPORT  --
                           A  1253    ;row                                  IX-15    
                           A  1254    ;rowPtr                               IX-12    
                           A  1255    ;oppositeRowPtr                        IX-9    
                           A  1256    ;tempRow                               IX-6    
                           A  1257    ;col                                   IX-3    
                           A  1258    ;height                               IX+12    
                           A  1259    ;width                                 IX+9    
                           A  1260    ;buffer                                IX+6    
                           A  1261    
                           A  1262    
                           A  1263    ; Stack Frame Size: 43 (bytes)
                           A  1264    ;       Spill Code: -3 (instruction)
                           A  1265    
                           A  1266    
                           A  1267    .ENDFUNC "twiddle_buffer",98,"_twiddle_buffer"
                           A  1268    ;   99	
                           A  1269    ;  100	void reorder(char *arr, uint16_t length
0B049A                     A  1270    _reorder:
                           A  1271    .DEFINE "_reorder"
                           A  1272    
                           A  1273    .VALUE _reorder
                           A  1274    
                           A  1275    .CLASS 2
                           A  1276    
                           A  1277    .TYPE 65
                           A  1278    
                           A  1279    .ENDEF
                           A  1280    
                           A  1281    .BEGFUNC "reorder",100,"_reorder"
                           A  1282    
                           A  1283    .LINE 100
                           A  1284    
                           A  1285    .DEFINE "arr"
                           A  1286    
                           A  1287    .CLASS 65
                           A  1288    
                           A  1289    .VALUE 6
                           A  1290    
                           A  1291    .TYPE 34
                           A  1292    
                           A  1293    .ENDEF
                           A  1294    
                           A  1295    .DEFINE "length"
                           A  1296    
                           A  1297    .CLASS 65
                           A  1298    
                           A  1299    .VALUE 9
                           A  1300    
                           A  1301    .TYPE 13
                           A  1302    
                           A  1303    .ENDEF
                           A  1304    
                           A  1305    .DEFINE "i"
                           A  1306    
                           A  1307    .CLASS 65
                           A  1308    
                           A  1309    .VALUE -2
                           A  1310    
                           A  1311    .TYPE 13
                           A  1312    
                           A  1313    .ENDEF
                           A  1314    
                           A  1315    .DEFINE "temp"
                           A  1316    
                           A  1317    .CLASS 65
                           A  1318    
                           A  1319    .VALUE -3
                           A  1320    
                           A  1321    .TYPE 12
                           A  1322    
                           A  1323    .ENDEF
                           A  1324    
0B049A DDE5                A  1325    	PUSH	IX
0B049C DD210000 00         A  1326    	LD	IX,0
0B04A1 DD39                A  1327    	ADD	IX,SP
0B04A3 C5                  A  1328    	PUSH	BC
0B04A4 C5                  A  1329    	PUSH	BC
                           A  1330    ;  101	    uint16_t i;
                           A  1331    ;  102		for (i = 0; i < length; i += 4) {
                           A  1332    .LINE 102
                           A  1333    
0B04A5 DD36FE00            A  1334    	LD	(IX+%FFFFFFFE),%0
0B04A9 DD36FF00            A  1335    	LD	(IX+%FFFFFFFF),%0
0B04AD 18 68               A  1336    	JR	L_30
0B04AF                     A  1337    L_28:
                           A  1338    ;  103	        if (i + 2 < length) {
                           A  1339    .LINE 103
                           A  1340    
0B04AF DD07FE              A  1341    	LD	BC,(IX+%FFFFFFFE)
0B04B2 CD A2 27 0B         A  1342    	CALL	__stoiu
0B04B6 E5D1                A  1343    	LD	DE,HL
0B04B8 13                  A  1344    	INC	DE
0B04B9 13                  A  1345    	INC	DE
0B04BA DD0709              A  1346    	LD	BC,(IX+%9)
0B04BD CD A2 27 0B         A  1347    	CALL	__stoiu
0B04C1 E5C1                A  1348    	LD	BC,HL
0B04C3 D5E1                A  1349    	LD	HL,DE
0B04C5 B7                  A  1350    	OR	A,A
0B04C6 ED42                A  1351    	SBC	HL,BC
0B04C8 F2 D2 04 0B         A  1352    	JP	P,L__23
0B04CC EA 0B 05 0B         A  1353    	JP	PE,L_29
0B04D0 18 04               A  1354    	JR	L__24
0B04D2                     A  1355    L__23:
0B04D2 E2 0B 05 0B         A  1356    	JP	PO,L_29
0B04D6                     A  1357    L__24:
                           A  1358    ;  104	            uint8_t temp = arr[i];
                           A  1359    .LINE 104
                           A  1360    
0B04D6 DD07FE              A  1361    	LD	BC,(IX+%FFFFFFFE)
0B04D9 CD A2 27 0B         A  1362    	CALL	__stoiu
0B04DD DD0706              A  1363    	LD	BC,(IX+%6)
0B04E0 09                  A  1364    	ADD	HL,BC
0B04E1 DD2FFA              A  1365    	LD	(IX+%FFFFFFFA),HL
0B04E4 7E                  A  1366    	LD	A,(HL)
0B04E5 DD77FD              A  1367    	LD	(IX+%FFFFFFFD),A
                           A  1368    ;  105	            arr[i] = arr[i + 2];
                           A  1369    .LINE 105
                           A  1370    
0B04E8 DD31FA              A  1371    	LD	IY,(IX+%FFFFFFFA)
0B04EB DD07FE              A  1372    	LD	BC,(IX+%FFFFFFFE)
0B04EE CD A2 27 0B         A  1373    	CALL	__stoiu
0B04F2 DD0706              A  1374    	LD	BC,(IX+%6)
0B04F5 09                  A  1375    	ADD	HL,BC
0B04F6 FD7E02              A  1376    	LD	A,(IY+%2)
0B04F9 77                  A  1377    	LD	(HL),A
                           A  1378    ;  106	            arr[i + 2] = temp;
                           A  1379    .LINE 106
                           A  1380    
0B04FA DD07FE              A  1381    	LD	BC,(IX+%FFFFFFFE)
0B04FD CD A2 27 0B         A  1382    	CALL	__stoiu
0B0501 DD0706              A  1383    	LD	BC,(IX+%6)
0B0504 09                  A  1384    	ADD	HL,BC
0B0505 23                  A  1385    	INC	HL
0B0506 23                  A  1386    	INC	HL
0B0507 DD7EFD              A  1387    	LD	A,(IX+%FFFFFFFD)
0B050A 77                  A  1388    	LD	(HL),A
                           A  1389    ;  107	        }
                           A  1390    ;  108	    }
0B050B                     A  1391    L_29:
                           A  1392    .LINE 108
                           A  1393    
0B050B DD31FE              A  1394    	LD	IY,(IX+%FFFFFFFE)
0B050E ED2304              A  1395    	LEA	HL,IY+%4
0B0511 DD75FE              A  1396    	LD	(IX+%FFFFFFFE),L
0B0514 DD74FF              A  1397    	LD	(IX+%FFFFFFFF),H
0B0517                     A  1398    L_30:
0B0517 DD0709              A  1399    	LD	BC,(IX+%9)
0B051A DD27FE              A  1400    	LD	HL,(IX+%FFFFFFFE)
0B051D B7                  A  1401    	OR	A,A
0B051E 40ED42              A  1402    	SBC.SIS	HL,BC
0B0521 38 8C               A  1403    	JR	C,L_28
                           A  1404    ;  109	}
                           A  1405    .LINE 109
                           A  1406    
0B0523 DDF9                A  1407    	LD	SP,IX
0B0525 DDE1                A  1408    	POP	IX
0B0527 C9                  A  1409    	RET	
                           A  1410    
                           A  1411    
                           A  1412    ;**************************** _reorder ********
                           A  1413    ;Name                         Addr/Register   S
                           A  1414    ;temp                                  IX-3    
                           A  1415    ;i                                     IX-2    
                           A  1416    ;length                                IX+9    
                           A  1417    ;arr                                   IX+6    
                           A  1418    
                           A  1419    
                           A  1420    ; Stack Frame Size: 18 (bytes)
                           A  1421    ;       Spill Code: -3 (instruction)
                           A  1422    
                           A  1423    
                           A  1424    .ENDFUNC "reorder",109,"_reorder"
                           A  1425    ;  110	
                           A  1426    ;  111	void reorder_and_insert(char *arr, uint
0B0528                     A  1427    _reorder_and_insert:
                           A  1428    .DEFINE "_reorder_and_insert"
                           A  1429    
                           A  1430    .VALUE _reorder_and_insert
                           A  1431    
                           A  1432    .CLASS 2
                           A  1433    
                           A  1434    .TYPE 65
                           A  1435    
                           A  1436    .ENDEF
                           A  1437    
                           A  1438    .BEGFUNC "reorder_and_insert",111,"_reorder_and
                           A  1439    
                           A  1440    .LINE 111
                           A  1441    
                           A  1442    .DEFINE "arr"
                           A  1443    
                           A  1444    .CLASS 65
                           A  1445    
                           A  1446    .VALUE 6
                           A  1447    
                           A  1448    .TYPE 34
                           A  1449    
                           A  1450    .ENDEF
                           A  1451    
                           A  1452    .DEFINE "length"
                           A  1453    
                           A  1454    .CLASS 65
                           A  1455    
                           A  1456    .VALUE 9
                           A  1457    
                           A  1458    .TYPE 13
                           A  1459    
                           A  1460    .ENDEF
                           A  1461    
                           A  1462    .DEFINE "new_arr"
                           A  1463    
                           A  1464    .CLASS 65
                           A  1465    
                           A  1466    .VALUE 12
                           A  1467    
                           A  1468    .TYPE 290
                           A  1469    
                           A  1470    .ENDEF
                           A  1471    
                           A  1472    .DEFINE "new_length"
                           A  1473    
                           A  1474    .CLASS 65
                           A  1475    
                           A  1476    .VALUE 15
                           A  1477    
                           A  1478    .TYPE 45
                           A  1479    
                           A  1480    .ENDEF
                           A  1481    
                           A  1482    .DEFINE "insert_value"
                           A  1483    
                           A  1484    .CLASS 65
                           A  1485    
                           A  1486    .VALUE 18
                           A  1487    
                           A  1488    .TYPE 2
                           A  1489    
                           A  1490    .ENDEF
                           A  1491    
                           A  1492    .DEFINE "i"
                           A  1493    
                           A  1494    .CLASS 65
                           A  1495    
                           A  1496    .VALUE -2
                           A  1497    
                           A  1498    .TYPE 13
                           A  1499    
                           A  1500    .ENDEF
                           A  1501    
                           A  1502    .DEFINE "j"
                           A  1503    
                           A  1504    .CLASS 65
                           A  1505    
                           A  1506    .VALUE -4
                           A  1507    
                           A  1508    .TYPE 13
                           A  1509    
                           A  1510    .ENDEF
                           A  1511    
0B0528 DDE5                A  1512    	PUSH	IX
0B052A DD210000 00         A  1513    	LD	IX,0
0B052F DD39                A  1514    	ADD	IX,SP
0B0531 ED22ED              A  1515    	LEA	HL,IX+%FFFFFFED
0B0534 F9                  A  1516    	LD	SP,HL
                           A  1517    ;  112	
                           A  1518    ;  113		uint16_t i, j = 0;
                           A  1519    .LINE 113
                           A  1520    
0B0535 DD36FC00            A  1521    	LD	(IX+%FFFFFFFC),%0
0B0539 DD36FD00            A  1522    	LD	(IX+%FFFFFFFD),%0
                           A  1523    ;  114	    *new_length = (length / 3) * 4 + (l
                           A  1524    .LINE 114
                           A  1525    
0B053D DD0709              A  1526    	LD	BC,(IX+%9)
0B0540 CD A2 27 0B         A  1527    	CALL	__stoiu
0B0544 01030000            A  1528    	LD	BC,3
0B0548 CD 5D 29 0B         A  1529    	CALL	__idivs
0B054C 29                  A  1530    	ADD	HL,HL
0B054D 29                  A  1531    	ADD	HL,HL
0B054E E5D1                A  1532    	LD	DE,HL
0B0550 DD0709              A  1533    	LD	BC,(IX+%9)
0B0553 CD A2 27 0B         A  1534    	CALL	__stoiu
0B0557 01030000            A  1535    	LD	BC,3
0B055B CD C0 25 0B         A  1536    	CALL	__irems
0B055F 19                  A  1537    	ADD	HL,DE
0B0560 E5C1                A  1538    	LD	BC,HL
0B0562 DD270F              A  1539    	LD	HL,(IX+%F)
0B0565 71                  A  1540    	LD	(HL),C
0B0566 23                  A  1541    	INC	HL
0B0567 70                  A  1542    	LD	(HL),B
                           A  1543    ;  115	    *new_arr = (char *) malloc(*new_len
                           A  1544    .LINE 115
                           A  1545    
0B0568 DD270F              A  1546    	LD	HL,(IX+%F)
0B056B ED07                A  1547    	LD	BC,(HL)
0B056D CD A2 27 0B         A  1548    	CALL	__stoiu
0B0571 E5                  A  1549    	PUSH	HL
0B0572 CD 0D 25 0B         A  1550    	CALL	_malloc
0B0576 C1                  A  1551    	POP	BC
0B0577 DD310C              A  1552    	LD	IY,(IX+%C)
0B057A FD2F00              A  1553    	LD	(IY),HL
                           A  1554    ;  116	
                           A  1555    ;  117	    for (i = 0; i < length; i += 3) {
                           A  1556    .LINE 117
                           A  1557    
0B057D DD36FE00            A  1558    	LD	(IX+%FFFFFFFE),%0
0B0581 DD36FF00            A  1559    	LD	(IX+%FFFFFFFF),%0
0B0585 C3 8E 06 0B         A  1560    	JR	L_42
0B0589                     A  1561    L_40:
                           A  1562    ;  118	        
                           A  1563    ;  119	        (*new_arr)[j] = (i + 2 < length
                           A  1564    .LINE 119
                           A  1565    
0B0589 DD07FE              A  1566    	LD	BC,(IX+%FFFFFFFE)
0B058C CD A2 27 0B         A  1567    	CALL	__stoiu
0B0590 E5D1                A  1568    	LD	DE,HL
0B0592 13                  A  1569    	INC	DE
0B0593 13                  A  1570    	INC	DE
0B0594 DD0709              A  1571    	LD	BC,(IX+%9)
0B0597 CD A2 27 0B         A  1572    	CALL	__stoiu
0B059B E5C1                A  1573    	LD	BC,HL
0B059D D5E1                A  1574    	LD	HL,DE
0B059F B7                  A  1575    	OR	A,A
0B05A0 ED42                A  1576    	SBC	HL,BC
0B05A2 F2 AC 05 0B         A  1577    	JP	P,L__29
0B05A6 EA C8 05 0B         A  1578    	JP	PE,L_34
0B05AA 18 04               A  1579    	JR	L__30
0B05AC                     A  1580    L__29:
0B05AC E2 C8 05 0B         A  1581    	JP	PO,L_34
0B05B0                     A  1582    L__30:
0B05B0 DD07FE              A  1583    	LD	BC,(IX+%FFFFFFFE)
0B05B3 CD A2 27 0B         A  1584    	CALL	__stoiu
0B05B7 DD0706              A  1585    	LD	BC,(IX+%6)
0B05BA 09                  A  1586    	ADD	HL,BC
0B05BB 23                  A  1587    	INC	HL
0B05BC 23                  A  1588    	INC	HL
0B05BD 7E                  A  1589    	LD	A,(HL)
0B05BE 47                  A  1590    	LD	B,A
0B05BF 17ED62              A  1591    	SEXT	HL
0B05C2 68                  A  1592    	LD	L,B
0B05C3 DD2FF9              A  1593    	LD	(IX+%FFFFFFF9),HL
0B05C6 18 07               A  1594    	JR	L_35
0B05C8                     A  1595    L_34:
0B05C8 01000000            A  1596    	LD	BC,0
0B05CC DD0FF9              A  1597    	LD	(IX+%FFFFFFF9),BC
0B05CF                     A  1598    L_35:
0B05CF DD310C              A  1599    	LD	IY,(IX+%C)
0B05D2 DD07FC              A  1600    	LD	BC,(IX+%FFFFFFFC)
0B05D5 CD A2 27 0B         A  1601    	CALL	__stoiu
0B05D9 FD0700              A  1602    	LD	BC,(IY)
0B05DC 09                  A  1603    	ADD	HL,BC
0B05DD DD2FF3              A  1604    	LD	(IX+%FFFFFFF3),HL
0B05E0 DD7EF9              A  1605    	LD	A,(IX+%FFFFFFF9)
0B05E3 DD27F3              A  1606    	LD	HL,(IX+%FFFFFFF3)
0B05E6 77                  A  1607    	LD	(HL),A
                           A  1608    ;  120	        (*new_arr)[j + 1] = (i + 1 < le
                           A  1609    .LINE 120
                           A  1610    
0B05E7 DD07FE              A  1611    	LD	BC,(IX+%FFFFFFFE)
0B05EA CD A2 27 0B         A  1612    	CALL	__stoiu
0B05EE E5D1                A  1613    	LD	DE,HL
0B05F0 13                  A  1614    	INC	DE
0B05F1 DD0709              A  1615    	LD	BC,(IX+%9)
0B05F4 CD A2 27 0B         A  1616    	CALL	__stoiu
0B05F8 E5C1                A  1617    	LD	BC,HL
0B05FA D5E1                A  1618    	LD	HL,DE
0B05FC B7                  A  1619    	OR	A,A
0B05FD ED42                A  1620    	SBC	HL,BC
0B05FF F2 09 06 0B         A  1621    	JP	P,L__31
0B0603 EA 24 06 0B         A  1622    	JP	PE,L_38
0B0607 18 04               A  1623    	JR	L__32
0B0609                     A  1624    L__31:
0B0609 E2 24 06 0B         A  1625    	JP	PO,L_38
0B060D                     A  1626    L__32:
0B060D DD07FE              A  1627    	LD	BC,(IX+%FFFFFFFE)
0B0610 CD A2 27 0B         A  1628    	CALL	__stoiu
0B0614 DD0706              A  1629    	LD	BC,(IX+%6)
0B0617 09                  A  1630    	ADD	HL,BC
0B0618 23                  A  1631    	INC	HL
0B0619 7E                  A  1632    	LD	A,(HL)
0B061A 47                  A  1633    	LD	B,A
0B061B 17ED62              A  1634    	SEXT	HL
0B061E 68                  A  1635    	LD	L,B
0B061F DD2FF6              A  1636    	LD	(IX+%FFFFFFF6),HL
0B0622 18 07               A  1637    	JR	L_39
0B0624                     A  1638    L_38:
0B0624 01000000            A  1639    	LD	BC,0
0B0628 DD0FF6              A  1640    	LD	(IX+%FFFFFFF6),BC
0B062B                     A  1641    L_39:
0B062B DD7EF6              A  1642    	LD	A,(IX+%FFFFFFF6)
0B062E DD27F3              A  1643    	LD	HL,(IX+%FFFFFFF3)
0B0631 23                  A  1644    	INC	HL
0B0632 77                  A  1645    	LD	(HL),A
                           A  1646    ;  121	        (*new_arr)[j + 2] = arr[i];
                           A  1647    .LINE 121
                           A  1648    
0B0633 DD07FE              A  1649    	LD	BC,(IX+%FFFFFFFE)
0B0636 CD A2 27 0B         A  1650    	CALL	__stoiu
0B063A DD0706              A  1651    	LD	BC,(IX+%6)
0B063D 09                  A  1652    	ADD	HL,BC
0B063E E5FDE1              A  1653    	LD	IY,HL
0B0641 DD270C              A  1654    	LD	HL,(IX+%C)
0B0644 DD2FED              A  1655    	LD	(IX+%FFFFFFED),HL	; spill
0B0647 DD07FC              A  1656    	LD	BC,(IX+%FFFFFFFC)
0B064A CD A2 27 0B         A  1657    	CALL	__stoiu
0B064E DD2FF0              A  1658    	LD	(IX+%FFFFFFF0),HL	; spill
0B0651 DD27ED              A  1659    	LD	HL,(IX+%FFFFFFED)	; unspill
0B0654 ED07                A  1660    	LD	BC,(HL)
0B0656 DD27F0              A  1661    	LD	HL,(IX+%FFFFFFF0)	; unspill
0B0659 09                  A  1662    	ADD	HL,BC
0B065A 23                  A  1663    	INC	HL
0B065B 23                  A  1664    	INC	HL
0B065C FD7E00              A  1665    	LD	A,(IY)
0B065F 77                  A  1666    	LD	(HL),A
                           A  1667    ;  122	        
                           A  1668    ;  123	        (*new_arr)[j + 3] = 0xFF;
                           A  1669    .LINE 123
                           A  1670    
0B0660 DD310C              A  1671    	LD	IY,(IX+%C)
0B0663 DD07FC              A  1672    	LD	BC,(IX+%FFFFFFFC)
0B0666 CD A2 27 0B         A  1673    	CALL	__stoiu
0B066A FD0700              A  1674    	LD	BC,(IY)
0B066D 09                  A  1675    	ADD	HL,BC
0B066E E5FDE1              A  1676    	LD	IY,HL
0B0671 ED2303              A  1677    	LEA	HL,IY+%3
0B0674 36FF                A  1678    	LD	(HL),%FF
                           A  1679    ;  124	
                           A  1680    ;  125	        j += 4;
                           A  1681    .LINE 125
                           A  1682    
0B0676 DD31FC              A  1683    	LD	IY,(IX+%FFFFFFFC)
0B0679 ED2304              A  1684    	LEA	HL,IY+%4
0B067C DD75FC              A  1685    	LD	(IX+%FFFFFFFC),L
0B067F DD74FD              A  1686    	LD	(IX+%FFFFFFFD),H
0B0682 DD31FE              A  1687    	LD	IY,(IX+%FFFFFFFE)
0B0685 ED2303              A  1688    	LEA	HL,IY+%3
0B0688 DD75FE              A  1689    	LD	(IX+%FFFFFFFE),L
0B068B DD74FF              A  1690    	LD	(IX+%FFFFFFFF),H
                           A  1691    ;  126	    }
0B068E                     A  1692    L_42:
                           A  1693    .LINE 126
                           A  1694    
0B068E DD0709              A  1695    	LD	BC,(IX+%9)
0B0691 DD27FE              A  1696    	LD	HL,(IX+%FFFFFFFE)
0B0694 B7                  A  1697    	OR	A,A
0B0695 40ED42              A  1698    	SBC.SIS	HL,BC
0B0698 DA 89 05 0B         A  1699    	JR	C,L_40
                           A  1700    ;  127		free(new_arr);
                           A  1701    .LINE 127
                           A  1702    
0B069C DD070C              A  1703    	LD	BC,(IX+%C)
0B069F C5                  A  1704    	PUSH	BC
0B06A0 CD 08 24 0B         A  1705    	CALL	_free
0B06A4 C1                  A  1706    	POP	BC
                           A  1707    ;  128	}
                           A  1708    .LINE 128
                           A  1709    
0B06A5 DDF9                A  1710    	LD	SP,IX
0B06A7 DDE1                A  1711    	POP	IX
0B06A9 C9                  A  1712    	RET	
                           A  1713    
                           A  1714    
                           A  1715    ;**************************** _reorder_and_inse
                           A  1716    ;Name                         Addr/Register   S
                           A  1717    ;_free                               IMPORT  --
                           A  1718    ;_malloc                             IMPORT  --
                           A  1719    ;G_0                                  IX-13    
                           A  1720    ;temp36                               IX-10    
                           A  1721    ;temp32                                IX-7    
                           A  1722    ;j                                     IX-4    
                           A  1723    ;i                                     IX-2    
                           A  1724    ;insert_value                         IX+18    
                           A  1725    ;new_length                           IX+15    
                           A  1726    ;new_arr                              IX+12    
                           A  1727    ;length                                IX+9    
                           A  1728    ;arr                                   IX+6    
                           A  1729    
                           A  1730    
                           A  1731    ; Stack Frame Size: 40 (bytes)
                           A  1732    ;       Spill Code: -3 (instruction)
                           A  1733    
                           A  1734    
                           A  1735    .ENDFUNC "reorder_and_insert",128,"_reorder_and
                           A  1736    ;  129	
                           A  1737    ;  130	bmp_info load_bmp_big(const char * file
0B06AA                     A  1738    _load_bmp_big:
                           A  1739    .DEFINE "_load_bmp_big"
                           A  1740    
                           A  1741    .VALUE _load_bmp_big
                           A  1742    
                           A  1743    .CLASS 2
                           A  1744    
                           A  1745    .TAG "NONAME6"
                           A  1746    
                           A  1747    .TYPE 72
                           A  1748    
                           A  1749    .ENDEF
                           A  1750    
                           A  1751    .BEGFUNC "load_bmp_big",130,"_load_bmp_big"
                           A  1752    
                           A  1753    .LINE 130
                           A  1754    
                           A  1755    .DEFINE "filename"
                           A  1756    
                           A  1757    .CLASS 65
                           A  1758    
                           A  1759    .VALUE 9
                           A  1760    
                           A  1761    .TYPE 194
                           A  1762    
                           A  1763    .ENDEF
                           A  1764    
                           A  1765    .DEFINE "slot"
                           A  1766    
                           A  1767    .CLASS 65
                           A  1768    
                           A  1769    .VALUE 12
                           A  1770    
                           A  1771    .TYPE 12
                           A  1772    
                           A  1773    .ENDEF
                           A  1774    
                           A  1775    .DEFINE "file"
                           A  1776    
                           A  1777    .CLASS 65
                           A  1778    
                           A  1779    .VALUE -1
                           A  1780    
                           A  1781    .TYPE 12
                           A  1782    
                           A  1783    .ENDEF
                           A  1784    
                           A  1785    .DEFINE "y"
                           A  1786    
                           A  1787    .CLASS 65
                           A  1788    
                           A  1789    .VALUE -5
                           A  1790    
                           A  1791    .TYPE 5
                           A  1792    
                           A  1793    .ENDEF
                           A  1794    
                           A  1795    .DEFINE "bit_depth"
                           A  1796    
                           A  1797    .CLASS 65
                           A  1798    
                           A  1799    .VALUE -9
                           A  1800    
                           A  1801    .TYPE 5
                           A  1802    
                           A  1803    .ENDEF
                           A  1804    
                           A  1805    .DEFINE "i"
                           A  1806    
                           A  1807    .CLASS 65
                           A  1808    
                           A  1809    .VALUE -13
                           A  1810    
                           A  1811    .TYPE 5
                           A  1812    
                           A  1813    .ENDEF
                           A  1814    
                           A  1815    .DEFINE "src"
                           A  1816    
                           A  1817    .CLASS 65
                           A  1818    
                           A  1819    .VALUE -16
                           A  1820    
                           A  1821    .TYPE 34
                           A  1822    
                           A  1823    .ENDEF
                           A  1824    
                           A  1825    .DEFINE "height"
                           A  1826    
                           A  1827    .CLASS 65
                           A  1828    
                           A  1829    .VALUE -20
                           A  1830    
                           A  1831    .TYPE 5
                           A  1832    
                           A  1833    .ENDEF
                           A  1834    
                           A  1835    .DEFINE "return_info"
                           A  1836    
                           A  1837    .CLASS 65
                           A  1838    
                           A  1839    .VALUE -25
                           A  1840    
                           A  1841    .TAG "NONAME6"
                           A  1842    
                           A  1843    .TYPE 8
                           A  1844    
                           A  1845    .ENDEF
                           A  1846    
                           A  1847    .DEFINE "width"
                           A  1848    
                           A  1849    .CLASS 65
                           A  1850    
                           A  1851    .VALUE -29
                           A  1852    
                           A  1853    .TYPE 5
                           A  1854    
                           A  1855    .ENDEF
                           A  1856    
                           A  1857    .DEFINE "row_padding"
                           A  1858    
                           A  1859    .CLASS 65
                           A  1860    
                           A  1861    .VALUE -41
                           A  1862    
                           A  1863    .TYPE 5
                           A  1864    
                           A  1865    .ENDEF
                           A  1866    
                           A  1867    .DEFINE "index"
                           A  1868    
                           A  1869    .CLASS 65
                           A  1870    
                           A  1871    .VALUE -42
                           A  1872    
                           A  1873    .TYPE 12
                           A  1874    
                           A  1875    .ENDEF
                           A  1876    
                           A  1877    .DEFINE "color_table_size"
                           A  1878    
                           A  1879    .CLASS 65
                           A  1880    
                           A  1881    .VALUE -46
                           A  1882    
                           A  1883    .TYPE 15
                           A  1884    
                           A  1885    .ENDEF
                           A  1886    
                           A  1887    .DEFINE "x"
                           A  1888    
                           A  1889    .CLASS 65
                           A  1890    
                           A  1891    .VALUE -50
                           A  1892    
                           A  1893    .TYPE 5
                           A  1894    
                           A  1895    .ENDEF
                           A  1896    
                           A  1897    .DEFINE "r"
                           A  1898    
                           A  1899    .CLASS 65
                           A  1900    
                           A  1901    .VALUE -51
                           A  1902    
                           A  1903    .TYPE 12
                           A  1904    
                           A  1905    .ENDEF
                           A  1906    
                           A  1907    .DEFINE "g"
                           A  1908    
                           A  1909    .CLASS 65
                           A  1910    
                           A  1911    .VALUE -52
                           A  1912    
                           A  1913    .TYPE 12
                           A  1914    
                           A  1915    .ENDEF
                           A  1916    
                           A  1917    .DEFINE "b"
                           A  1918    
                           A  1919    .CLASS 65
                           A  1920    
                           A  1921    .VALUE -53
                           A  1922    
                           A  1923    .TYPE 12
                           A  1924    
                           A  1925    .ENDEF
                           A  1926    
                           A  1927    .DEFINE "new_row_size"
                           A  1928    
                           A  1929    .CLASS 65
                           A  1930    
                           A  1931    .VALUE -55
                           A  1932    
                           A  1933    .TYPE 13
                           A  1934    
                           A  1935    .ENDEF
                           A  1936    
                           A  1937    .DEFINE "fo"
                           A  1938    
                           A  1939    .CLASS 65
                           A  1940    
                           A  1941    .VALUE -58
                           A  1942    
                           A  1943    .TAG "NONAME5"
                           A  1944    
                           A  1945    .TYPE 40
                           A  1946    
                           A  1947    .ENDEF
                           A  1948    
                           A  1949    .DEFINE "row_24bpp"
                           A  1950    
                           A  1951    .CLASS 65
                           A  1952    
                           A  1953    .VALUE -61
                           A  1954    
                           A  1955    .TYPE 34
                           A  1956    
                           A  1957    .ENDEF
                           A  1958    
                           A  1959    .DEFINE "image_start"
                           A  1960    
                           A  1961    .CLASS 65
                           A  1962    
                           A  1963    .VALUE -65
                           A  1964    
                           A  1965    .TYPE 5
                           A  1966    
                           A  1967    .ENDEF
                           A  1968    
                           A  1969    .DEFINE "biSize"
                           A  1970    
                           A  1971    .CLASS 65
                           A  1972    
                           A  1973    .VALUE -69
                           A  1974    
                           A  1975    .TYPE 15
                           A  1976    
                           A  1977    .ENDEF
                           A  1978    
                           A  1979    .DEFINE "image_buffer"
                           A  1980    
                           A  1981    .CLASS 65
                           A  1982    
                           A  1983    .VALUE -72
                           A  1984    
                           A  1985    .TYPE 34
                           A  1986    
                           A  1987    .ENDEF
                           A  1988    
                           A  1989    .DEFINE "non_pad_row"
                           A  1990    
                           A  1991    .CLASS 65
                           A  1992    
                           A  1993    .VALUE -75
                           A  1994    
                           A  1995    .TYPE 4
                           A  1996    
                           A  1997    .ENDEF
                           A  1998    
                           A  1999    .DEFINE "non_pad_row"
                           A  2000    
                           A  2001    .CLASS 65
                           A  2002    
                           A  2003    .VALUE -78
                           A  2004    
                           A  2005    .TYPE 4
                           A  2006    
                           A  2007    .ENDEF
                           A  2008    
                           A  2009    .DEFINE "header"
                           A  2010    
                           A  2011    .CLASS 65
                           A  2012    
                           A  2013    .VALUE -132
                           A  2014    
                           A  2015    .DIM 54
                           A  2016    
                           A  2017    .TYPE 98
                           A  2018    
                           A  2019    .ENDEF
                           A  2020    
                           A  2021    .DEFINE "color_table"
                           A  2022    
                           A  2023    .CLASS 65
                           A  2024    
                           A  2025    .VALUE -1156
                           A  2026    
                           A  2027    .DIM 1024
                           A  2028    
                           A  2029    .TYPE 98
                           A  2030    
                           A  2031    .ENDEF
                           A  2032    
0B06AA DDE5                A  2033    	PUSH	IX
0B06AC DD210000 00         A  2034    	LD	IX,0
0B06B1 DD39                A  2035    	ADD	IX,SP
0B06B3 2162FBFF            A  2036    	LD	HL,-1182
0B06B7 39                  A  2037    	ADD	HL,SP
0B06B8 F9                  A  2038    	LD	SP,HL
                           A  2039    ;  131	
                           A  2040    ;  132	    int32_t image_start, width, height,
                           A  2041    ;  133		char* row_24bpp;
                           A  2042    ;  134	    uint8_t pixel[4], file, r, g, b, in
                           A  2043    ;  135	    char header[54], color_table[1024];
                           A  2044    ;  136	    uint32_t pixel_value, color_table_s
                           A  2045    ;  137	    uint32_t biSize;
                           A  2046    ;  138	    FIL * fo;
                           A  2047    ;  139		bmp_info return_info;
                           A  2048    ;  140	
                           A  2049    ;  141	    char * src;
                           A  2050    ;  142	    char * image_buffer;
                           A  2051    ;  143		
                           A  2052    ;  144		//if (game.vgm_file != NULL) parse_
                           A  2053    ;  145		
                           A  2054    ;  146		return_info.bmp_width = 0;
                           A  2055    .LINE 146
                           A  2056    
0B06B9 DD36E700            A  2057    	LD	(IX+%FFFFFFE7),%0
0B06BD DD36E800            A  2058    	LD	(IX+%FFFFFFE8),%0
                           A  2059    ;  147		return_info.bmp_height = 0;
                           A  2060    .LINE 147
                           A  2061    
0B06C1 DD36E900            A  2062    	LD	(IX+%FFFFFFE9),%0
0B06C5 DD36EA00            A  2063    	LD	(IX+%FFFFFFEA),%0
                           A  2064    ;  148		return_info.bmp_bitdepth = 0;	
                           A  2065    .LINE 148
                           A  2066    
0B06C9 DD36EB00            A  2067    	LD	(IX+%FFFFFFEB),%0
                           A  2068    ;  149	
                           A  2069    ;  150	    file = mos_fopen(filename, fa_read)
                           A  2070    .LINE 150
                           A  2071    
0B06CD 01010000            A  2072    	LD	BC,1
0B06D1 C5                  A  2073    	PUSH	BC
0B06D2 DD0709              A  2074    	LD	BC,(IX+%9)
0B06D5 C5                  A  2075    	PUSH	BC
0B06D6 CD 57 22 0B         A  2076    	CALL	_mos_fopen
0B06DA C1                  A  2077    	POP	BC
0B06DB C1                  A  2078    	POP	BC
0B06DC DD77FF              A  2079    	LD	(IX+%FFFFFFFF),A
                           A  2080    ;  151	    if (!file) {
                           A  2081    .LINE 151
                           A  2082    
0B06DF B7                  A  2083    	OR	A,A
0B06E0 20 3B               A  2084    	JR	NZ,L_46
                           A  2085    ;  152	        printf("Error: could not open %
                           A  2086    .LINE 152
                           A  2087    
0B06E2 01 A8 27 0B         A  2088    	LD	BC,___print_uputch
0B06E6 ED43 D8 2A 0B       A  2089    	LD	(___print_xputch),BC
0B06EB 01 DE 2A 0B         A  2090    	LD	BC,L__35
0B06EF C5                  A  2091    	PUSH	BC
0B06F0 CD 0D 26 0B         A  2092    	CALL	___print_sendstring
0B06F4 C1                  A  2093    	POP	BC
0B06F5 DD0709              A  2094    	LD	BC,(IX+%9)
0B06F8 C5                  A  2095    	PUSH	BC
0B06F9 CD 0D 26 0B         A  2096    	CALL	___print_sendstring
0B06FD C1                  A  2097    	POP	BC
0B06FE 01 F5 2A 0B         A  2098    	LD	BC,L__36
0B0702 C5                  A  2099    	PUSH	BC
0B0703 CD 0D 26 0B         A  2100    	CALL	___print_sendstring
0B0707 C1                  A  2101    	POP	BC
                           A  2102    ;  153	        return return_info;
                           A  2103    .LINE 153
                           A  2104    
0B0708 ED2206              A  2105    	LEA	HL,IX+%6
0B070B ED17                A  2106    	LD	DE,(HL)
0B070D ED22E7              A  2107    	LEA	HL,IX+%FFFFFFE7
0B0710 01050000            A  2108    	LD	BC,5
0B0714 EDB0                A  2109    	LDIR	
0B0716 DD2706              A  2110    	LD	HL,(IX+%6)
0B0719 C3 1D 0F 0B         A  2111    	JR	L_88
                           A  2112    ;  154	    }
0B071D                     A  2113    L_46:
                           A  2114    .LINE 154
                           A  2115    
                           A  2116    ;  155	    fo = (FIL * ) mos_getfil(file);
                           A  2117    .LINE 155
                           A  2118    
0B071D DD4EFF              A  2119    	LD	C,(IX+%FFFFFFFF)
0B0720 0600                A  2120    	LD	B,%0
0B0722 C5                  A  2121    	PUSH	BC
0B0723 CD DD 23 0B         A  2122    	CALL	_mos_getfil
0B0727 C1                  A  2123    	POP	BC
0B0728 DD2FC6              A  2124    	LD	(IX+%FFFFFFC6),HL
                           A  2125    ;  156	
                           A  2126    ;  157	    mos_fread(file, header, 54);
                           A  2127    .LINE 157
                           A  2128    
0B072B 01360000            A  2129    	LD	BC,54
0B072F C5                  A  2130    	PUSH	BC
0B0730 DDE5E1              A  2131    	LD	HL,IX
0B0733 017CFFFF            A  2132    	LD	BC,-132
0B0737 09                  A  2133    	ADD	HL,BC
0B0738 E5C1                A  2134    	LD	BC,HL
0B073A C5                  A  2135    	PUSH	BC
0B073B DD4EFF              A  2136    	LD	C,(IX+%FFFFFFFF)
0B073E 0600                A  2137    	LD	B,%0
0B0740 C5                  A  2138    	PUSH	BC
0B0741 CD 84 23 0B         A  2139    	CALL	_mos_fread
0B0745 C1                  A  2140    	POP	BC
0B0746 C1                  A  2141    	POP	BC
0B0747 C1                  A  2142    	POP	BC
                           A  2143    ;  158	
                           A  2144    ;  159		image_start = * (uint32_t * ) & hea
                           A  2145    .LINE 159
                           A  2146    
0B0748 ED2286              A  2147    	LEA	HL,IX+%FFFFFF86
0B074B ED07                A  2148    	LD	BC,(HL)
0B074D 23                  A  2149    	INC	HL
0B074E 23                  A  2150    	INC	HL
0B074F 23                  A  2151    	INC	HL
0B0750 7E                  A  2152    	LD	A,(HL)
0B0751 DD0FBF              A  2153    	LD	(IX+%FFFFFFBF),BC
0B0754 DD77C2              A  2154    	LD	(IX+%FFFFFFC2),A
                           A  2155    ;  160	    biSize = * (uint32_t * ) & header[1
                           A  2156    .LINE 160
                           A  2157    
0B0757 ED228A              A  2158    	LEA	HL,IX+%FFFFFF8A
0B075A ED07                A  2159    	LD	BC,(HL)
0B075C 23                  A  2160    	INC	HL
0B075D 23                  A  2161    	INC	HL
0B075E 23                  A  2162    	INC	HL
0B075F 7E                  A  2163    	LD	A,(HL)
0B0760 DD0FBB              A  2164    	LD	(IX+%FFFFFFBB),BC
0B0763 DD77BE              A  2165    	LD	(IX+%FFFFFFBE),A
                           A  2166    ;  161	    width = * (INT32 * ) & header[18];
                           A  2167    .LINE 161
                           A  2168    
0B0766 ED228E              A  2169    	LEA	HL,IX+%FFFFFF8E
0B0769 ED07                A  2170    	LD	BC,(HL)
0B076B 23                  A  2171    	INC	HL
0B076C 23                  A  2172    	INC	HL
0B076D 23                  A  2173    	INC	HL
0B076E 7E                  A  2174    	LD	A,(HL)
0B076F DD0FE3              A  2175    	LD	(IX+%FFFFFFE3),BC
0B0772 DD77E6              A  2176    	LD	(IX+%FFFFFFE6),A
                           A  2177    ;  162	    height = * (INT32 * ) & header[22];
                           A  2178    .LINE 162
                           A  2179    
0B0775 ED2292              A  2180    	LEA	HL,IX+%FFFFFF92
0B0778 ED07                A  2181    	LD	BC,(HL)
0B077A 23                  A  2182    	INC	HL
0B077B 23                  A  2183    	INC	HL
0B077C 23                  A  2184    	INC	HL
0B077D 7E                  A  2185    	LD	A,(HL)
0B077E DD0FEC              A  2186    	LD	(IX+%FFFFFFEC),BC
0B0781 DD77EF              A  2187    	LD	(IX+%FFFFFFEF),A
                           A  2188    ;  163	    bit_depth = * (uint16_t * ) & heade
                           A  2189    .LINE 163
                           A  2190    
0B0784 ED2298              A  2191    	LEA	HL,IX+%FFFFFF98
0B0787 ED07                A  2192    	LD	BC,(HL)
0B0789 CD A2 27 0B         A  2193    	CALL	__stoiu
0B078D E5C1                A  2194    	LD	BC,HL
0B078F AF                  A  2195    	XOR	A,A
0B0790 DD0FF7              A  2196    	LD	(IX+%FFFFFFF7),BC
0B0793 DD77FA              A  2197    	LD	(IX+%FFFFFFFA),A
                           A  2198    ;  164	    color_table_size = * (uint32_t * ) 
                           A  2199    .LINE 164
                           A  2200    
0B0796 DDE5FDE1            A  2201    	LD	IY,IX
0B079A 117CFFFF            A  2202    	LD	DE,-132
0B079E FD19                A  2203    	ADD	IY,DE
0B07A0 ED22AA              A  2204    	LEA	HL,IX+%FFFFFFAA
0B07A3 ED17                A  2205    	LD	DE,(HL)
0B07A5 23                  A  2206    	INC	HL
0B07A6 23                  A  2207    	INC	HL
0B07A7 23                  A  2208    	INC	HL
0B07A8 7E                  A  2209    	LD	A,(HL)
0B07A9 DD1FD2              A  2210    	LD	(IX+%FFFFFFD2),DE
0B07AC DD77D5              A  2211    	LD	(IX+%FFFFFFD5),A
                           A  2212    ;  165		
                           A  2213    ;  166		
                           A  2214    ;  167	    image_buffer = (char * ) malloc(wid
                           A  2215    .LINE 167
                           A  2216    
0B07AF DD27E3              A  2217    	LD	HL,(IX+%FFFFFFE3)
0B07B2 DD5EE6              A  2218    	LD	E,(IX+%FFFFFFE6)
0B07B5 DD7EFA              A  2219    	LD	A,(IX+%FFFFFFFA)
0B07B8 CD 17 2A 0B         A  2220    	CALL	__lmuls
0B07BC 01080000            A  2221    	LD	BC,8
0B07C0 AF                  A  2222    	XOR	A,A
0B07C1 CD 2E 28 0B         A  2223    	CALL	__ldivs
0B07C5 E5                  A  2224    	PUSH	HL
0B07C6 C5                  A  2225    	PUSH	BC
0B07C7 E5                  A  2226    	PUSH	HL
0B07C8 FDE5E1              A  2227    	LD	HL,IY
0B07CB 0162FBFF            A  2228    	LD	BC,-1182
0B07CF CD F8 25 0B         A  2229    	CALL	__istix
0B07D3 E1                  A  2230    	POP	HL
0B07D4 C1                  A  2231    	POP	BC
0B07D5 CD 0D 25 0B         A  2232    	CALL	_malloc
0B07D9 C5                  A  2233    	PUSH	BC
0B07DA 0162FBFF            A  2234    	LD	BC,-1182
0B07DE E5                  A  2235    	PUSH	HL
0B07DF CD 84 2A 0B         A  2236    	CALL	__ildix
0B07E3 E5FDE1              A  2237    	LD	IY,HL
0B07E6 E1                  A  2238    	POP	HL
0B07E7 C1                  A  2239    	POP	BC
0B07E8 C1                  A  2240    	POP	BC
0B07E9 DD2FB8              A  2241    	LD	(IX+%FFFFFFB8),HL
                           A  2242    ;  168	
                           A  2243    ;  169	    if (color_table_size == 0 && bit_de
                           A  2244    .LINE 169
                           A  2245    
0B07EC DD27D2              A  2246    	LD	HL,(IX+%FFFFFFD2)
0B07EF DD5ED5              A  2247    	LD	E,(IX+%FFFFFFD5)
0B07F2 01000000            A  2248    	LD	BC,0
0B07F6 AF                  A  2249    	XOR	A,A
0B07F7 CD 9D 29 0B         A  2250    	CALL	__lcmpu
0B07FB 20 1C               A  2251    	JR	NZ,L_55
0B07FD DD27F7              A  2252    	LD	HL,(IX+%FFFFFFF7)
0B0800 DD5EFA              A  2253    	LD	E,(IX+%FFFFFFFA)
0B0803 01080000            A  2254    	LD	BC,8
0B0807 AF                  A  2255    	XOR	A,A
0B0808 CD 9D 29 0B         A  2256    	CALL	__lcmps
0B080C 20 0B               A  2257    	JR	NZ,L_55
                           A  2258    ;  170	        color_table_size = 256;
                           A  2259    .LINE 170
                           A  2260    
0B080E 01000100            A  2261    	LD	BC,256
0B0812 AF                  A  2262    	XOR	A,A
0B0813 DD0FD2              A  2263    	LD	(IX+%FFFFFFD2),BC
0B0816 DD77D5              A  2264    	LD	(IX+%FFFFFFD5),A
                           A  2265    ;  171	    }
0B0819                     A  2266    L_55:
                           A  2267    .LINE 171
                           A  2268    
                           A  2269    ;  172	
                           A  2270    ;  173	    if (color_table_size > 0) mos_fread
                           A  2271    .LINE 173
                           A  2272    
0B0819 B7                  A  2273    	OR	A,A
0B081A ED62                A  2274    	SBC	HL,HL
0B081C 1E00                A  2275    	LD	E,%0
0B081E DD07D2              A  2276    	LD	BC,(IX+%FFFFFFD2)
0B0821 DD7ED5              A  2277    	LD	A,(IX+%FFFFFFD5)
0B0824 CD 9D 29 0B         A  2278    	CALL	__lcmpu
0B0828 30 22               A  2279    	JR	NC,L_54
0B082A DD27D2              A  2280    	LD	HL,(IX+%FFFFFFD2)
0B082D 29                  A  2281    	ADD	HL,HL
0B082E 29                  A  2282    	ADD	HL,HL
0B082F E5                  A  2283    	PUSH	HL
0B0830 DDE5E1              A  2284    	LD	HL,IX
0B0833 017CFBFF            A  2285    	LD	BC,-1156
0B0837 09                  A  2286    	ADD	HL,BC
0B0838 E5C1                A  2287    	LD	BC,HL
0B083A C5                  A  2288    	PUSH	BC
0B083B DD4EFF              A  2289    	LD	C,(IX+%FFFFFFFF)
0B083E 0600                A  2290    	LD	B,%0
0B0840 C5                  A  2291    	PUSH	BC
0B0841 CD 84 23 0B         A  2292    	CALL	_mos_fread
0B0845 C1                  A  2293    	POP	BC
0B0846 C1                  A  2294    	POP	BC
0B0847 C1                  A  2295    	POP	BC
                           A  2296    ;  174	
                           A  2297    ;  175	    else if (biSize > 40) { //If for an
                           A  2298    .LINE 175
                           A  2299    
0B0848 C3 2D 09 0B         A  2300    	JR	L_59
0B084C                     A  2301    L_54:
0B084C 21280000            A  2302    	LD	HL,40
0B0850 DD07BB              A  2303    	LD	BC,(IX+%FFFFFFBB)
0B0853 DD7EBE              A  2304    	LD	A,(IX+%FFFFFFBE)
0B0856 CD 9D 29 0B         A  2305    	CALL	__lcmpu
0B085A D2 2D 09 0B         A  2306    	JR	NC,L_59
                           A  2307    ;  176	
                           A  2308    ;  177	        i = biSize - 40;
                           A  2309    .LINE 177
                           A  2310    
0B085E DD27BB              A  2311    	LD	HL,(IX+%FFFFFFBB)
0B0861 DD5EBE              A  2312    	LD	E,(IX+%FFFFFFBE)
0B0864 01D8FFFF            A  2313    	LD	BC,16777176
0B0868 3EFF                A  2314    	LD	A,%FF
0B086A CD 02 24 0B         A  2315    	CALL	__ladd
0B086E DD2FF3              A  2316    	LD	(IX+%FFFFFFF3),HL
0B0871 DD73F6              A  2317    	LD	(IX+%FFFFFFF6),E
                           A  2318    ;  178	        while (i--> 0) {
                           A  2319    .LINE 178
                           A  2320    
0B0874 18 29               A  2321    	JR	L_50
0B0876                     A  2322    L_51:
                           A  2323    ;  179	            mos_fgetc(file);
                           A  2324    .LINE 179
                           A  2325    
0B0876 DD4EFF              A  2326    	LD	C,(IX+%FFFFFFFF)
0B0879 0600                A  2327    	LD	B,%0
0B087B C5                  A  2328    	PUSH	BC
0B087C C5                  A  2329    	PUSH	BC
0B087D E5                  A  2330    	PUSH	HL
0B087E FDE5E1              A  2331    	LD	HL,IY
0B0881 0162FBFF            A  2332    	LD	BC,-1182
0B0885 CD F8 25 0B         A  2333    	CALL	__istix
0B0889 E1                  A  2334    	POP	HL
0B088A C1                  A  2335    	POP	BC
0B088B CD 84 22 0B         A  2336    	CALL	_mos_fgetc
0B088F C5                  A  2337    	PUSH	BC
0B0890 0162FBFF            A  2338    	LD	BC,-1182
0B0894 E5                  A  2339    	PUSH	HL
0B0895 CD 84 2A 0B         A  2340    	CALL	__ildix
0B0899 E5FDE1              A  2341    	LD	IY,HL
0B089C E1                  A  2342    	POP	HL
0B089D C1                  A  2343    	POP	BC
0B089E C1                  A  2344    	POP	BC
                           A  2345    ;  180	        }
0B089F                     A  2346    L_50:
                           A  2347    .LINE 180
                           A  2348    
0B089F DD27F3              A  2349    	LD	HL,(IX+%FFFFFFF3)
0B08A2 0173FBFF            A  2350    	LD	BC,-1165	; spill
0B08A6 CD F8 25 0B         A  2351    	CALL	__istix
0B08AA DD66F6              A  2352    	LD	H,(IX+%FFFFFFF6)
0B08AD FDE5                A  2353    	PUSH	IY
0B08AF FD2171FB FF         A  2354    	LD	IY,-1167	; spill
0B08B4 DDE5C1              A  2355    	LD	BC,IX	; spill
0B08B7 FD09                A  2356    	ADD	IY,BC
0B08B9 FD7400              A  2357    	LD	(IY),H
0B08BC FDE1                A  2358    	POP	IY
0B08BE DD27F3              A  2359    	LD	HL,(IX+%FFFFFFF3)
0B08C1 DD5EF6              A  2360    	LD	E,(IX+%FFFFFFF6)
0B08C4 01FFFFFF            A  2361    	LD	BC,16777215
0B08C8 3EFF                A  2362    	LD	A,%FF
0B08CA CD 02 24 0B         A  2363    	CALL	__ladd
0B08CE DD2FF3              A  2364    	LD	(IX+%FFFFFFF3),HL
0B08D1 DD73F6              A  2365    	LD	(IX+%FFFFFFF6),E
0B08D4 B7                  A  2366    	OR	A,A
0B08D5 ED62                A  2367    	SBC	HL,HL
0B08D7 1E00                A  2368    	LD	E,%0
0B08D9 FDE5                A  2369    	PUSH	IY
0B08DB FD2172FB FF         A  2370    	LD	IY,-1166	; spill
0B08E0 DDE5C1              A  2371    	LD	BC,IX	; spill
0B08E3 FD09                A  2372    	ADD	IY,BC
0B08E5 FD7400              A  2373    	LD	(IY),H
0B08E8 FD2171FB FF         A  2374    	LD	IY,-1167	; unspill
0B08ED DDE5C1              A  2375    	LD	BC,IX	; unspill
0B08F0 FD09                A  2376    	ADD	IY,BC
0B08F2 FD6600              A  2377    	LD	H,(IY)
0B08F5 FDE1                A  2378    	POP	IY
0B08F7 7C                  A  2379    	LD	A,H
0B08F8 FDE5                A  2380    	PUSH	IY
0B08FA FD2172FB FF         A  2381    	LD	IY,-1166	; unspill
0B08FF DDE5C1              A  2382    	LD	BC,IX	; unspill
0B0902 FD09                A  2383    	ADD	IY,BC
0B0904 FD6600              A  2384    	LD	H,(IY)
0B0907 FDE1                A  2385    	POP	IY
0B0909 0176FBFF            A  2386    	LD	BC,-1162	; spill
0B090D CD F8 25 0B         A  2387    	CALL	__istix
0B0911 0173FBFF            A  2388    	LD	BC,-1165	; unspill
0B0915 CD 84 2A 0B         A  2389    	CALL	__ildix
0B0919 E5C1                A  2390    	LD	BC,HL
0B091B C5                  A  2391    	PUSH	BC
0B091C 0176FBFF            A  2392    	LD	BC,-1162	; unspill
0B0920 CD 84 2A 0B         A  2393    	CALL	__ildix
0B0924 C1                  A  2394    	POP	BC
0B0925 CD 9D 29 0B         A  2395    	CALL	__lcmps
0B0929 FA 76 08 0B         A  2396    	JP	M,L_51
                           A  2397    ;  181	
                           A  2398    ;  182	    }
0B092D                     A  2399    L_59:
                           A  2400    .LINE 182
                           A  2401    
                           A  2402    ;  183	
                           A  2403    ;  184	    if ((bit_depth != 32) && (bit_depth
                           A  2404    .LINE 184
                           A  2405    
0B092D DD27F7              A  2406    	LD	HL,(IX+%FFFFFFF7)
0B0930 DD5EFA              A  2407    	LD	E,(IX+%FFFFFFFA)
0B0933 01200000            A  2408    	LD	BC,32
0B0937 AF                  A  2409    	XOR	A,A
0B0938 CD 9D 29 0B         A  2410    	CALL	__lcmps
0B093C 28 55               A  2411    	JR	Z,L_60
0B093E DD27F7              A  2412    	LD	HL,(IX+%FFFFFFF7)
0B0941 DD5EFA              A  2413    	LD	E,(IX+%FFFFFFFA)
0B0944 01180000            A  2414    	LD	BC,24
0B0948 AF                  A  2415    	XOR	A,A
0B0949 CD 9D 29 0B         A  2416    	CALL	__lcmps
0B094D 28 44               A  2417    	JR	Z,L_60
0B094F DD27F7              A  2418    	LD	HL,(IX+%FFFFFFF7)
0B0952 DD5EFA              A  2419    	LD	E,(IX+%FFFFFFFA)
0B0955 01080000            A  2420    	LD	BC,8
0B0959 AF                  A  2421    	XOR	A,A
0B095A CD 9D 29 0B         A  2422    	CALL	__lcmps
0B095E 28 33               A  2423    	JR	Z,L_60
                           A  2424    ;  185	        printf("Error: unsupported bit 
                           A  2425    .LINE 185
                           A  2426    
0B0960 01 A8 27 0B         A  2427    	LD	BC,___print_uputch
0B0964 ED43 D8 2A 0B       A  2428    	LD	(___print_xputch),BC
0B0969 01 F9 2A 0B         A  2429    	LD	BC,L__45
0B096D C5                  A  2430    	PUSH	BC
0B096E CD 0D 26 0B         A  2431    	CALL	___print_sendstring
0B0972 C1                  A  2432    	POP	BC
                           A  2433    ;  186	        mos_fclose(file);
                           A  2434    .LINE 186
                           A  2435    
0B0973 DD4EFF              A  2436    	LD	C,(IX+%FFFFFFFF)
0B0976 0600                A  2437    	LD	B,%0
0B0978 C5                  A  2438    	PUSH	BC
0B0979 CD 6F 22 0B         A  2439    	CALL	_mos_fclose
0B097D C1                  A  2440    	POP	BC
                           A  2441    ;  187	        return return_info;
                           A  2442    .LINE 187
                           A  2443    
0B097E ED2206              A  2444    	LEA	HL,IX+%6
0B0981 ED17                A  2445    	LD	DE,(HL)
0B0983 ED22E7              A  2446    	LEA	HL,IX+%FFFFFFE7
0B0986 01050000            A  2447    	LD	BC,5
0B098A EDB0                A  2448    	LDIR	
0B098C DD2706              A  2449    	LD	HL,(IX+%6)
0B098F C3 1D 0F 0B         A  2450    	JR	L_88
                           A  2451    ;  188	    }
0B0993                     A  2452    L_60:
                           A  2453    .LINE 188
                           A  2454    
                           A  2455    ;  189	
                           A  2456    ;  190	    row_padding = (4 - (width * (bit_de
                           A  2457    .LINE 190
                           A  2458    
0B0993 DD27F7              A  2459    	LD	HL,(IX+%FFFFFFF7)
0B0996 DD5EFA              A  2460    	LD	E,(IX+%FFFFFFFA)
0B0999 01080000            A  2461    	LD	BC,8
0B099D AF                  A  2462    	XOR	A,A
0B099E CD 2E 28 0B         A  2463    	CALL	__ldivs
0B09A2 DD07E3              A  2464    	LD	BC,(IX+%FFFFFFE3)
0B09A5 DD7EE6              A  2465    	LD	A,(IX+%FFFFFFE6)
0B09A8 CD 17 2A 0B         A  2466    	CALL	__lmuls
0B09AC 01040000            A  2467    	LD	BC,4
0B09B0 AF                  A  2468    	XOR	A,A
0B09B1 CD BC 29 0B         A  2469    	CALL	__lrems
0B09B5 7B                  A  2470    	LD	A,E
0B09B6 E5C1                A  2471    	LD	BC,HL
0B09B8 21040000            A  2472    	LD	HL,4
0B09BC 1E00                A  2473    	LD	E,%0
0B09BE CD DD 28 0B         A  2474    	CALL	__lsub
0B09C2 01040000            A  2475    	LD	BC,4
0B09C6 AF                  A  2476    	XOR	A,A
0B09C7 CD BC 29 0B         A  2477    	CALL	__lrems
0B09CB DD2FD7              A  2478    	LD	(IX+%FFFFFFD7),HL
0B09CE DD73DA              A  2479    	LD	(IX+%FFFFFFDA),E
                           A  2480    ;  191	
                           A  2481    ;  192	    vdp_bitmapSelect(slot);
                           A  2482    .LINE 192
                           A  2483    
0B09D1 DD4E0C              A  2484    	LD	C,(IX+%C)
0B09D4 0600                A  2485    	LD	B,%0
0B09D6 C5                  A  2486    	PUSH	BC
0B09D7 CD 9E 18 0B         A  2487    	CALL	_vdp_bitmapSelect
0B09DB C1                  A  2488    	POP	BC
                           A  2489    ;  193	    putch(23); // vdu_sys
                           A  2490    .LINE 193
                           A  2491    
0B09DC 01170000            A  2492    	LD	BC,23
0B09E0 C5                  A  2493    	PUSH	BC
0B09E1 CD FF 1F 0B         A  2494    	CALL	_putch
0B09E5 C1                  A  2495    	POP	BC
                           A  2496    ;  194	    putch(27); // sprite command
                           A  2497    .LINE 194
                           A  2498    
0B09E6 011B0000            A  2499    	LD	BC,27
0B09EA C5                  A  2500    	PUSH	BC
0B09EB CD FF 1F 0B         A  2501    	CALL	_putch
0B09EF C1                  A  2502    	POP	BC
                           A  2503    ;  195	    putch(1); // send data to selected 
                           A  2504    .LINE 195
                           A  2505    
0B09F0 01010000            A  2506    	LD	BC,1
0B09F4 C5                  A  2507    	PUSH	BC
0B09F5 CD FF 1F 0B         A  2508    	CALL	_putch
0B09F9 C1                  A  2509    	POP	BC
                           A  2510    ;  196	
                           A  2511    ;  197	    write16bit(width);
                           A  2512    .LINE 197
                           A  2513    
0B09FA DD07E3              A  2514    	LD	BC,(IX+%FFFFFFE3)
0B09FD C5                  A  2515    	PUSH	BC
0B09FE CD 3D 14 0B         A  2516    	CALL	_write16bit
0B0A02 C1                  A  2517    	POP	BC
                           A  2518    ;  198	    write16bit(height);
                           A  2519    .LINE 198
                           A  2520    
0B0A03 DD07EC              A  2521    	LD	BC,(IX+%FFFFFFEC)
0B0A06 C5                  A  2522    	PUSH	BC
0B0A07 CD 3D 14 0B         A  2523    	CALL	_write16bit
0B0A0B C1                  A  2524    	POP	BC
                           A  2525    ;  199		
                           A  2526    ;  200	
                           A  2527    ;  201	    // if (bit_depth == 32) putch(1);
                           A  2528    ;  202	    // if (bit_depth == 24 || bit_depth
                           A  2529    ;  203	
                           A  2530    ;  204	    if (bit_depth == 8) {
                           A  2531    .LINE 204
                           A  2532    
0B0A0C DD27F7              A  2533    	LD	HL,(IX+%FFFFFFF7)
0B0A0F DD5EFA              A  2534    	LD	E,(IX+%FFFFFFFA)
0B0A12 01080000            A  2535    	LD	BC,8
0B0A16 AF                  A  2536    	XOR	A,A
0B0A17 CD 9D 29 0B         A  2537    	CALL	__lcmps
0B0A1B C2 78 0B 0B         A  2538    	JR	NZ,L_86
                           A  2539    ;  205	
                           A  2540    ;  206	        for (y = height - 1; y >= 0; y-
                           A  2541    .LINE 206
                           A  2542    
0B0A1F DD27EC              A  2543    	LD	HL,(IX+%FFFFFFEC)
0B0A22 DD5EEF              A  2544    	LD	E,(IX+%FFFFFFEF)
0B0A25 01FFFFFF            A  2545    	LD	BC,16777215
0B0A29 3EFF                A  2546    	LD	A,%FF
0B0A2B CD 02 24 0B         A  2547    	CALL	__ladd
0B0A2F DD2FFB              A  2548    	LD	(IX+%FFFFFFFB),HL
0B0A32 DD73FE              A  2549    	LD	(IX+%FFFFFFFE),E
0B0A35 C3 57 0B 0B         A  2550    	JR	L_73
0B0A39                     A  2551    L_71:
                           A  2552    ;  207	            for (x = 0; x < width; x++)
                           A  2553    .LINE 207
                           A  2554    
0B0A39 01000000            A  2555    	LD	BC,0
0B0A3D AF                  A  2556    	XOR	A,A
0B0A3E DD0FCE              A  2557    	LD	(IX+%FFFFFFCE),BC
0B0A41 DD77D1              A  2558    	LD	(IX+%FFFFFFD1),A
0B0A44 C3 DB 0A 0B         A  2559    	JR	L_65
0B0A48                     A  2560    L_63:
                           A  2561    ;  208	
                           A  2562    ;  209	                index = (UINT8) mos_fge
                           A  2563    .LINE 209
                           A  2564    
0B0A48 DD4EFF              A  2565    	LD	C,(IX+%FFFFFFFF)
0B0A4B 0600                A  2566    	LD	B,%0
0B0A4D C5                  A  2567    	PUSH	BC
0B0A4E CD 84 22 0B         A  2568    	CALL	_mos_fgetc
0B0A52 C1                  A  2569    	POP	BC
0B0A53 DD77D6              A  2570    	LD	(IX+%FFFFFFD6),A
                           A  2571    ;  210	                b = color_table[index *
                           A  2572    .LINE 210
                           A  2573    
0B0A56 B7ED62              A  2574    	UEXT	HL
0B0A59 6F                  A  2575    	LD	L,A
0B0A5A 29                  A  2576    	ADD	HL,HL
0B0A5B 29                  A  2577    	ADD	HL,HL
0B0A5C E5C1                A  2578    	LD	BC,HL
0B0A5E DDE5E1              A  2579    	LD	HL,IX
0B0A61 117CFBFF            A  2580    	LD	DE,-1156
0B0A65 19                  A  2581    	ADD	HL,DE
0B0A66 09                  A  2582    	ADD	HL,BC
0B0A67 FD2179FB FF         A  2583    	LD	IY,-1159
0B0A6C DDE5C1              A  2584    	LD	BC,IX
0B0A6F FD09                A  2585    	ADD	IY,BC
0B0A71 FD2F00              A  2586    	LD	(IY),HL
0B0A74 2179FBFF            A  2587    	LD	HL,-1159
0B0A78 DDE5C1              A  2588    	LD	BC,IX
0B0A7B 09                  A  2589    	ADD	HL,BC
0B0A7C ED27                A  2590    	LD	HL,(HL)
0B0A7E 7E                  A  2591    	LD	A,(HL)
0B0A7F DD77CB              A  2592    	LD	(IX+%FFFFFFCB),A
                           A  2593    ;  211	                g = color_table[index *
                           A  2594    .LINE 211
                           A  2595    
0B0A82 2179FBFF            A  2596    	LD	HL,-1159
0B0A86 DDE5C1              A  2597    	LD	BC,IX
0B0A89 09                  A  2598    	ADD	HL,BC
0B0A8A ED27                A  2599    	LD	HL,(HL)
0B0A8C 23                  A  2600    	INC	HL
0B0A8D 7E                  A  2601    	LD	A,(HL)
0B0A8E DD77CC              A  2602    	LD	(IX+%FFFFFFCC),A
                           A  2603    ;  212	                r = color_table[index *
                           A  2604    .LINE 212
                           A  2605    
0B0A91 2179FBFF            A  2606    	LD	HL,-1159
0B0A95 DDE5C1              A  2607    	LD	BC,IX
0B0A98 09                  A  2608    	ADD	HL,BC
0B0A99 ED31                A  2609    	LD	IY,(HL)
0B0A9B ED2302              A  2610    	LEA	HL,IY+%2
0B0A9E 7E                  A  2611    	LD	A,(HL)
0B0A9F DD77CD              A  2612    	LD	(IX+%FFFFFFCD),A
                           A  2613    ;  213	                putch(b);
                           A  2614    .LINE 213
                           A  2615    
0B0AA2 DD7ECB              A  2616    	LD	A,(IX+%FFFFFFCB)
0B0AA5 B7ED62              A  2617    	UEXT	HL
0B0AA8 6F                  A  2618    	LD	L,A
0B0AA9 E5                  A  2619    	PUSH	HL
0B0AAA CD FF 1F 0B         A  2620    	CALL	_putch
0B0AAE C1                  A  2621    	POP	BC
                           A  2622    ;  214	                putch(g);
                           A  2623    .LINE 214
                           A  2624    
0B0AAF DD7ECC              A  2625    	LD	A,(IX+%FFFFFFCC)
0B0AB2 B7ED62              A  2626    	UEXT	HL
0B0AB5 6F                  A  2627    	LD	L,A
0B0AB6 E5                  A  2628    	PUSH	HL
0B0AB7 CD FF 1F 0B         A  2629    	CALL	_putch
0B0ABB C1                  A  2630    	POP	BC
                           A  2631    ;  215	                putch(r);
                           A  2632    .LINE 215
                           A  2633    
0B0ABC DD7ECD              A  2634    	LD	A,(IX+%FFFFFFCD)
0B0ABF B7ED62              A  2635    	UEXT	HL
0B0AC2 6F                  A  2636    	LD	L,A
0B0AC3 E5                  A  2637    	PUSH	HL
0B0AC4 CD FF 1F 0B         A  2638    	CALL	_putch
0B0AC8 C1                  A  2639    	POP	BC
0B0AC9 DD27CE              A  2640    	LD	HL,(IX+%FFFFFFCE)
0B0ACC DD5ED1              A  2641    	LD	E,(IX+%FFFFFFD1)
0B0ACF 3E01                A  2642    	LD	A,%1
0B0AD1 CD F3 23 0B         A  2643    	CALL	__ladd_b
0B0AD5 DD2FCE              A  2644    	LD	(IX+%FFFFFFCE),HL
0B0AD8 DD73D1              A  2645    	LD	(IX+%FFFFFFD1),E
                           A  2646    ;  216	
                           A  2647    ;  217	            }
0B0ADB                     A  2648    L_65:
                           A  2649    .LINE 217
                           A  2650    
0B0ADB DD27CE              A  2651    	LD	HL,(IX+%FFFFFFCE)
0B0ADE DD5ED1              A  2652    	LD	E,(IX+%FFFFFFD1)
0B0AE1 DD07E3              A  2653    	LD	BC,(IX+%FFFFFFE3)
0B0AE4 DD7EE6              A  2654    	LD	A,(IX+%FFFFFFE6)
0B0AE7 CD 9D 29 0B         A  2655    	CALL	__lcmps
0B0AEB FA F5 0A 0B         A  2656    	JP	M,L__54
0B0AEF EA 48 0A 0B         A  2657    	JP	PE,L_63
0B0AF3 18 04               A  2658    	JR	L__55
0B0AF5                     A  2659    L__54:
0B0AF5 E2 48 0A 0B         A  2660    	JP	PO,L_63
0B0AF9                     A  2661    L__55:
                           A  2662    ;  218	
                           A  2663    ;  219	            for (i = 0; i < row_padding
                           A  2664    .LINE 219
                           A  2665    
0B0AF9 01000000            A  2666    	LD	BC,0
0B0AFD AF                  A  2667    	XOR	A,A
0B0AFE DD0FF3              A  2668    	LD	(IX+%FFFFFFF3),BC
0B0B01 DD77F6              A  2669    	LD	(IX+%FFFFFFF6),A
0B0B04 18 1D               A  2670    	JR	L_69
0B0B06                     A  2671    L_67:
                           A  2672    ;  220	                mos_fgetc(file);
                           A  2673    .LINE 220
                           A  2674    
0B0B06 DD4EFF              A  2675    	LD	C,(IX+%FFFFFFFF)
0B0B09 0600                A  2676    	LD	B,%0
0B0B0B C5                  A  2677    	PUSH	BC
0B0B0C CD 84 22 0B         A  2678    	CALL	_mos_fgetc
0B0B10 C1                  A  2679    	POP	BC
0B0B11 DD27F3              A  2680    	LD	HL,(IX+%FFFFFFF3)
0B0B14 DD5EF6              A  2681    	LD	E,(IX+%FFFFFFF6)
0B0B17 3E01                A  2682    	LD	A,%1
0B0B19 CD F3 23 0B         A  2683    	CALL	__ladd_b
0B0B1D DD2FF3              A  2684    	LD	(IX+%FFFFFFF3),HL
0B0B20 DD73F6              A  2685    	LD	(IX+%FFFFFFF6),E
                           A  2686    ;  221	            }
0B0B23                     A  2687    L_69:
                           A  2688    .LINE 221
                           A  2689    
0B0B23 DD27F3              A  2690    	LD	HL,(IX+%FFFFFFF3)
0B0B26 DD5EF6              A  2691    	LD	E,(IX+%FFFFFFF6)
0B0B29 DD07D7              A  2692    	LD	BC,(IX+%FFFFFFD7)
0B0B2C DD7EDA              A  2693    	LD	A,(IX+%FFFFFFDA)
0B0B2F CD 9D 29 0B         A  2694    	CALL	__lcmps
0B0B33 FA 3D 0B 0B         A  2695    	JP	M,L__56
0B0B37 EA 06 0B 0B         A  2696    	JP	PE,L_67
0B0B3B 18 04               A  2697    	JR	L__57
0B0B3D                     A  2698    L__56:
0B0B3D E2 06 0B 0B         A  2699    	JP	PO,L_67
0B0B41                     A  2700    L__57:
0B0B41 DD27FB              A  2701    	LD	HL,(IX+%FFFFFFFB)
0B0B44 DD5EFE              A  2702    	LD	E,(IX+%FFFFFFFE)
0B0B47 01FFFFFF            A  2703    	LD	BC,16777215
0B0B4B 3EFF                A  2704    	LD	A,%FF
0B0B4D CD 02 24 0B         A  2705    	CALL	__ladd
0B0B51 DD2FFB              A  2706    	LD	(IX+%FFFFFFFB),HL
0B0B54 DD73FE              A  2707    	LD	(IX+%FFFFFFFE),E
                           A  2708    ;  222	
                           A  2709    ;  223	        }
0B0B57                     A  2710    L_73:
                           A  2711    .LINE 223
                           A  2712    
0B0B57 DD27FB              A  2713    	LD	HL,(IX+%FFFFFFFB)
0B0B5A DD5EFE              A  2714    	LD	E,(IX+%FFFFFFFE)
0B0B5D 01000000            A  2715    	LD	BC,0
0B0B61 AF                  A  2716    	XOR	A,A
0B0B62 CD 9D 29 0B         A  2717    	CALL	__lcmps
0B0B66 F2 70 0B 0B         A  2718    	JP	P,L__58
0B0B6A EA 39 0A 0B         A  2719    	JP	PE,L_71
0B0B6E 18 04               A  2720    	JR	L__59
0B0B70                     A  2721    L__58:
0B0B70 E2 39 0A 0B         A  2722    	JP	PO,L_71
0B0B74                     A  2723    L__59:
0B0B74 C3 D7 0E 0B         A  2724    	JR	L_87
                           A  2725    ;  224	
                           A  2726    ;  225	    } else if (bit_depth == 32) {
0B0B78                     A  2727    L_86:
                           A  2728    .LINE 225
                           A  2729    
0B0B78 DD27F7              A  2730    	LD	HL,(IX+%FFFFFFF7)
0B0B7B DD5EFA              A  2731    	LD	E,(IX+%FFFFFFFA)
0B0B7E 01200000            A  2732    	LD	BC,32
0B0B82 AF                  A  2733    	XOR	A,A
0B0B83 CD 9D 29 0B         A  2734    	CALL	__lcmps
0B0B87 C2 1C 0D 0B         A  2735    	JR	NZ,L_84
                           A  2736    ;  226	        
                           A  2737    ;  227			int non_pad_row = width * bit_d
                           A  2738    .LINE 227
                           A  2739    
0B0B8B DD27E3              A  2740    	LD	HL,(IX+%FFFFFFE3)
0B0B8E DD5EE6              A  2741    	LD	E,(IX+%FFFFFFE6)
0B0B91 DD07F7              A  2742    	LD	BC,(IX+%FFFFFFF7)
0B0B94 DD7EFA              A  2743    	LD	A,(IX+%FFFFFFFA)
0B0B97 CD 17 2A 0B         A  2744    	CALL	__lmuls
0B0B9B 01080000            A  2745    	LD	BC,8
0B0B9F AF                  A  2746    	XOR	A,A
0B0BA0 CD 2E 28 0B         A  2747    	CALL	__ldivs
0B0BA4 DD2FDF              A  2748    	LD	(IX+%FFFFFFDF),HL
0B0BA7 DD73E2              A  2749    	LD	(IX+%FFFFFFE2),E
0B0BAA DD2FB5              A  2750    	LD	(IX+%FFFFFFB5),HL
                           A  2751    ;  228	        src = (char * ) malloc(width * 
                           A  2752    .LINE 228
                           A  2753    
0B0BAD E5C1                A  2754    	LD	BC,HL
0B0BAF C5                  A  2755    	PUSH	BC
0B0BB0 CD 0D 25 0B         A  2756    	CALL	_malloc
0B0BB4 C1                  A  2757    	POP	BC
0B0BB5 DD2FF0              A  2758    	LD	(IX+%FFFFFFF0),HL
                           A  2759    ;  229			mos_flseek(file, image_start + 
                           A  2760    .LINE 229
                           A  2761    
0B0BB8 DD07DF              A  2762    	LD	BC,(IX+%FFFFFFDF)
0B0BBB CD 96 29 0B         A  2763    	CALL	__itol
0B0BBF DD27D7              A  2764    	LD	HL,(IX+%FFFFFFD7)
0B0BC2 DD5EDA              A  2765    	LD	E,(IX+%FFFFFFDA)
0B0BC5 CD 02 24 0B         A  2766    	CALL	__ladd
0B0BC9 7B                  A  2767    	LD	A,E
0B0BCA FD2168FB FF         A  2768    	LD	IY,-1176	; spill
0B0BCF DDE5C1              A  2769    	LD	BC,IX	; spill
0B0BD2 FD09                A  2770    	ADD	IY,BC
0B0BD4 FD7700              A  2771    	LD	(IY),A
0B0BD7 0165FBFF            A  2772    	LD	BC,-1179	; spill
0B0BDB CD F8 25 0B         A  2773    	CALL	__istix
0B0BDF DD27EC              A  2774    	LD	HL,(IX+%FFFFFFEC)
0B0BE2 DD5EEF              A  2775    	LD	E,(IX+%FFFFFFEF)
0B0BE5 01010000            A  2776    	LD	BC,1
0B0BE9 AF                  A  2777    	XOR	A,A
0B0BEA CD DD 28 0B         A  2778    	CALL	__lsub
0B0BEE 7B                  A  2779    	LD	A,E
0B0BEF E5C1                A  2780    	LD	BC,HL
0B0BF1 C5                  A  2781    	PUSH	BC
0B0BF2 FD2170FB FF         A  2782    	LD	IY,-1168	; spill
0B0BF7 DDE5C1              A  2783    	LD	BC,IX	; spill
0B0BFA FD09                A  2784    	ADD	IY,BC
0B0BFC FD7700              A  2785    	LD	(IY),A
0B0BFF FD2168FB FF         A  2786    	LD	IY,-1176	; unspill
0B0C04 DDE5C1              A  2787    	LD	BC,IX	; unspill
0B0C07 FD09                A  2788    	ADD	IY,BC
0B0C09 FD7E00              A  2789    	LD	A,(IY)
0B0C0C C1                  A  2790    	POP	BC
0B0C0D 5F                  A  2791    	LD	E,A
0B0C0E C5                  A  2792    	PUSH	BC
0B0C0F FD2170FB FF         A  2793    	LD	IY,-1168	; unspill
0B0C14 DDE5C1              A  2794    	LD	BC,IX	; unspill
0B0C17 FD09                A  2795    	ADD	IY,BC
0B0C19 FD7E00              A  2796    	LD	A,(IY)
0B0C1C C1                  A  2797    	POP	BC
0B0C1D C5E1                A  2798    	LD	HL,BC
0B0C1F 016CFBFF            A  2799    	LD	BC,-1172	; spill
0B0C23 CD F8 25 0B         A  2800    	CALL	__istix
0B0C27 0165FBFF            A  2801    	LD	BC,-1179	; unspill
0B0C2B CD 84 2A 0B         A  2802    	CALL	__ildix
0B0C2F E5C1                A  2803    	LD	BC,HL
0B0C31 C5E1                A  2804    	LD	HL,BC
0B0C33 016CFBFF            A  2805    	LD	BC,-1172	; unspill
0B0C37 E5                  A  2806    	PUSH	HL
0B0C38 CD 84 2A 0B         A  2807    	CALL	__ildix
0B0C3C E5C1                A  2808    	LD	BC,HL
0B0C3E E1                  A  2809    	POP	HL
0B0C3F CD 17 2A 0B         A  2810    	CALL	__lmulu
0B0C43 DD07BF              A  2811    	LD	BC,(IX+%FFFFFFBF)
0B0C46 DD7EC2              A  2812    	LD	A,(IX+%FFFFFFC2)
0B0C49 CD 02 24 0B         A  2813    	CALL	__ladd
0B0C4D 4B                  A  2814    	LD	C,E
0B0C4E 0600                A  2815    	LD	B,%0
0B0C50 C5                  A  2816    	PUSH	BC
0B0C51 E5                  A  2817    	PUSH	HL
0B0C52 DD4EFF              A  2818    	LD	C,(IX+%FFFFFFFF)
0B0C55 C5                  A  2819    	PUSH	BC
0B0C56 CD BE 23 0B         A  2820    	CALL	_mos_flseek
0B0C5A C1                  A  2821    	POP	BC
0B0C5B C1                  A  2822    	POP	BC
0B0C5C C1                  A  2823    	POP	BC
                           A  2824    ;  230	
                           A  2825    ;  231	        for (y = height - 1; y >= 0; y-
                           A  2826    .LINE 231
                           A  2827    
0B0C5D DD27EC              A  2828    	LD	HL,(IX+%FFFFFFEC)
0B0C60 DD5EEF              A  2829    	LD	E,(IX+%FFFFFFEF)
0B0C63 01FFFFFF            A  2830    	LD	BC,16777215
0B0C67 3EFF                A  2831    	LD	A,%FF
0B0C69 CD 02 24 0B         A  2832    	CALL	__ladd
0B0C6D DD2FFB              A  2833    	LD	(IX+%FFFFFFFB),HL
0B0C70 DD73FE              A  2834    	LD	(IX+%FFFFFFFE),E
0B0C73 C3 FB 0C 0B         A  2835    	JR	L_77
0B0C77                     A  2836    L_75:
                           A  2837    ;  232	
                           A  2838    ;  233	            mos_fread(file, src, non_pa
                           A  2839    .LINE 233
                           A  2840    
0B0C77 DD07DF              A  2841    	LD	BC,(IX+%FFFFFFDF)
0B0C7A C5                  A  2842    	PUSH	BC
0B0C7B DD07F0              A  2843    	LD	BC,(IX+%FFFFFFF0)
0B0C7E C5                  A  2844    	PUSH	BC
0B0C7F DD4EFF              A  2845    	LD	C,(IX+%FFFFFFFF)
0B0C82 0600                A  2846    	LD	B,%0
0B0C84 C5                  A  2847    	PUSH	BC
0B0C85 CD 84 23 0B         A  2848    	CALL	_mos_fread
0B0C89 C1                  A  2849    	POP	BC
0B0C8A C1                  A  2850    	POP	BC
0B0C8B C1                  A  2851    	POP	BC
                           A  2852    ;  234				reorder(src, non_pad_row);
                           A  2853    .LINE 234
                           A  2854    
0B0C8C DD07DF              A  2855    	LD	BC,(IX+%FFFFFFDF)
0B0C8F C5                  A  2856    	PUSH	BC
0B0C90 DD07F0              A  2857    	LD	BC,(IX+%FFFFFFF0)
0B0C93 C5                  A  2858    	PUSH	BC
0B0C94 CD 9A 04 0B         A  2859    	CALL	_reorder
0B0C98 C1                  A  2860    	POP	BC
0B0C99 C1                  A  2861    	POP	BC
                           A  2862    ;  235	            mos_puts(src, non_pad_row, 
                           A  2863    .LINE 235
                           A  2864    
0B0C9A 01000000            A  2865    	LD	BC,0
0B0C9E C5                  A  2866    	PUSH	BC
0B0C9F DD07DF              A  2867    	LD	BC,(IX+%FFFFFFDF)
0B0CA2 C5                  A  2868    	PUSH	BC
0B0CA3 DD07F0              A  2869    	LD	BC,(IX+%FFFFFFF0)
0B0CA6 C5                  A  2870    	PUSH	BC
0B0CA7 CD 17 20 0B         A  2871    	CALL	_mos_puts
0B0CAB C1                  A  2872    	POP	BC
0B0CAC C1                  A  2873    	POP	BC
0B0CAD C1                  A  2874    	POP	BC
                           A  2875    ;  236	            mos_flseek(file, fo -> fptr
                           A  2876    .LINE 236
                           A  2877    
0B0CAE DD27DF              A  2878    	LD	HL,(IX+%FFFFFFDF)
0B0CB1 29                  A  2879    	ADD	HL,HL
0B0CB2 E5C1                A  2880    	LD	BC,HL
0B0CB4 CD 96 29 0B         A  2881    	CALL	__itol
0B0CB8 5F                  A  2882    	LD	E,A
0B0CB9 C5E1                A  2883    	LD	HL,BC
0B0CBB DD07D7              A  2884    	LD	BC,(IX+%FFFFFFD7)
0B0CBE DD7EDA              A  2885    	LD	A,(IX+%FFFFFFDA)
0B0CC1 CD 02 24 0B         A  2886    	CALL	__ladd
0B0CC5 7B                  A  2887    	LD	A,E
0B0CC6 E5C1                A  2888    	LD	BC,HL
0B0CC8 DD31C6              A  2889    	LD	IY,(IX+%FFFFFFC6)
0B0CCB FD2711              A  2890    	LD	HL,(IY+%11)
0B0CCE FD5E14              A  2891    	LD	E,(IY+%14)
0B0CD1 CD DD 28 0B         A  2892    	CALL	__lsub
0B0CD5 4B                  A  2893    	LD	C,E
0B0CD6 0600                A  2894    	LD	B,%0
0B0CD8 C5                  A  2895    	PUSH	BC
0B0CD9 E5                  A  2896    	PUSH	HL
0B0CDA DD4EFF              A  2897    	LD	C,(IX+%FFFFFFFF)
0B0CDD C5                  A  2898    	PUSH	BC
0B0CDE CD BE 23 0B         A  2899    	CALL	_mos_flseek
0B0CE2 C1                  A  2900    	POP	BC
0B0CE3 C1                  A  2901    	POP	BC
0B0CE4 C1                  A  2902    	POP	BC
0B0CE5 DD27FB              A  2903    	LD	HL,(IX+%FFFFFFFB)
0B0CE8 DD5EFE              A  2904    	LD	E,(IX+%FFFFFFFE)
0B0CEB 01FFFFFF            A  2905    	LD	BC,16777215
0B0CEF 3EFF                A  2906    	LD	A,%FF
0B0CF1 CD 02 24 0B         A  2907    	CALL	__ladd
0B0CF5 DD2FFB              A  2908    	LD	(IX+%FFFFFFFB),HL
0B0CF8 DD73FE              A  2909    	LD	(IX+%FFFFFFFE),E
                           A  2910    ;  237	
                           A  2911    ;  238	        }
0B0CFB                     A  2912    L_77:
                           A  2913    .LINE 238
                           A  2914    
0B0CFB DD27FB              A  2915    	LD	HL,(IX+%FFFFFFFB)
0B0CFE DD5EFE              A  2916    	LD	E,(IX+%FFFFFFFE)
0B0D01 01000000            A  2917    	LD	BC,0
0B0D05 AF                  A  2918    	XOR	A,A
0B0D06 CD 9D 29 0B         A  2919    	CALL	__lcmps
0B0D0A F2 14 0D 0B         A  2920    	JP	P,L__60
0B0D0E EA 77 0C 0B         A  2921    	JP	PE,L_75
0B0D12 18 04               A  2922    	JR	L__61
0B0D14                     A  2923    L__60:
0B0D14 E2 77 0C 0B         A  2924    	JP	PO,L_75
0B0D18                     A  2925    L__61:
0B0D18 C3 D7 0E 0B         A  2926    	JR	L_87
                           A  2927    ;  239	
                           A  2928    ;  240	    } else if (bit_depth == 24) {
0B0D1C                     A  2929    L_84:
                           A  2930    .LINE 240
                           A  2931    
0B0D1C DD27F7              A  2932    	LD	HL,(IX+%FFFFFFF7)
0B0D1F DD5EFA              A  2933    	LD	E,(IX+%FFFFFFFA)
0B0D22 01180000            A  2934    	LD	BC,24
0B0D26 AF                  A  2935    	XOR	A,A
0B0D27 CD 9D 29 0B         A  2936    	CALL	__lcmps
0B0D2B C2 D7 0E 0B         A  2937    	JR	NZ,L_87
                           A  2938    ;  241			
                           A  2939    ;  242			uint16_t new_row_size;
                           A  2940    ;  243			int non_pad_row = width * bit_d
                           A  2941    .LINE 243
                           A  2942    
0B0D2F DD27E3              A  2943    	LD	HL,(IX+%FFFFFFE3)
0B0D32 DD5EE6              A  2944    	LD	E,(IX+%FFFFFFE6)
0B0D35 DD07F7              A  2945    	LD	BC,(IX+%FFFFFFF7)
0B0D38 DD7EFA              A  2946    	LD	A,(IX+%FFFFFFFA)
0B0D3B CD 17 2A 0B         A  2947    	CALL	__lmuls
0B0D3F 01080000            A  2948    	LD	BC,8
0B0D43 AF                  A  2949    	XOR	A,A
0B0D44 CD 2E 28 0B         A  2950    	CALL	__ldivs
0B0D48 DD2FDB              A  2951    	LD	(IX+%FFFFFFDB),HL
0B0D4B DD73DE              A  2952    	LD	(IX+%FFFFFFDE),E
0B0D4E DD2FB2              A  2953    	LD	(IX+%FFFFFFB2),HL
                           A  2954    ;  244			
                           A  2955    ;  245	        src = (char * ) malloc(width * 
                           A  2956    .LINE 245
                           A  2957    
0B0D51 E5C1                A  2958    	LD	BC,HL
0B0D53 C5                  A  2959    	PUSH	BC
0B0D54 CD 0D 25 0B         A  2960    	CALL	_malloc
0B0D58 C1                  A  2961    	POP	BC
0B0D59 DD2FF0              A  2962    	LD	(IX+%FFFFFFF0),HL
                           A  2963    ;  246			mos_flseek(file, image_start + 
                           A  2964    .LINE 246
                           A  2965    
0B0D5C DD07DB              A  2966    	LD	BC,(IX+%FFFFFFDB)
0B0D5F CD 96 29 0B         A  2967    	CALL	__itol
0B0D63 DD27D7              A  2968    	LD	HL,(IX+%FFFFFFD7)
0B0D66 DD5EDA              A  2969    	LD	E,(IX+%FFFFFFDA)
0B0D69 CD 02 24 0B         A  2970    	CALL	__ladd
0B0D6D 7B                  A  2971    	LD	A,E
0B0D6E FD216FFB FF         A  2972    	LD	IY,-1169	; spill
0B0D73 DDE5C1              A  2973    	LD	BC,IX	; spill
0B0D76 FD09                A  2974    	ADD	IY,BC
0B0D78 FD7700              A  2975    	LD	(IY),A
0B0D7B 0169FBFF            A  2976    	LD	BC,-1175	; spill
0B0D7F CD F8 25 0B         A  2977    	CALL	__istix
0B0D83 DD27EC              A  2978    	LD	HL,(IX+%FFFFFFEC)
0B0D86 DD5EEF              A  2979    	LD	E,(IX+%FFFFFFEF)
0B0D89 01010000            A  2980    	LD	BC,1
0B0D8D AF                  A  2981    	XOR	A,A
0B0D8E CD DD 28 0B         A  2982    	CALL	__lsub
0B0D92 7B                  A  2983    	LD	A,E
0B0D93 E5C1                A  2984    	LD	BC,HL
0B0D95 C5                  A  2985    	PUSH	BC
0B0D96 FD2170FB FF         A  2986    	LD	IY,-1168	; spill
0B0D9B DDE5C1              A  2987    	LD	BC,IX	; spill
0B0D9E FD09                A  2988    	ADD	IY,BC
0B0DA0 FD7700              A  2989    	LD	(IY),A
0B0DA3 FD216FFB FF         A  2990    	LD	IY,-1169	; unspill
0B0DA8 DDE5C1              A  2991    	LD	BC,IX	; unspill
0B0DAB FD09                A  2992    	ADD	IY,BC
0B0DAD FD7E00              A  2993    	LD	A,(IY)
0B0DB0 C1                  A  2994    	POP	BC
0B0DB1 5F                  A  2995    	LD	E,A
0B0DB2 C5                  A  2996    	PUSH	BC
0B0DB3 FD2170FB FF         A  2997    	LD	IY,-1168	; unspill
0B0DB8 DDE5C1              A  2998    	LD	BC,IX	; unspill
0B0DBB FD09                A  2999    	ADD	IY,BC
0B0DBD FD7E00              A  3000    	LD	A,(IY)
0B0DC0 C1                  A  3001    	POP	BC
0B0DC1 C5E1                A  3002    	LD	HL,BC
0B0DC3 016CFBFF            A  3003    	LD	BC,-1172	; spill
0B0DC7 CD F8 25 0B         A  3004    	CALL	__istix
0B0DCB 0169FBFF            A  3005    	LD	BC,-1175	; unspill
0B0DCF CD 84 2A 0B         A  3006    	CALL	__ildix
0B0DD3 E5C1                A  3007    	LD	BC,HL
0B0DD5 C5E1                A  3008    	LD	HL,BC
0B0DD7 016CFBFF            A  3009    	LD	BC,-1172	; unspill
0B0DDB E5                  A  3010    	PUSH	HL
0B0DDC CD 84 2A 0B         A  3011    	CALL	__ildix
0B0DE0 E5C1                A  3012    	LD	BC,HL
0B0DE2 E1                  A  3013    	POP	HL
0B0DE3 CD 17 2A 0B         A  3014    	CALL	__lmulu
0B0DE7 DD07BF              A  3015    	LD	BC,(IX+%FFFFFFBF)
0B0DEA DD7EC2              A  3016    	LD	A,(IX+%FFFFFFC2)
0B0DED CD 02 24 0B         A  3017    	CALL	__ladd
0B0DF1 4B                  A  3018    	LD	C,E
0B0DF2 0600                A  3019    	LD	B,%0
0B0DF4 C5                  A  3020    	PUSH	BC
0B0DF5 E5                  A  3021    	PUSH	HL
0B0DF6 DD4EFF              A  3022    	LD	C,(IX+%FFFFFFFF)
0B0DF9 C5                  A  3023    	PUSH	BC
0B0DFA CD BE 23 0B         A  3024    	CALL	_mos_flseek
0B0DFE C1                  A  3025    	POP	BC
0B0DFF C1                  A  3026    	POP	BC
0B0E00 C1                  A  3027    	POP	BC
                           A  3028    ;  247			
                           A  3029    ;  248	        for (y = height - 1; y >= 0; y-
                           A  3030    .LINE 248
                           A  3031    
0B0E01 DD27EC              A  3032    	LD	HL,(IX+%FFFFFFEC)
0B0E04 DD5EEF              A  3033    	LD	E,(IX+%FFFFFFEF)
0B0E07 01FFFFFF            A  3034    	LD	BC,16777215
0B0E0B 3EFF                A  3035    	LD	A,%FF
0B0E0D CD 02 24 0B         A  3036    	CALL	__ladd
0B0E11 DD2FFB              A  3037    	LD	(IX+%FFFFFFFB),HL
0B0E14 DD73FE              A  3038    	LD	(IX+%FFFFFFFE),E
0B0E17 C3 BA 0E 0B         A  3039    	JR	L_81
0B0E1B                     A  3040    L_79:
                           A  3041    ;  249	
                           A  3042    ;  250	            mos_fread(file, src, non_pa
                           A  3043    .LINE 250
                           A  3044    
0B0E1B DD07DB              A  3045    	LD	BC,(IX+%FFFFFFDB)
0B0E1E C5                  A  3046    	PUSH	BC
0B0E1F DD07F0              A  3047    	LD	BC,(IX+%FFFFFFF0)
0B0E22 C5                  A  3048    	PUSH	BC
0B0E23 DD4EFF              A  3049    	LD	C,(IX+%FFFFFFFF)
0B0E26 0600                A  3050    	LD	B,%0
0B0E28 C5                  A  3051    	PUSH	BC
0B0E29 CD 84 23 0B         A  3052    	CALL	_mos_fread
0B0E2D C1                  A  3053    	POP	BC
0B0E2E C1                  A  3054    	POP	BC
0B0E2F C1                  A  3055    	POP	BC
                           A  3056    ;  251				reorder_and_insert(src, non
                           A  3057    .LINE 251
                           A  3058    
0B0E30 01FFFFFF            A  3059    	LD	BC,16777215
0B0E34 C5                  A  3060    	PUSH	BC
0B0E35 ED65C9              A  3061    	PEA	IX+%FFFFFFC9
0B0E38 ED65C3              A  3062    	PEA	IX+%FFFFFFC3
0B0E3B DD07DB              A  3063    	LD	BC,(IX+%FFFFFFDB)
0B0E3E C5                  A  3064    	PUSH	BC
0B0E3F DD07F0              A  3065    	LD	BC,(IX+%FFFFFFF0)
0B0E42 C5                  A  3066    	PUSH	BC
0B0E43 CD 28 05 0B         A  3067    	CALL	_reorder_and_insert
0B0E47 C1                  A  3068    	POP	BC
0B0E48 C1                  A  3069    	POP	BC
0B0E49 C1                  A  3070    	POP	BC
0B0E4A C1                  A  3071    	POP	BC
0B0E4B C1                  A  3072    	POP	BC
                           A  3073    ;  252	            mos_puts(row_24bpp, new_row
                           A  3074    .LINE 252
                           A  3075    
0B0E4C 01000000            A  3076    	LD	BC,0
0B0E50 C5                  A  3077    	PUSH	BC
0B0E51 DD07C9              A  3078    	LD	BC,(IX+%FFFFFFC9)
0B0E54 CD A2 27 0B         A  3079    	CALL	__stoiu
0B0E58 E5                  A  3080    	PUSH	HL
0B0E59 DD07C3              A  3081    	LD	BC,(IX+%FFFFFFC3)
0B0E5C C5                  A  3082    	PUSH	BC
0B0E5D CD 17 20 0B         A  3083    	CALL	_mos_puts
0B0E61 C1                  A  3084    	POP	BC
0B0E62 C1                  A  3085    	POP	BC
0B0E63 C1                  A  3086    	POP	BC
                           A  3087    ;  253	            mos_flseek(file, fo -> fptr
                           A  3088    .LINE 253
                           A  3089    
0B0E64 DD27DB              A  3090    	LD	HL,(IX+%FFFFFFDB)
0B0E67 29                  A  3091    	ADD	HL,HL
0B0E68 E5C1                A  3092    	LD	BC,HL
0B0E6A CD 96 29 0B         A  3093    	CALL	__itol
0B0E6E 5F                  A  3094    	LD	E,A
0B0E6F C5E1                A  3095    	LD	HL,BC
0B0E71 DD07D7              A  3096    	LD	BC,(IX+%FFFFFFD7)
0B0E74 DD7EDA              A  3097    	LD	A,(IX+%FFFFFFDA)
0B0E77 CD 02 24 0B         A  3098    	CALL	__ladd
0B0E7B 7B                  A  3099    	LD	A,E
0B0E7C E5C1                A  3100    	LD	BC,HL
0B0E7E DD31C6              A  3101    	LD	IY,(IX+%FFFFFFC6)
0B0E81 FD2711              A  3102    	LD	HL,(IY+%11)
0B0E84 FD5E14              A  3103    	LD	E,(IY+%14)
0B0E87 CD DD 28 0B         A  3104    	CALL	__lsub
0B0E8B 4B                  A  3105    	LD	C,E
0B0E8C 0600                A  3106    	LD	B,%0
0B0E8E C5                  A  3107    	PUSH	BC
0B0E8F E5                  A  3108    	PUSH	HL
0B0E90 DD4EFF              A  3109    	LD	C,(IX+%FFFFFFFF)
0B0E93 C5                  A  3110    	PUSH	BC
0B0E94 CD BE 23 0B         A  3111    	CALL	_mos_flseek
0B0E98 C1                  A  3112    	POP	BC
0B0E99 C1                  A  3113    	POP	BC
0B0E9A C1                  A  3114    	POP	BC
                           A  3115    ;  254				free(row_24bpp);
                           A  3116    .LINE 254
                           A  3117    
0B0E9B DD07C3              A  3118    	LD	BC,(IX+%FFFFFFC3)
0B0E9E C5                  A  3119    	PUSH	BC
0B0E9F CD 08 24 0B         A  3120    	CALL	_free
0B0EA3 C1                  A  3121    	POP	BC
0B0EA4 DD27FB              A  3122    	LD	HL,(IX+%FFFFFFFB)
0B0EA7 DD5EFE              A  3123    	LD	E,(IX+%FFFFFFFE)
0B0EAA 01FFFFFF            A  3124    	LD	BC,16777215
0B0EAE 3EFF                A  3125    	LD	A,%FF
0B0EB0 CD 02 24 0B         A  3126    	CALL	__ladd
0B0EB4 DD2FFB              A  3127    	LD	(IX+%FFFFFFFB),HL
0B0EB7 DD73FE              A  3128    	LD	(IX+%FFFFFFFE),E
                           A  3129    ;  255	
                           A  3130    ;  256	        }		
0B0EBA                     A  3131    L_81:
                           A  3132    .LINE 256
                           A  3133    
0B0EBA DD27FB              A  3134    	LD	HL,(IX+%FFFFFFFB)
0B0EBD DD5EFE              A  3135    	LD	E,(IX+%FFFFFFFE)
0B0EC0 01000000            A  3136    	LD	BC,0
0B0EC4 AF                  A  3137    	XOR	A,A
0B0EC5 CD 9D 29 0B         A  3138    	CALL	__lcmps
0B0EC9 F2 D3 0E 0B         A  3139    	JP	P,L__62
0B0ECD EA 1B 0E 0B         A  3140    	JP	PE,L_79
0B0ED1 18 04               A  3141    	JR	L__63
0B0ED3                     A  3142    L__62:
0B0ED3 E2 1B 0E 0B         A  3143    	JP	PO,L_79
0B0ED7                     A  3144    L__63:
                           A  3145    ;  257			
                           A  3146    ;  258		}
0B0ED7                     A  3147    L_87:
                           A  3148    .LINE 258
                           A  3149    
                           A  3150    ;  259	
                           A  3151    ;  260	    mos_fclose(file);
                           A  3152    .LINE 260
                           A  3153    
0B0ED7 DD4EFF              A  3154    	LD	C,(IX+%FFFFFFFF)
0B0EDA 0600                A  3155    	LD	B,%0
0B0EDC C5                  A  3156    	PUSH	BC
0B0EDD CD 6F 22 0B         A  3157    	CALL	_mos_fclose
0B0EE1 C1                  A  3158    	POP	BC
                           A  3159    ;  261	    free(image_buffer);
                           A  3160    .LINE 261
                           A  3161    
0B0EE2 DD07B8              A  3162    	LD	BC,(IX+%FFFFFFB8)
0B0EE5 C5                  A  3163    	PUSH	BC
0B0EE6 CD 08 24 0B         A  3164    	CALL	_free
0B0EEA C1                  A  3165    	POP	BC
                           A  3166    ;  262		free(src);
                           A  3167    .LINE 262
                           A  3168    
0B0EEB DD07F0              A  3169    	LD	BC,(IX+%FFFFFFF0)
0B0EEE C5                  A  3170    	PUSH	BC
0B0EEF CD 08 24 0B         A  3171    	CALL	_free
0B0EF3 C1                  A  3172    	POP	BC
                           A  3173    ;  263	    //return width * height;
                           A  3174    ;  264		return_info.bmp_width = width;
                           A  3175    .LINE 264
                           A  3176    
0B0EF4 DD27E3              A  3177    	LD	HL,(IX+%FFFFFFE3)
0B0EF7 DD75E7              A  3178    	LD	(IX+%FFFFFFE7),L
0B0EFA DD74E8              A  3179    	LD	(IX+%FFFFFFE8),H
                           A  3180    ;  265		return_info.bmp_height = height;
                           A  3181    .LINE 265
                           A  3182    
0B0EFD DD27EC              A  3183    	LD	HL,(IX+%FFFFFFEC)
0B0F00 DD75E9              A  3184    	LD	(IX+%FFFFFFE9),L
0B0F03 DD74EA              A  3185    	LD	(IX+%FFFFFFEA),H
                           A  3186    ;  266		return_info.bmp_bitdepth = bit_dept
                           A  3187    .LINE 266
                           A  3188    
0B0F06 DD7EF7              A  3189    	LD	A,(IX+%FFFFFFF7)
0B0F09 DD77EB              A  3190    	LD	(IX+%FFFFFFEB),A
                           A  3191    ;  267		return return_info;
                           A  3192    .LINE 267
                           A  3193    
0B0F0C ED2206              A  3194    	LEA	HL,IX+%6
0B0F0F ED17                A  3195    	LD	DE,(HL)
0B0F11 ED22E7              A  3196    	LEA	HL,IX+%FFFFFFE7
0B0F14 01050000            A  3197    	LD	BC,5
0B0F18 EDB0                A  3198    	LDIR	
0B0F1A DD2706              A  3199    	LD	HL,(IX+%6)
                           A  3200    ;  268	
                           A  3201    ;  269	}
0B0F1D                     A  3202    L_88:
                           A  3203    .LINE 269
                           A  3204    
0B0F1D DDF9                A  3205    	LD	SP,IX
0B0F1F DDE1                A  3206    	POP	IX
0B0F21 C9                  A  3207    	RET	
                           A  3208    
                           A  3209    
                           A  3210    ;**************************** _load_bmp_big ***
                           A  3211    ;Name                         Addr/Register   S
                           A  3212    ;_free                               IMPORT  --
                           A  3213    ;_mos_puts                           IMPORT  --
                           A  3214    ;_mos_flseek                         IMPORT  --
                           A  3215    ;_write16bit                         IMPORT  --
                           A  3216    ;_putch                              IMPORT  --
                           A  3217    ;_vdp_bitmapSelect                   IMPORT  --
                           A  3218    ;_mos_fclose                         IMPORT  --
                           A  3219    ;_mos_fgetc                          IMPORT  --
                           A  3220    ;_malloc                             IMPORT  --
                           A  3221    ;_mos_fread                          IMPORT  --
                           A  3222    ;_mos_getfil                         IMPORT  --
                           A  3223    ;___print_sendstring                 IMPORT  --
                           A  3224    ;___print_xputch                     IMPORT    
                           A  3225    ;___print_uputch                     IMPORT  --
                           A  3226    ;_mos_fopen                          IMPORT  --
                           A  3227    ;color_table                        IX-1156   1
                           A  3228    ;header                              IX-132    
                           A  3229    ;non_pad_row                          IX-78    
                           A  3230    ;non_pad_row                          IX-75    
                           A  3231    ;image_buffer                         IX-72    
                           A  3232    ;biSize                               IX-69    
                           A  3233    ;image_start                          IX-65    
                           A  3234    ;row_24bpp                            IX-61    
                           A  3235    ;fo                                   IX-58    
                           A  3236    ;new_row_size                         IX-55    
                           A  3237    ;b                                    IX-53    
                           A  3238    ;g                                    IX-52    
                           A  3239    ;r                                    IX-51    
                           A  3240    ;x                                    IX-50    
                           A  3241    ;color_table_size                     IX-46    
                           A  3242    ;index                                IX-42    
                           A  3243    ;row_padding                          IX-41    
                           A  3244    ;O_17                                 IX-37    
                           A  3245    ;O_15                                 IX-33    
                           A  3246    ;width                                IX-29    
                           A  3247    ;return_info                          IX-25    
                           A  3248    ;height                               IX-20    
                           A  3249    ;src                                  IX-16    
                           A  3250    ;i                                    IX-13    
                           A  3251    ;bit_depth                             IX-9    
                           A  3252    ;y                                     IX-5    
                           A  3253    ;file                                  IX-1    
                           A  3254    ;slot                                 IX+12    
                           A  3255    ;filename                              IX+9    
                           A  3256    
                           A  3257    
                           A  3258    ; Stack Frame Size: 1197 (bytes)
                           A  3259    ;       Spill Code: -3 (instruction)
                           A  3260    
                           A  3261    
                           A  3262    .ENDFUNC "load_bmp_big",269,"_load_bmp_big"
                           A  3263    	SEGMENT STRSECT
0B2ADE                     A  3264    L__35:
0B2ADE 4572726F 723A2063   A  3265    	DB	"Error: could not open "
0B2AE6 6F756C64 206E6F74 
0B2AEE 206F7065 6E20 
0B2AF4 00                  A  3266    	DB	0
0B2AF5                     A  3267    L__36:
0B2AF5 2E                  A  3268    	DB	"."
0B2AF6 0D0A00              A  3269    	DB	13,10,0
0B2AF9                     A  3270    L__45:
0B2AF9 4572726F 723A2075   A  3271    	DB	"Error: unsupported bit depth (not 8, 2
0B2B01 6E737570 706F7274 
0B2B09 65642062 69742064 
0B2B11 65707468 20286E6F 
0B2B19 7420382C 20323420 
0B2B21 6F722033 322D6269 
0B2B29 74292E 
0B2B2C 0A00                A  3272    	DB	10,0
                           A  3273    	SEGMENT CODE
                           A  3274    ;  270	
                           A  3275    ;  271	uint16_t strtou16(const char *str) {
0B0F22                     A  3276    _strtou16:
                           A  3277    .DEFINE "_strtou16"
                           A  3278    
                           A  3279    .VALUE _strtou16
                           A  3280    
                           A  3281    .CLASS 2
                           A  3282    
                           A  3283    .TYPE 77
                           A  3284    
                           A  3285    .ENDEF
                           A  3286    
                           A  3287    .BEGFUNC "strtou16",271,"_strtou16"
                           A  3288    
                           A  3289    .LINE 271
                           A  3290    
                           A  3291    .DEFINE "str"
                           A  3292    
                           A  3293    .CLASS 65
                           A  3294    
                           A  3295    .VALUE 6
                           A  3296    
                           A  3297    .TYPE 194
                           A  3298    
                           A  3299    .ENDEF
                           A  3300    
                           A  3301    .DEFINE "result"
                           A  3302    
                           A  3303    .CLASS 65
                           A  3304    
                           A  3305    .VALUE -2
                           A  3306    
                           A  3307    .TYPE 13
                           A  3308    
                           A  3309    .ENDEF
                           A  3310    
                           A  3311    .DEFINE "digit"
                           A  3312    
                           A  3313    .CLASS 65
                           A  3314    
                           A  3315    .VALUE -4
                           A  3316    
                           A  3317    .TYPE 13
                           A  3318    
                           A  3319    .ENDEF
                           A  3320    
0B0F22 DDE5                A  3321    	PUSH	IX
0B0F24 DD210000 00         A  3322    	LD	IX,0
0B0F29 DD39                A  3323    	ADD	IX,SP
0B0F2B C5                  A  3324    	PUSH	BC
0B0F2C 3B                  A  3325    	DEC	SP
                           A  3326    ;  272	    uint16_t result = 0;
                           A  3327    .LINE 272
                           A  3328    
0B0F2D DD36FE00            A  3329    	LD	(IX+%FFFFFFFE),%0
0B0F31 DD36FF00            A  3330    	LD	(IX+%FFFFFFFF),%0
                           A  3331    ;  273	    const uint16_t maxDiv10 = 6553;  //
                           A  3332    ;  274	    const uint16_t maxMod10 = 5;     //
                           A  3333    ;  275	
                           A  3334    ;  276	    while (*str == ' ' || *str == '\t' 
                           A  3335    .LINE 276
                           A  3336    
0B0F35 18 07               A  3337    	JR	L_92
0B0F37                     A  3338    L_93:
                           A  3339    ;  277	        str++;
                           A  3340    .LINE 277
                           A  3341    
0B0F37 DD0706              A  3342    	LD	BC,(IX+%6)
0B0F3A 03                  A  3343    	INC	BC
0B0F3B DD0F06              A  3344    	LD	(IX+%6),BC
                           A  3345    ;  278	    }
0B0F3E                     A  3346    L_92:
                           A  3347    .LINE 278
                           A  3348    
0B0F3E DD2706              A  3349    	LD	HL,(IX+%6)
0B0F41 7E                  A  3350    	LD	A,(HL)
0B0F42 47                  A  3351    	LD	B,A
0B0F43 17ED62              A  3352    	SEXT	HL
0B0F46 68                  A  3353    	LD	L,B
0B0F47 01200000            A  3354    	LD	BC,32
0B0F4B B7                  A  3355    	OR	A,A
0B0F4C ED42                A  3356    	SBC	HL,BC
0B0F4E 28 E7               A  3357    	JR	Z,L_93
0B0F50 DD2706              A  3358    	LD	HL,(IX+%6)
0B0F53 7E                  A  3359    	LD	A,(HL)
0B0F54 47                  A  3360    	LD	B,A
0B0F55 17ED62              A  3361    	SEXT	HL
0B0F58 68                  A  3362    	LD	L,B
0B0F59 01090000            A  3363    	LD	BC,9
0B0F5D B7                  A  3364    	OR	A,A
0B0F5E ED42                A  3365    	SBC	HL,BC
0B0F60 28 D5               A  3366    	JR	Z,L_93
0B0F62 DD2706              A  3367    	LD	HL,(IX+%6)
0B0F65 7E                  A  3368    	LD	A,(HL)
0B0F66 47                  A  3369    	LD	B,A
0B0F67 17ED62              A  3370    	SEXT	HL
0B0F6A 68                  A  3371    	LD	L,B
0B0F6B 010A0000            A  3372    	LD	BC,10
0B0F6F B7                  A  3373    	OR	A,A
0B0F70 ED42                A  3374    	SBC	HL,BC
0B0F72 28 C3               A  3375    	JR	Z,L_93
                           A  3376    ;  279	
                           A  3377    ;  280	    while (*str >= '0' && *str <= '9') 
                           A  3378    .LINE 280
                           A  3379    
0B0F74 18 5F               A  3380    	JR	L_100
0B0F76                     A  3381    L_101:
                           A  3382    ;  281	        uint16_t digit = *str - '0';
                           A  3383    .LINE 281
                           A  3384    
0B0F76 DD2706              A  3385    	LD	HL,(IX+%6)
0B0F79 7E                  A  3386    	LD	A,(HL)
0B0F7A 47                  A  3387    	LD	B,A
0B0F7B 17ED62              A  3388    	SEXT	HL
0B0F7E 68                  A  3389    	LD	L,B
0B0F7F E5FDE1              A  3390    	LD	IY,HL
0B0F82 ED23D0              A  3391    	LEA	HL,IY+%FFFFFFD0
0B0F85 DD75FC              A  3392    	LD	(IX+%FFFFFFFC),L
0B0F88 DD74FD              A  3393    	LD	(IX+%FFFFFFFD),H
                           A  3394    ;  282	        if (result > maxDiv10 || (resul
                           A  3395    .LINE 282
                           A  3396    
0B0F8B DD07FE              A  3397    	LD	BC,(IX+%FFFFFFFE)
0B0F8E 49219919            A  3398    	LD.LIS	HL,6553
0B0F92 B7                  A  3399    	OR	A,A
0B0F93 40ED42              A  3400    	SBC.SIS	HL,BC
0B0F96 38 1A               A  3401    	JR	C,L_97
0B0F98 49019919            A  3402    	LD.LIS	BC,6553
0B0F9C DD27FE              A  3403    	LD	HL,(IX+%FFFFFFFE)
0B0F9F B7                  A  3404    	OR	A,A
0B0FA0 40ED42              A  3405    	SBC.SIS	HL,BC
0B0FA3 20 13               A  3406    	JR	NZ,L_98
0B0FA5 DD07FC              A  3407    	LD	BC,(IX+%FFFFFFFC)
0B0FA8 49210500            A  3408    	LD.LIS	HL,5
0B0FAC B7                  A  3409    	OR	A,A
0B0FAD 40ED42              A  3410    	SBC.SIS	HL,BC
0B0FB0 30 06               A  3411    	JR	NC,L_98
0B0FB2                     A  3412    L_97:
                           A  3413    ;  283	            return 65535;
                           A  3414    .LINE 283
                           A  3415    
0B0FB2 4921FFFF            A  3416    	LD.LIS	HL,65535
0B0FB6 18 5E               A  3417    	JR	L_104
                           A  3418    ;  284	        }
0B0FB8                     A  3419    L_98:
                           A  3420    .LINE 284
                           A  3421    
                           A  3422    ;  285	        result = result * 10 + digit;
                           A  3423    .LINE 285
                           A  3424    
0B0FB8 49210A00            A  3425    	LD.LIS	HL,10
0B0FBC DD07FE              A  3426    	LD	BC,(IX+%FFFFFFFE)
0B0FBF CD 90 2A 0B         A  3427    	CALL	__smulu
0B0FC3 DD07FC              A  3428    	LD	BC,(IX+%FFFFFFFC)
0B0FC6 4009                A  3429    	ADD.SIS	HL,BC
0B0FC8 DD75FE              A  3430    	LD	(IX+%FFFFFFFE),L
0B0FCB DD74FF              A  3431    	LD	(IX+%FFFFFFFF),H
                           A  3432    ;  286	        str++;
                           A  3433    .LINE 286
                           A  3434    
0B0FCE DD0706              A  3435    	LD	BC,(IX+%6)
0B0FD1 03                  A  3436    	INC	BC
0B0FD2 DD0F06              A  3437    	LD	(IX+%6),BC
                           A  3438    ;  287	    }
0B0FD5                     A  3439    L_100:
                           A  3440    .LINE 287
                           A  3441    
0B0FD5 DD2706              A  3442    	LD	HL,(IX+%6)
0B0FD8 7E                  A  3443    	LD	A,(HL)
0B0FD9 47                  A  3444    	LD	B,A
0B0FDA 17ED62              A  3445    	SEXT	HL
0B0FDD 68                  A  3446    	LD	L,B
0B0FDE 01300000            A  3447    	LD	BC,48
0B0FE2 B7                  A  3448    	OR	A,A
0B0FE3 ED42                A  3449    	SBC	HL,BC
0B0FE5 FA EF 0F 0B         A  3450    	JP	M,L__73
0B0FE9 EA 13 10 0B         A  3451    	JP	PE,L_103
0B0FED 18 04               A  3452    	JR	L__74
0B0FEF                     A  3453    L__73:
0B0FEF E2 13 10 0B         A  3454    	JP	PO,L_103
0B0FF3                     A  3455    L__74:
0B0FF3 DD2706              A  3456    	LD	HL,(IX+%6)
0B0FF6 7E                  A  3457    	LD	A,(HL)
0B0FF7 47                  A  3458    	LD	B,A
0B0FF8 17ED62              A  3459    	SEXT	HL
0B0FFB 68                  A  3460    	LD	L,B
0B0FFC E5C1                A  3461    	LD	BC,HL
0B0FFE 21390000            A  3462    	LD	HL,57
0B1002 B7                  A  3463    	OR	A,A
0B1003 ED42                A  3464    	SBC	HL,BC
0B1005 F2 0F 10 0B         A  3465    	JP	P,L__75
0B1009 EA 76 0F 0B         A  3466    	JP	PE,L_101
0B100D 18 04               A  3467    	JR	L__76
0B100F                     A  3468    L__75:
0B100F E2 76 0F 0B         A  3469    	JP	PO,L_101
0B1013                     A  3470    L__76:
0B1013                     A  3471    L_103:
                           A  3472    ;  288	
                           A  3473    ;  289	    return result;
                           A  3474    .LINE 289
                           A  3475    
0B1013 DD27FE              A  3476    	LD	HL,(IX+%FFFFFFFE)
                           A  3477    ;  290	}
0B1016                     A  3478    L_104:
                           A  3479    .LINE 290
                           A  3480    
0B1016 DDF9                A  3481    	LD	SP,IX
0B1018 DDE1                A  3482    	POP	IX
0B101A C9                  A  3483    	RET	
                           A  3484    
                           A  3485    
                           A  3486    ;**************************** _strtou16 *******
                           A  3487    ;Name                         Addr/Register   S
                           A  3488    ;digit                                 IX-4    
                           A  3489    ;result                                IX-2    
                           A  3490    ;str                                   IX+6    
                           A  3491    
                           A  3492    
                           A  3493    ; Stack Frame Size: 13 (bytes)
                           A  3494    ;       Spill Code: -3 (instruction)
                           A  3495    
                           A  3496    
                           A  3497    .ENDFUNC "strtou16",290,"_strtou16"
                           A  3498    ;  291	
                           A  3499    ;  292	uint8_t strtou8(const char *str) {
0B101B                     A  3500    _strtou8:
                           A  3501    .DEFINE "_strtou8"
                           A  3502    
                           A  3503    .VALUE _strtou8
                           A  3504    
                           A  3505    .CLASS 2
                           A  3506    
                           A  3507    .TYPE 76
                           A  3508    
                           A  3509    .ENDEF
                           A  3510    
                           A  3511    .BEGFUNC "strtou8",292,"_strtou8"
                           A  3512    
                           A  3513    .LINE 292
                           A  3514    
                           A  3515    .DEFINE "str"
                           A  3516    
                           A  3517    .CLASS 65
                           A  3518    
                           A  3519    .VALUE 6
                           A  3520    
                           A  3521    .TYPE 194
                           A  3522    
                           A  3523    .ENDEF
                           A  3524    
                           A  3525    .DEFINE "result"
                           A  3526    
                           A  3527    .CLASS 65
                           A  3528    
                           A  3529    .VALUE -1
                           A  3530    
                           A  3531    .TYPE 12
                           A  3532    
                           A  3533    .ENDEF
                           A  3534    
                           A  3535    .DEFINE "digit"
                           A  3536    
                           A  3537    .CLASS 65
                           A  3538    
                           A  3539    .VALUE -2
                           A  3540    
                           A  3541    .TYPE 12
                           A  3542    
                           A  3543    .ENDEF
                           A  3544    
0B101B DDE5                A  3545    	PUSH	IX
0B101D DD210000 00         A  3546    	LD	IX,0
0B1022 DD39                A  3547    	ADD	IX,SP
0B1024 3B                  A  3548    	DEC	SP
0B1025 3B                  A  3549    	DEC	SP
                           A  3550    ;  293	    uint8_t result = 0;
                           A  3551    .LINE 293
                           A  3552    
0B1026 DD36FF00            A  3553    	LD	(IX+%FFFFFFFF),%0
                           A  3554    ;  294	    const uint8_t maxDiv10 = 255 / 10;
                           A  3555    ;  295	    const uint8_t maxMod10 = 255 % 10;
                           A  3556    ;  296	
                           A  3557    ;  297	    while (*str == ' ' || *str == '\t' 
                           A  3558    .LINE 297
                           A  3559    
0B102A 18 07               A  3560    	JR	L_108
0B102C                     A  3561    L_109:
                           A  3562    ;  298	        str++;
                           A  3563    .LINE 298
                           A  3564    
0B102C DD0706              A  3565    	LD	BC,(IX+%6)
0B102F 03                  A  3566    	INC	BC
0B1030 DD0F06              A  3567    	LD	(IX+%6),BC
                           A  3568    ;  299	    }
0B1033                     A  3569    L_108:
                           A  3570    .LINE 299
                           A  3571    
0B1033 DD2706              A  3572    	LD	HL,(IX+%6)
0B1036 7E                  A  3573    	LD	A,(HL)
0B1037 47                  A  3574    	LD	B,A
0B1038 17ED62              A  3575    	SEXT	HL
0B103B 68                  A  3576    	LD	L,B
0B103C 01200000            A  3577    	LD	BC,32
0B1040 B7                  A  3578    	OR	A,A
0B1041 ED42                A  3579    	SBC	HL,BC
0B1043 28 E7               A  3580    	JR	Z,L_109
0B1045 DD2706              A  3581    	LD	HL,(IX+%6)
0B1048 7E                  A  3582    	LD	A,(HL)
0B1049 47                  A  3583    	LD	B,A
0B104A 17ED62              A  3584    	SEXT	HL
0B104D 68                  A  3585    	LD	L,B
0B104E 01090000            A  3586    	LD	BC,9
0B1052 B7                  A  3587    	OR	A,A
0B1053 ED42                A  3588    	SBC	HL,BC
0B1055 28 D5               A  3589    	JR	Z,L_109
0B1057 DD2706              A  3590    	LD	HL,(IX+%6)
0B105A 7E                  A  3591    	LD	A,(HL)
0B105B 47                  A  3592    	LD	B,A
0B105C 17ED62              A  3593    	SEXT	HL
0B105F 68                  A  3594    	LD	L,B
0B1060 010A0000            A  3595    	LD	BC,10
0B1064 B7                  A  3596    	OR	A,A
0B1065 ED42                A  3597    	SBC	HL,BC
0B1067 28 C3               A  3598    	JR	Z,L_109
                           A  3599    ;  300	
                           A  3600    ;  301	    while (*str >= '0' && *str <= '9') 
                           A  3601    .LINE 301
                           A  3602    
0B1069 18 37               A  3603    	JR	L_116
0B106B                     A  3604    L_117:
                           A  3605    ;  302	        uint8_t digit = *str - '0';
                           A  3606    .LINE 302
                           A  3607    
0B106B DD2706              A  3608    	LD	HL,(IX+%6)
0B106E 7E                  A  3609    	LD	A,(HL)
0B106F D630                A  3610    	SUB	A,%30
0B1071 DD77FE              A  3611    	LD	(IX+%FFFFFFFE),A
                           A  3612    ;  303	        if (result > maxDiv10 || (resul
                           A  3613    .LINE 303
                           A  3614    
0B1074 3E19                A  3615    	LD	A,%19
0B1076 DDBEFF              A  3616    	CP	A,(IX+%FFFFFFFF)
0B1079 38 0E               A  3617    	JR	C,L_113
0B107B DD7EFF              A  3618    	LD	A,(IX+%FFFFFFFF)
0B107E FE19                A  3619    	CP	A,%19
0B1080 20 0B               A  3620    	JR	NZ,L_114
0B1082 3E05                A  3621    	LD	A,%5
0B1084 DDBEFE              A  3622    	CP	A,(IX+%FFFFFFFE)
0B1087 30 04               A  3623    	JR	NC,L_114
0B1089                     A  3624    L_113:
                           A  3625    ;  304	            return 255;
                           A  3626    .LINE 304
                           A  3627    
0B1089 3EFF                A  3628    	LD	A,%FF
0B108B 18 56               A  3629    	JR	L_120
                           A  3630    ;  305	        }
0B108D                     A  3631    L_114:
                           A  3632    .LINE 305
                           A  3633    
                           A  3634    ;  306	        result = result * 10 + digit;
                           A  3635    .LINE 306
                           A  3636    
0B108D 060A                A  3637    	LD	B,%A
0B108F DD4EFF              A  3638    	LD	C,(IX+%FFFFFFFF)
0B1092 ED4C                A  3639    	MLT	BC
0B1094 79                  A  3640    	LD	A,C
0B1095 DD86FE              A  3641    	ADD	A,(IX+%FFFFFFFE)
0B1098 DD77FF              A  3642    	LD	(IX+%FFFFFFFF),A
                           A  3643    ;  307	        str++;
                           A  3644    .LINE 307
                           A  3645    
0B109B DD0706              A  3646    	LD	BC,(IX+%6)
0B109E 03                  A  3647    	INC	BC
0B109F DD0F06              A  3648    	LD	(IX+%6),BC
                           A  3649    ;  308	    }
0B10A2                     A  3650    L_116:
                           A  3651    .LINE 308
                           A  3652    
0B10A2 DD2706              A  3653    	LD	HL,(IX+%6)
0B10A5 7E                  A  3654    	LD	A,(HL)
0B10A6 47                  A  3655    	LD	B,A
0B10A7 17ED62              A  3656    	SEXT	HL
0B10AA 68                  A  3657    	LD	L,B
0B10AB 01300000            A  3658    	LD	BC,48
0B10AF B7                  A  3659    	OR	A,A
0B10B0 ED42                A  3660    	SBC	HL,BC
0B10B2 FA BC 10 0B         A  3661    	JP	M,L__86
0B10B6 EA E0 10 0B         A  3662    	JP	PE,L_119
0B10BA 18 04               A  3663    	JR	L__87
0B10BC                     A  3664    L__86:
0B10BC E2 E0 10 0B         A  3665    	JP	PO,L_119
0B10C0                     A  3666    L__87:
0B10C0 DD2706              A  3667    	LD	HL,(IX+%6)
0B10C3 7E                  A  3668    	LD	A,(HL)
0B10C4 47                  A  3669    	LD	B,A
0B10C5 17ED62              A  3670    	SEXT	HL
0B10C8 68                  A  3671    	LD	L,B
0B10C9 E5C1                A  3672    	LD	BC,HL
0B10CB 21390000            A  3673    	LD	HL,57
0B10CF B7                  A  3674    	OR	A,A
0B10D0 ED42                A  3675    	SBC	HL,BC
0B10D2 F2 DC 10 0B         A  3676    	JP	P,L__88
0B10D6 EA 6B 10 0B         A  3677    	JP	PE,L_117
0B10DA 18 04               A  3678    	JR	L__89
0B10DC                     A  3679    L__88:
0B10DC E2 6B 10 0B         A  3680    	JP	PO,L_117
0B10E0                     A  3681    L__89:
0B10E0                     A  3682    L_119:
                           A  3683    ;  309	
                           A  3684    ;  310	    return result;
                           A  3685    .LINE 310
                           A  3686    
0B10E0 DD7EFF              A  3687    	LD	A,(IX+%FFFFFFFF)
                           A  3688    ;  311	}
0B10E3                     A  3689    L_120:
                           A  3690    .LINE 311
                           A  3691    
0B10E3 DDF9                A  3692    	LD	SP,IX
0B10E5 DDE1                A  3693    	POP	IX
0B10E7 C9                  A  3694    	RET	
                           A  3695    
                           A  3696    
                           A  3697    ;**************************** _strtou8 ********
                           A  3698    ;Name                         Addr/Register   S
                           A  3699    ;digit                                 IX-2    
                           A  3700    ;result                                IX-1    
                           A  3701    ;str                                   IX+6    
                           A  3702    
                           A  3703    
                           A  3704    ; Stack Frame Size: 11 (bytes)
                           A  3705    ;       Spill Code: -3 (instruction)
                           A  3706    
                           A  3707    
                           A  3708    .ENDFUNC "strtou8",311,"_strtou8"
                           A  3709    ;  312	
                           A  3710    ;  313	uint24_t strtou24(const char *str) {
0B10E8                     A  3711    _strtou24:
                           A  3712    .DEFINE "_strtou24"
                           A  3713    
                           A  3714    .VALUE _strtou24
                           A  3715    
                           A  3716    .CLASS 2
                           A  3717    
                           A  3718    .TYPE 78
                           A  3719    
                           A  3720    .ENDEF
                           A  3721    
                           A  3722    .BEGFUNC "strtou24",313,"_strtou24"
                           A  3723    
                           A  3724    .LINE 313
                           A  3725    
                           A  3726    .DEFINE "str"
                           A  3727    
                           A  3728    .CLASS 65
                           A  3729    
                           A  3730    .VALUE 6
                           A  3731    
                           A  3732    .TYPE 194
                           A  3733    
                           A  3734    .ENDEF
                           A  3735    
                           A  3736    .DEFINE "result"
                           A  3737    
                           A  3738    .CLASS 65
                           A  3739    
                           A  3740    .VALUE -4
                           A  3741    
                           A  3742    .TYPE 15
                           A  3743    
                           A  3744    .ENDEF
                           A  3745    
                           A  3746    .DEFINE "digit"
                           A  3747    
                           A  3748    .CLASS 65
                           A  3749    
                           A  3750    .VALUE -8
                           A  3751    
                           A  3752    .TYPE 15
                           A  3753    
                           A  3754    .ENDEF
                           A  3755    
0B10E8 DDE5                A  3756    	PUSH	IX
0B10EA DD210000 00         A  3757    	LD	IX,0
0B10EF DD39                A  3758    	ADD	IX,SP
0B10F1 C5                  A  3759    	PUSH	BC
0B10F2 C5                  A  3760    	PUSH	BC
0B10F3 3B                  A  3761    	DEC	SP
0B10F4 3B                  A  3762    	DEC	SP
                           A  3763    ;  314	    uint32_t result = 0;
                           A  3764    .LINE 314
                           A  3765    
0B10F5 01000000            A  3766    	LD	BC,0
0B10F9 AF                  A  3767    	XOR	A,A
0B10FA DD0FFC              A  3768    	LD	(IX+%FFFFFFFC),BC
0B10FD DD77FF              A  3769    	LD	(IX+%FFFFFFFF),A
                           A  3770    ;  315	    const uint32_t maxDiv10 = 1677721;
                           A  3771    ;  316	    const uint32_t maxMod10 = 5;
                           A  3772    ;  317	
                           A  3773    ;  318	    while (*str == ' ' || *str == '\t' 
                           A  3774    .LINE 318
                           A  3775    
0B1100 18 07               A  3776    	JR	L_124
0B1102                     A  3777    L_125:
                           A  3778    ;  319	        str++;
                           A  3779    .LINE 319
                           A  3780    
0B1102 DD0706              A  3781    	LD	BC,(IX+%6)
0B1105 03                  A  3782    	INC	BC
0B1106 DD0F06              A  3783    	LD	(IX+%6),BC
                           A  3784    ;  320	    }
0B1109                     A  3785    L_124:
                           A  3786    .LINE 320
                           A  3787    
0B1109 DD2706              A  3788    	LD	HL,(IX+%6)
0B110C 7E                  A  3789    	LD	A,(HL)
0B110D 47                  A  3790    	LD	B,A
0B110E 17ED62              A  3791    	SEXT	HL
0B1111 68                  A  3792    	LD	L,B
0B1112 01200000            A  3793    	LD	BC,32
0B1116 B7                  A  3794    	OR	A,A
0B1117 ED42                A  3795    	SBC	HL,BC
0B1119 28 E7               A  3796    	JR	Z,L_125
0B111B DD2706              A  3797    	LD	HL,(IX+%6)
0B111E 7E                  A  3798    	LD	A,(HL)
0B111F 47                  A  3799    	LD	B,A
0B1120 17ED62              A  3800    	SEXT	HL
0B1123 68                  A  3801    	LD	L,B
0B1124 01090000            A  3802    	LD	BC,9
0B1128 B7                  A  3803    	OR	A,A
0B1129 ED42                A  3804    	SBC	HL,BC
0B112B 28 D5               A  3805    	JR	Z,L_125
0B112D DD2706              A  3806    	LD	HL,(IX+%6)
0B1130 7E                  A  3807    	LD	A,(HL)
0B1131 47                  A  3808    	LD	B,A
0B1132 17ED62              A  3809    	SEXT	HL
0B1135 68                  A  3810    	LD	L,B
0B1136 010A0000            A  3811    	LD	BC,10
0B113A B7                  A  3812    	OR	A,A
0B113B ED42                A  3813    	SBC	HL,BC
0B113D 28 C3               A  3814    	JR	Z,L_125
                           A  3815    ;  321		
                           A  3816    ;  322	    while (*str >= '0' && *str <= '9') 
                           A  3817    .LINE 322
                           A  3818    
0B113F 18 7A               A  3819    	JR	L_132
0B1141                     A  3820    L_133:
                           A  3821    ;  323	        uint32_t digit = *str - '0';
                           A  3822    .LINE 323
                           A  3823    
0B1141 DD2706              A  3824    	LD	HL,(IX+%6)
0B1144 7E                  A  3825    	LD	A,(HL)
0B1145 47                  A  3826    	LD	B,A
0B1146 17ED62              A  3827    	SEXT	HL
0B1149 68                  A  3828    	LD	L,B
0B114A 5C                  A  3829    	LD	E,H
0B114B 01300000            A  3830    	LD	BC,48
0B114F AF                  A  3831    	XOR	A,A
0B1150 CD DD 28 0B         A  3832    	CALL	__lsub
0B1154 DD2FF8              A  3833    	LD	(IX+%FFFFFFF8),HL
0B1157 DD73FB              A  3834    	LD	(IX+%FFFFFFFB),E
                           A  3835    ;  324	        if (result > maxDiv10 || (resul
                           A  3836    .LINE 324
                           A  3837    
0B115A 21999919            A  3838    	LD	HL,1677721
0B115E 1E00                A  3839    	LD	E,%0
0B1160 DD07FC              A  3840    	LD	BC,(IX+%FFFFFFFC)
0B1163 DD7EFF              A  3841    	LD	A,(IX+%FFFFFFFF)
0B1166 CD 9D 29 0B         A  3842    	CALL	__lcmpu
0B116A 38 23               A  3843    	JR	C,L_129
0B116C DD27FC              A  3844    	LD	HL,(IX+%FFFFFFFC)
0B116F DD5EFF              A  3845    	LD	E,(IX+%FFFFFFFF)
0B1172 01999919            A  3846    	LD	BC,1677721
0B1176 AF                  A  3847    	XOR	A,A
0B1177 CD 9D 29 0B         A  3848    	CALL	__lcmpu
0B117B 20 18               A  3849    	JR	NZ,L_130
0B117D 21050000            A  3850    	LD	HL,5
0B1181 1E00                A  3851    	LD	E,%0
0B1183 DD07F8              A  3852    	LD	BC,(IX+%FFFFFFF8)
0B1186 DD7EFB              A  3853    	LD	A,(IX+%FFFFFFFB)
0B1189 CD 9D 29 0B         A  3854    	CALL	__lcmpu
0B118D 30 06               A  3855    	JR	NC,L_130
0B118F                     A  3856    L_129:
                           A  3857    ;  325	            return 16777215;
                           A  3858    .LINE 325
                           A  3859    
0B118F 21FFFFFF            A  3860    	LD	HL,16777215
0B1193 18 67               A  3861    	JR	L_136
                           A  3862    ;  326	        }
0B1195                     A  3863    L_130:
                           A  3864    .LINE 326
                           A  3865    
                           A  3866    ;  327	        result = result * 10 + digit;
                           A  3867    .LINE 327
                           A  3868    
0B1195 DD27FC              A  3869    	LD	HL,(IX+%FFFFFFFC)
0B1198 DD5EFF              A  3870    	LD	E,(IX+%FFFFFFFF)
0B119B 010A0000            A  3871    	LD	BC,10
0B119F AF                  A  3872    	XOR	A,A
0B11A0 CD 17 2A 0B         A  3873    	CALL	__lmulu
0B11A4 DD07F8              A  3874    	LD	BC,(IX+%FFFFFFF8)
0B11A7 DD7EFB              A  3875    	LD	A,(IX+%FFFFFFFB)
0B11AA CD 02 24 0B         A  3876    	CALL	__ladd
0B11AE DD2FFC              A  3877    	LD	(IX+%FFFFFFFC),HL
0B11B1 DD73FF              A  3878    	LD	(IX+%FFFFFFFF),E
                           A  3879    ;  328	        str++;
                           A  3880    .LINE 328
                           A  3881    
0B11B4 DD0706              A  3882    	LD	BC,(IX+%6)
0B11B7 03                  A  3883    	INC	BC
0B11B8 DD0F06              A  3884    	LD	(IX+%6),BC
                           A  3885    ;  329	    }
0B11BB                     A  3886    L_132:
                           A  3887    .LINE 329
                           A  3888    
0B11BB DD2706              A  3889    	LD	HL,(IX+%6)
0B11BE 7E                  A  3890    	LD	A,(HL)
0B11BF 47                  A  3891    	LD	B,A
0B11C0 17ED62              A  3892    	SEXT	HL
0B11C3 68                  A  3893    	LD	L,B
0B11C4 01300000            A  3894    	LD	BC,48
0B11C8 B7                  A  3895    	OR	A,A
0B11C9 ED42                A  3896    	SBC	HL,BC
0B11CB FA D5 11 0B         A  3897    	JP	M,L__99
0B11CF EA F9 11 0B         A  3898    	JP	PE,L_135
0B11D3 18 04               A  3899    	JR	L__100
0B11D5                     A  3900    L__99:
0B11D5 E2 F9 11 0B         A  3901    	JP	PO,L_135
0B11D9                     A  3902    L__100:
0B11D9 DD2706              A  3903    	LD	HL,(IX+%6)
0B11DC 7E                  A  3904    	LD	A,(HL)
0B11DD 47                  A  3905    	LD	B,A
0B11DE 17ED62              A  3906    	SEXT	HL
0B11E1 68                  A  3907    	LD	L,B
0B11E2 E5C1                A  3908    	LD	BC,HL
0B11E4 21390000            A  3909    	LD	HL,57
0B11E8 B7                  A  3910    	OR	A,A
0B11E9 ED42                A  3911    	SBC	HL,BC
0B11EB F2 F5 11 0B         A  3912    	JP	P,L__101
0B11EF EA 41 11 0B         A  3913    	JP	PE,L_133
0B11F3 18 04               A  3914    	JR	L__102
0B11F5                     A  3915    L__101:
0B11F5 E2 41 11 0B         A  3916    	JP	PO,L_133
0B11F9                     A  3917    L__102:
0B11F9                     A  3918    L_135:
                           A  3919    ;  330	
                           A  3920    ;  331	    return result;
                           A  3921    .LINE 331
                           A  3922    
0B11F9 DD27FC              A  3923    	LD	HL,(IX+%FFFFFFFC)
                           A  3924    ;  332	}
0B11FC                     A  3925    L_136:
                           A  3926    .LINE 332
                           A  3927    
0B11FC DDF9                A  3928    	LD	SP,IX
0B11FE DDE1                A  3929    	POP	IX
0B1200 C9                  A  3930    	RET	
                           A  3931    
                           A  3932    
                           A  3933    ;**************************** _strtou24 *******
                           A  3934    ;Name                         Addr/Register   S
                           A  3935    ;digit                                 IX-8    
                           A  3936    ;result                                IX-4    
                           A  3937    ;str                                   IX+6    
                           A  3938    
                           A  3939    
                           A  3940    ; Stack Frame Size: 17 (bytes)
                           A  3941    ;       Spill Code: -3 (instruction)
                           A  3942    
                           A  3943    
                           A  3944    .ENDFUNC "strtou24",332,"_strtou24"
                           A  3945    ;  333	
                           A  3946    ;  334	int main(int argc, char * argv[]) {
0B1201                     A  3947    _main:
                           A  3948    .DEFINE "_main"
                           A  3949    
                           A  3950    .VALUE _main
                           A  3951    
                           A  3952    .CLASS 2
                           A  3953    
                           A  3954    .TYPE 68
                           A  3955    
                           A  3956    .ENDEF
                           A  3957    
                           A  3958    .BEGFUNC "main",334,"_main"
                           A  3959    
                           A  3960    .LINE 334
                           A  3961    
                           A  3962    .DEFINE "argc"
                           A  3963    
                           A  3964    .CLASS 65
                           A  3965    
                           A  3966    .VALUE 6
                           A  3967    
                           A  3968    .TYPE 4
                           A  3969    
                           A  3970    .ENDEF
                           A  3971    
                           A  3972    .DEFINE "argv"
                           A  3973    
                           A  3974    .CLASS 65
                           A  3975    
                           A  3976    .VALUE 9
                           A  3977    
                           A  3978    .TYPE 290
                           A  3979    
                           A  3980    .ENDEF
                           A  3981    
                           A  3982    .DEFINE "bitmap_slot"
                           A  3983    
                           A  3984    .CLASS 65
                           A  3985    
                           A  3986    .VALUE -1
                           A  3987    
                           A  3988    .TYPE 12
                           A  3989    
                           A  3990    .ENDEF
                           A  3991    
                           A  3992    .DEFINE "x"
                           A  3993    
                           A  3994    .CLASS 65
                           A  3995    
                           A  3996    .VALUE -7
                           A  3997    
                           A  3998    .TYPE 14
                           A  3999    
                           A  4000    .ENDEF
                           A  4001    
                           A  4002    .DEFINE "bmp"
                           A  4003    
                           A  4004    .CLASS 65
                           A  4005    
                           A  4006    .VALUE -12
                           A  4007    
                           A  4008    .TAG "NONAME6"
                           A  4009    
                           A  4010    .TYPE 8
                           A  4011    
                           A  4012    .ENDEF
                           A  4013    
                           A  4014    .DEFINE "y"
                           A  4015    
                           A  4016    .CLASS 65
                           A  4017    
                           A  4018    .VALUE -18
                           A  4019    
                           A  4020    .TYPE 14
                           A  4021    
                           A  4022    .ENDEF
                           A  4023    
0B1201 DDE5                A  4024    	PUSH	IX
0B1203 DD210000 00         A  4025    	LD	IX,0
0B1208 DD39                A  4026    	ADD	IX,SP
0B120A ED22DE              A  4027    	LEA	HL,IX+%FFFFFFDE
0B120D F9                  A  4028    	LD	SP,HL
                           A  4029    ;  335	
                           A  4030    ;  336	    uint24_t x, y;
                           A  4031    ;  337		uint8_t bitmap_slot = 0;
                           A  4032    .LINE 337
                           A  4033    
0B120E DD36FF00            A  4034    	LD	(IX+%FFFFFFFF),%0
                           A  4035    ;  338		bmp_info bmp;
                           A  4036    ;  339		
                           A  4037    ;  340		//Args = 0:binary name, 1:filname, 
                           A  4038    ;  341		
                           A  4039    ;  342		if ((argc < 2) || (argc == 4) || (a
                           A  4040    .LINE 342
                           A  4041    
0B1212 01020000            A  4042    	LD	BC,2
0B1216 DD2706              A  4043    	LD	HL,(IX+%6)
0B1219 B7                  A  4044    	OR	A,A
0B121A ED42                A  4045    	SBC	HL,BC
0B121C FA 26 12 0B         A  4046    	JP	M,L__117
0B1220 EA 4E 12 0B         A  4047    	JP	PE,L_139
0B1224 18 04               A  4048    	JR	L__118
0B1226                     A  4049    L__117:
0B1226 E2 4E 12 0B         A  4050    	JP	PO,L_139
0B122A                     A  4051    L__118:
0B122A 01040000            A  4052    	LD	BC,4
0B122E DD2706              A  4053    	LD	HL,(IX+%6)
0B1231 B7                  A  4054    	OR	A,A
0B1232 ED42                A  4055    	SBC	HL,BC
0B1234 28 18               A  4056    	JR	Z,L_139
0B1236 DD0706              A  4057    	LD	BC,(IX+%6)
0B1239 21050000            A  4058    	LD	HL,5
0B123D B7                  A  4059    	OR	A,A
0B123E ED42                A  4060    	SBC	HL,BC
0B1240 F2 4A 12 0B         A  4061    	JP	P,L__119
0B1244 EA 7D 12 0B         A  4062    	JP	PE,L_141
0B1248 18 04               A  4063    	JR	L__120
0B124A                     A  4064    L__119:
0B124A E2 7D 12 0B         A  4065    	JP	PO,L_141
0B124E                     A  4066    L__120:
0B124E                     A  4067    L_139:
                           A  4068    ;  343	        printf("Usage is %s <filename> 
                           A  4069    .LINE 343
                           A  4070    
0B124E 01 A8 27 0B         A  4071    	LD	BC,___print_uputch
0B1252 ED43 D8 2A 0B       A  4072    	LD	(___print_xputch),BC
0B1257 01 2E 2B 0B         A  4073    	LD	BC,L__107
0B125B C5                  A  4074    	PUSH	BC
0B125C CD 0D 26 0B         A  4075    	CALL	___print_sendstring
0B1260 C1                  A  4076    	POP	BC
0B1261 DD2709              A  4077    	LD	HL,(IX+%9)
0B1264 ED07                A  4078    	LD	BC,(HL)
0B1266 C5                  A  4079    	PUSH	BC
0B1267 CD 0D 26 0B         A  4080    	CALL	___print_sendstring
0B126B C1                  A  4081    	POP	BC
0B126C 01 38 2B 0B         A  4082    	LD	BC,L__108
0B1270 C5                  A  4083    	PUSH	BC
0B1271 CD 0D 26 0B         A  4084    	CALL	___print_sendstring
0B1275 C1                  A  4085    	POP	BC
                           A  4086    ;  344	        return 0;
                           A  4087    .LINE 344
                           A  4088    
0B1276 B7                  A  4089    	OR	A,A
0B1277 ED62                A  4090    	SBC	HL,HL
0B1279 C3 38 14 0B         A  4091    	JR	L_157
                           A  4092    ;  345	    }
0B127D                     A  4093    L_141:
                           A  4094    .LINE 345
                           A  4095    
                           A  4096    ;  346		
                           A  4097    ;  347		if (argc > 2) bitmap_slot = strtou8
                           A  4098    .LINE 347
                           A  4099    
0B127D DD0706              A  4100    	LD	BC,(IX+%6)
0B1280 21020000            A  4101    	LD	HL,2
0B1284 B7                  A  4102    	OR	A,A
0B1285 ED42                A  4103    	SBC	HL,BC
0B1287 F2 91 12 0B         A  4104    	JP	P,L__121
0B128B EA A6 12 0B         A  4105    	JP	PE,L_155
0B128F 18 04               A  4106    	JR	L__122
0B1291                     A  4107    L__121:
0B1291 E2 A6 12 0B         A  4108    	JP	PO,L_155
0B1295                     A  4109    L__122:
0B1295 DD3109              A  4110    	LD	IY,(IX+%9)
0B1298 ED2306              A  4111    	LEA	HL,IY+%6
0B129B ED07                A  4112    	LD	BC,(HL)
0B129D C5                  A  4113    	PUSH	BC
0B129E CD 1B 10 0B         A  4114    	CALL	_strtou8
0B12A2 C1                  A  4115    	POP	BC
0B12A3 DD77FF              A  4116    	LD	(IX+%FFFFFFFF),A
0B12A6                     A  4117    L_155:
                           A  4118    ;  348		
                           A  4119    ;  349	    //vdp_mode(8);
                           A  4120    ;  350		
                           A  4121    ;  351		if (argc == 2) {
                           A  4122    .LINE 351
                           A  4123    
0B12A6 01020000            A  4124    	LD	BC,2
0B12AA DD2706              A  4125    	LD	HL,(IX+%6)
0B12AD B7                  A  4126    	OR	A,A
0B12AE ED42                A  4127    	SBC	HL,BC
0B12B0 20 25               A  4128    	JR	NZ,L_154
                           A  4129    ;  352	
                           A  4130    ;  353			bmp = load_bmp_big(argv[1], 0);
                           A  4131    .LINE 353
                           A  4132    
0B12B2 01000000            A  4133    	LD	BC,0
0B12B6 C5                  A  4134    	PUSH	BC
0B12B7 DD3109              A  4135    	LD	IY,(IX+%9)
0B12BA ED2303              A  4136    	LEA	HL,IY+%3
0B12BD ED07                A  4137    	LD	BC,(HL)
0B12BF C5                  A  4138    	PUSH	BC
0B12C0 ED65E9              A  4139    	PEA	IX+%FFFFFFE9
0B12C3 CD AA 06 0B         A  4140    	CALL	_load_bmp_big
0B12C7 C1                  A  4141    	POP	BC
0B12C8 C1                  A  4142    	POP	BC
0B12C9 C1                  A  4143    	POP	BC
0B12CA ED12F4              A  4144    	LEA	DE,IX+%FFFFFFF4
0B12CD 01050000            A  4145    	LD	BC,5
0B12D1 EDB0                A  4146    	LDIR	
                           A  4147    ;  354			
                           A  4148    ;  355		} else if (argc == 3) {
                           A  4149    .LINE 355
                           A  4150    
0B12D3 C3 35 14 0B         A  4151    	JR	L_156
0B12D7                     A  4152    L_154:
0B12D7 01030000            A  4153    	LD	BC,3
0B12DB DD2706              A  4154    	LD	HL,(IX+%6)
0B12DE B7                  A  4155    	OR	A,A
0B12DF ED42                A  4156    	SBC	HL,BC
0B12E1 20 26               A  4157    	JR	NZ,L_152
                           A  4158    ;  356			
                           A  4159    ;  357			bmp = load_bmp_big(argv[1], bit
                           A  4160    .LINE 357
                           A  4161    
0B12E3 DD4EFF              A  4162    	LD	C,(IX+%FFFFFFFF)
0B12E6 0600                A  4163    	LD	B,%0
0B12E8 C5                  A  4164    	PUSH	BC
0B12E9 DD3109              A  4165    	LD	IY,(IX+%9)
0B12EC ED2303              A  4166    	LEA	HL,IY+%3
0B12EF ED07                A  4167    	LD	BC,(HL)
0B12F1 C5                  A  4168    	PUSH	BC
0B12F2 ED65E4              A  4169    	PEA	IX+%FFFFFFE4
0B12F5 CD AA 06 0B         A  4170    	CALL	_load_bmp_big
0B12F9 C1                  A  4171    	POP	BC
0B12FA C1                  A  4172    	POP	BC
0B12FB C1                  A  4173    	POP	BC
0B12FC ED12F4              A  4174    	LEA	DE,IX+%FFFFFFF4
0B12FF 01050000            A  4175    	LD	BC,5
0B1303 EDB0                A  4176    	LDIR	
                           A  4177    ;  358			
                           A  4178    ;  359		} else if (argc == 5) {
                           A  4179    .LINE 359
                           A  4180    
0B1305 C3 35 14 0B         A  4181    	JR	L_156
0B1309                     A  4182    L_152:
0B1309 01050000            A  4183    	LD	BC,5
0B130D DD2706              A  4184    	LD	HL,(IX+%6)
0B1310 B7                  A  4185    	OR	A,A
0B1311 ED42                A  4186    	SBC	HL,BC
0B1313 C2 35 14 0B         A  4187    	JR	NZ,L_156
                           A  4188    ;  360		
                           A  4189    ;  361			bmp = load_bmp_big(argv[1], bit
                           A  4190    .LINE 361
                           A  4191    
0B1317 DD4EFF              A  4192    	LD	C,(IX+%FFFFFFFF)
0B131A 0600                A  4193    	LD	B,%0
0B131C C5                  A  4194    	PUSH	BC
0B131D DD3109              A  4195    	LD	IY,(IX+%9)
0B1320 ED2303              A  4196    	LEA	HL,IY+%3
0B1323 ED07                A  4197    	LD	BC,(HL)
0B1325 C5                  A  4198    	PUSH	BC
0B1326 ED65DF              A  4199    	PEA	IX+%FFFFFFDF
0B1329 CD AA 06 0B         A  4200    	CALL	_load_bmp_big
0B132D C1                  A  4201    	POP	BC
0B132E C1                  A  4202    	POP	BC
0B132F C1                  A  4203    	POP	BC
0B1330 ED12F4              A  4204    	LEA	DE,IX+%FFFFFFF4
0B1333 01050000            A  4205    	LD	BC,5
0B1337 EDB0                A  4206    	LDIR	
                           A  4207    ;  362			
                           A  4208    ;  363			if (argv[3][0] == 'C' || argv[3
                           A  4209    .LINE 363
                           A  4210    
0B1339 DD3109              A  4211    	LD	IY,(IX+%9)
0B133C ED3309              A  4212    	LEA	IY,IY+%9
0B133F DD3EF1              A  4213    	LD	(IX+%FFFFFFF1),IY
0B1342 DD27F1              A  4214    	LD	HL,(IX+%FFFFFFF1)
0B1345 ED27                A  4215    	LD	HL,(HL)
0B1347 7E                  A  4216    	LD	A,(HL)
0B1348 47                  A  4217    	LD	B,A
0B1349 17ED62              A  4218    	SEXT	HL
0B134C 68                  A  4219    	LD	L,B
0B134D 01430000            A  4220    	LD	BC,67
0B1351 B7                  A  4221    	OR	A,A
0B1352 ED42                A  4222    	SBC	HL,BC
0B1354 28 14               A  4223    	JR	Z,L_143
0B1356 DD27F1              A  4224    	LD	HL,(IX+%FFFFFFF1)
0B1359 ED27                A  4225    	LD	HL,(HL)
0B135B 7E                  A  4226    	LD	A,(HL)
0B135C 47                  A  4227    	LD	B,A
0B135D 17ED62              A  4228    	SEXT	HL
0B1360 68                  A  4229    	LD	L,B
0B1361 01630000            A  4230    	LD	BC,99
0B1365 B7                  A  4231    	OR	A,A
0B1366 ED42                A  4232    	SBC	HL,BC
0B1368 20 2D               A  4233    	JR	NZ,L_144
0B136A                     A  4234    L_143:
0B136A DD77DE              A  4235    	LD	(IX+%FFFFFFDE),A
0B136D CD B8 20 0B         A  4236    	CALL	_getsysvar_scrwidth
0B1371 DD7EDE              A  4237    	LD	A,(IX+%FFFFFFDE)
0B1374 E5C1                A  4238    	LD	BC,HL
0B1376 CD A2 27 0B         A  4239    	CALL	__stoiu
0B137A E5D1                A  4240    	LD	DE,HL
0B137C DD07F4              A  4241    	LD	BC,(IX+%FFFFFFF4)
0B137F CD A2 27 0B         A  4242    	CALL	__stoiu
0B1383 E5C1                A  4243    	LD	BC,HL
0B1385 D5E1                A  4244    	LD	HL,DE
0B1387 B7                  A  4245    	OR	A,A
0B1388 ED42                A  4246    	SBC	HL,BC
0B138A 01020000            A  4247    	LD	BC,2
0B138E CD 5D 29 0B         A  4248    	CALL	__idivs
0B1392 DD2FF9              A  4249    	LD	(IX+%FFFFFFF9),HL
                           A  4250    ;  364			else x = strtou16(argv[4]);
                           A  4251    .LINE 364
                           A  4252    
0B1395 18 17               A  4253    	JR	L_148
0B1397                     A  4254    L_144:
0B1397 DD3109              A  4255    	LD	IY,(IX+%9)
0B139A ED230C              A  4256    	LEA	HL,IY+%C
0B139D ED07                A  4257    	LD	BC,(HL)
0B139F C5                  A  4258    	PUSH	BC
0B13A0 CD 22 0F 0B         A  4259    	CALL	_strtou16
0B13A4 C1                  A  4260    	POP	BC
0B13A5 E5C1                A  4261    	LD	BC,HL
0B13A7 CD A2 27 0B         A  4262    	CALL	__stoiu
0B13AB DD2FF9              A  4263    	LD	(IX+%FFFFFFF9),HL
0B13AE                     A  4264    L_148:
                           A  4265    ;  365			
                           A  4266    ;  366			if (argv[4][0] == 'C' || argv[4
                           A  4267    .LINE 366
                           A  4268    
0B13AE DD3109              A  4269    	LD	IY,(IX+%9)
0B13B1 ED330C              A  4270    	LEA	IY,IY+%C
0B13B4 DD3EFC              A  4271    	LD	(IX+%FFFFFFFC),IY
0B13B7 DD27FC              A  4272    	LD	HL,(IX+%FFFFFFFC)
0B13BA ED27                A  4273    	LD	HL,(HL)
0B13BC 7E                  A  4274    	LD	A,(HL)
0B13BD 47                  A  4275    	LD	B,A
0B13BE 17ED62              A  4276    	SEXT	HL
0B13C1 68                  A  4277    	LD	L,B
0B13C2 01430000            A  4278    	LD	BC,67
0B13C6 B7                  A  4279    	OR	A,A
0B13C7 ED42                A  4280    	SBC	HL,BC
0B13C9 28 14               A  4281    	JR	Z,L_146
0B13CB DD27FC              A  4282    	LD	HL,(IX+%FFFFFFFC)
0B13CE ED27                A  4283    	LD	HL,(HL)
0B13D0 7E                  A  4284    	LD	A,(HL)
0B13D1 47                  A  4285    	LD	B,A
0B13D2 17ED62              A  4286    	SEXT	HL
0B13D5 68                  A  4287    	LD	L,B
0B13D6 01630000            A  4288    	LD	BC,99
0B13DA B7                  A  4289    	OR	A,A
0B13DB ED42                A  4290    	SBC	HL,BC
0B13DD 20 2D               A  4291    	JR	NZ,L_147
0B13DF                     A  4292    L_146:
0B13DF DD77DE              A  4293    	LD	(IX+%FFFFFFDE),A
0B13E2 CD CB 20 0B         A  4294    	CALL	_getsysvar_scrheight
0B13E6 DD7EDE              A  4295    	LD	A,(IX+%FFFFFFDE)
0B13E9 E5C1                A  4296    	LD	BC,HL
0B13EB CD A2 27 0B         A  4297    	CALL	__stoiu
0B13EF E5D1                A  4298    	LD	DE,HL
0B13F1 DD07F6              A  4299    	LD	BC,(IX+%FFFFFFF6)
0B13F4 CD A2 27 0B         A  4300    	CALL	__stoiu
0B13F8 E5C1                A  4301    	LD	BC,HL
0B13FA D5E1                A  4302    	LD	HL,DE
0B13FC B7                  A  4303    	OR	A,A
0B13FD ED42                A  4304    	SBC	HL,BC
0B13FF 01020000            A  4305    	LD	BC,2
0B1403 CD 5D 29 0B         A  4306    	CALL	__idivs
0B1407 DD2FEE              A  4307    	LD	(IX+%FFFFFFEE),HL
                           A  4308    ;  367			else y = strtou16(argv[4]);
                           A  4309    .LINE 367
                           A  4310    
0B140A 18 14               A  4311    	JR	L_149
0B140C                     A  4312    L_147:
0B140C DD27FC              A  4313    	LD	HL,(IX+%FFFFFFFC)
0B140F ED07                A  4314    	LD	BC,(HL)
0B1411 C5                  A  4315    	PUSH	BC
0B1412 CD 22 0F 0B         A  4316    	CALL	_strtou16
0B1416 C1                  A  4317    	POP	BC
0B1417 E5C1                A  4318    	LD	BC,HL
0B1419 CD A2 27 0B         A  4319    	CALL	__stoiu
0B141D DD2FEE              A  4320    	LD	(IX+%FFFFFFEE),HL
0B1420                     A  4321    L_149:
                           A  4322    ;  368			
                           A  4323    ;  369			vdp_bitmapDraw(bitmap_slot,x,y)
                           A  4324    .LINE 369
                           A  4325    
0B1420 DD07EE              A  4326    	LD	BC,(IX+%FFFFFFEE)
0B1423 C5                  A  4327    	PUSH	BC
0B1424 DD07F9              A  4328    	LD	BC,(IX+%FFFFFFF9)
0B1427 C5                  A  4329    	PUSH	BC
0B1428 DD4EFF              A  4330    	LD	C,(IX+%FFFFFFFF)
0B142B 0600                A  4331    	LD	B,%0
0B142D C5                  A  4332    	PUSH	BC
0B142E CD E8 19 0B         A  4333    	CALL	_vdp_bitmapDraw
0B1432 C1                  A  4334    	POP	BC
0B1433 C1                  A  4335    	POP	BC
0B1434 C1                  A  4336    	POP	BC
                           A  4337    ;  370			
                           A  4338    ;  371		}
0B1435                     A  4339    L_156:
                           A  4340    .LINE 371
                           A  4341    
                           A  4342    ;  372	
                           A  4343    ;  373	    return 0;
                           A  4344    .LINE 373
                           A  4345    
0B1435 B7                  A  4346    	OR	A,A
0B1436 ED62                A  4347    	SBC	HL,HL
0B1438                     A  4348    L_157:
                           A  4349    .LINE 374
                           A  4350    
0B1438 DDF9                A  4351    	LD	SP,IX
0B143A DDE1                A  4352    	POP	IX
0B143C C9                  A  4353    	RET	
                           A  4354    
                           A  4355    
                           A  4356    ;**************************** _main ***********
                           A  4357    ;Name                         Addr/Register   S
                           A  4358    ;_vdp_bitmapDraw                     IMPORT  --
                           A  4359    ;_getsysvar_scrheight                IMPORT  --
                           A  4360    ;_getsysvar_scrwidth                 IMPORT  --
                           A  4361    ;___print_sendstring                 IMPORT  --
                           A  4362    ;___print_xputch                     IMPORT    
                           A  4363    ;___print_uputch                     IMPORT  --
                           A  4364    ;y                                    IX-18    
                           A  4365    ;G_1                                  IX-15    
                           A  4366    ;bmp                                  IX-12    
                           A  4367    ;x                                     IX-7    
                           A  4368    ;G_2                                   IX-4    
                           A  4369    ;bitmap_slot                           IX-1    
                           A  4370    ;argv                                  IX+9    
                           A  4371    ;argc                                  IX+6    
                           A  4372    
                           A  4373    
                           A  4374    ; Stack Frame Size: 46 (bytes)
                           A  4375    ;       Spill Code: -3 (instruction)
                           A  4376    
                           A  4377    
                           A  4378    .ENDFUNC "main",374,"_main"
                           A  4379    	SEGMENT STRSECT
0B2B2E                     A  4380    L__107:
0B2B2E 55736167 65206973   A  4381    	DB	"Usage is "
0B2B36 20 
0B2B37 00                  A  4382    	DB	0
0B2B38                     A  4383    L__108:
0B2B38 203C6669 6C656E61   A  4384    	DB	" <filename> [bitmap slot] [top-left x]
0B2B40 6D653E20 5B626974 
0B2B48 6D617020 736C6F74 
0B2B50 5D205B74 6F702D6C 
0B2B58 65667420 785D205B 
0B2B60 746F702D 6C656674 
0B2B68 20795D 
0B2B6B 0D0A00              A  4385    	DB	13,10,0
                           A  4386    	XREF _write16bit:ROM
                           A  4387    	XREF _vdp_bitmapDraw:ROM
                           A  4388    	XREF _vdp_bitmapSelect:ROM
                           A  4389    	XREF _mos_getfil:ROM
                           A  4390    	XREF _mos_flseek:ROM
                           A  4391    	XREF _mos_fread:ROM
                           A  4392    	XREF _mos_fgetc:ROM
                           A  4393    	XREF _mos_fclose:ROM
                           A  4394    	XREF _mos_fopen:ROM
                           A  4395    	XREF _getsysvar_scrheight:ROM
                           A  4396    	XREF _getsysvar_scrwidth:ROM
                           A  4397    	XREF _mos_puts:ROM
                           A  4398    	XREF _waitvblank:ROM
                           A  4399    	XREF _putch:ROM
                           A  4400    	XREF _memcpy:ROM
                           A  4401    	XREF _malloc:ROM
                           A  4402    	XREF _free:ROM
                           A  4403    	XREF ___print_sendstring:ROM
                           A  4404    	XREF ___print_xputch:ROM
                           A  4405    	XREF ___print_uputch:ROM
                           A  4406    	XREF __lcmps:ROM
                           A  4407    	XREF __lcmpu:ROM
                           A  4408    	XREF __ladd:ROM
                           A  4409    	XREF __lsub:ROM
                           A  4410    	XREF __idivs:ROM
                           A  4411    	XREF __ldivs:ROM
                           A  4412    	XREF __imuls:ROM
                           A  4413    	XREF __lmuls:ROM
                           A  4414    	XREF __lmulu:ROM
                           A  4415    	XREF __smulu:ROM
                           A  4416    	XREF __irems:ROM
                           A  4417    	XREF __lrems:ROM
                           A  4418    	XREF __stoiu:ROM
                           A  4419    	XREF __itol:ROM
                           A  4420    	XREF __ildix:ROM
                           A  4421    	XREF __istix:ROM
                           A  4422    	XREF __ladd_b:ROM
                           A  4423    	XDEF _main
                           A  4424    	XDEF _strtou24
                           A  4425    	XDEF _strtou8
                           A  4426    	XDEF _strtou16
                           A  4427    	XDEF _load_bmp_big
                           A  4428    	XDEF _reorder_and_insert
                           A  4429    	XDEF _reorder
                           A  4430    	XDEF _twiddle_buffer
                           A  4431    	XDEF _flip
                           A  4432    	XDEF _max
                           A  4433    	XDEF _min
                           A  4434    	XDEF _delay_secs
                           A  4435    	END


Errors: 0
Warnings: 0
Lines Assembled: 4436
