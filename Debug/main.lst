Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED07-Oct-23     21:48:34     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",8
                           A   144    .DEFINE "baudRate"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "dataBits"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "stopBits"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "parity"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "flowcontrol"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "eir"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 12
                           A   173    .ENDEF
                           A   174    .ENDREC "NONAME3"
                           A   175    .BEGREC "NONAME4",15
                           A   176    .DEFINE "fs"
                           A   177    .VALUE 0
                           A   178    .CLASS 8
                           A   179    .TYPE 46
                           A   180    .ENDEF
                           A   181    .DEFINE "id"
                           A   182    .VALUE 3
                           A   183    .CLASS 8
                           A   184    .TYPE 13
                           A   185    .ENDEF
                           A   186    .DEFINE "attr"
                           A   187    .VALUE 5
                           A   188    .CLASS 8
                           A   189    .TYPE 12
                           A   190    .ENDEF
                           A   191    .DEFINE "stat"
                           A   192    .VALUE 6
                           A   193    .CLASS 8
                           A   194    .TYPE 12
                           A   195    .ENDEF
                           A   196    .DEFINE "sclust"
                           A   197    .VALUE 7
                           A   198    .CLASS 8
                           A   199    .TYPE 15
                           A   200    .ENDEF
                           A   201    .DEFINE "objsize"
                           A   202    .VALUE 11
                           A   203    .CLASS 8
                           A   204    .TYPE 15
                           A   205    .ENDEF
                           A   206    .ENDREC "NONAME4"
                           A   207    .BEGREC "NONAME5",36
                           A   208    .DEFINE "obj"
                           A   209    .VALUE 0
                           A   210    .CLASS 8
                           A   211    .TAG "NONAME4"
                           A   212    .TYPE 8
                           A   213    .ENDEF
                           A   214    .DEFINE "flag"
                           A   215    .VALUE 15
                           A   216    .CLASS 8
                           A   217    .TYPE 12
                           A   218    .ENDEF
                           A   219    .DEFINE "err"
                           A   220    .VALUE 16
                           A   221    .CLASS 8
                           A   222    .TYPE 12
                           A   223    .ENDEF
                           A   224    .DEFINE "fptr"
                           A   225    .VALUE 17
                           A   226    .CLASS 8
                           A   227    .TYPE 15
                           A   228    .ENDEF
                           A   229    .DEFINE "clust"
                           A   230    .VALUE 21
                           A   231    .CLASS 8
                           A   232    .TYPE 15
                           A   233    .ENDEF
                           A   234    .DEFINE "sect"
                           A   235    .VALUE 25
                           A   236    .CLASS 8
                           A   237    .TYPE 15
                           A   238    .ENDEF
                           A   239    .DEFINE "dir_sect"
                           A   240    .VALUE 29
                           A   241    .CLASS 8
                           A   242    .TYPE 15
                           A   243    .ENDEF
                           A   244    .DEFINE "dir_ptr"
                           A   245    .VALUE 33
                           A   246    .CLASS 8
                           A   247    .TYPE 46
                           A   248    .ENDEF
                           A   249    .ENDREC "NONAME5"
                           A   250    ;    1	//Copyright HeathenUK 2023, others' cop
                           A   251    ;    2	
                           A   252    ;    3	#include <stdio.h>
                           A   253    ;    4	#include <stdlib.h>
                           A   254    ;    5	#include <ctype.h>
                           A   255    ;    6	#include <stdint.h>
                           A   256    ;    7	#include <string.h>
                           A   257    ;    8	#include <eZ80.h>
                           A   258    ;    9	#include <defines.h>
                           A   259    ;   10	#include "mos-interface.h"
                           A   260    ;   11	#include "vdp.h"
                           A   261    ;   12	
                           A   262    ;   13	typedef struct {
                           A   263    ;   14		
                           A   264    ;   15		uint16_t bmp_width;
                           A   265    ;   16		uint16_t bmp_height;
                           A   266    ;   17		uint8_t  bmp_bitdepth;
                           A   267    ;   18		
                           A   268    ;   19	} bmp_info;
                           A   269    .BEGREC "NONAME6",5
                           A   270    .DEFINE "bmp_width"
                           A   271    .VALUE 0
                           A   272    .CLASS 8
                           A   273    .TYPE 13
                           A   274    .ENDEF
                           A   275    .DEFINE "bmp_height"
                           A   276    .VALUE 2
                           A   277    .CLASS 8
                           A   278    .TYPE 13
                           A   279    .ENDEF
                           A   280    .DEFINE "bmp_bitdepth"
                           A   281    .VALUE 4
                           A   282    .CLASS 8
                           A   283    .TYPE 12
                           A   284    .ENDEF
                           A   285    .ENDREC "NONAME6"
                           A   286    ;   20	
                           A   287    ;   21	extern void write16bit(uint16_t w);
                           A   288    ;   22	extern void write24bit(uint24_t w);
                           A   289    ;   23	extern void write32bit(uint32_t w);
                           A   290    ;   24	
                           A   291    ;   25	void delay_secs(UINT16 ticks_end) { //1
0B00E5                     A   292    _delay_secs:
                           A   293    .DEFINE "_delay_secs"
                           A   294    
                           A   295    .VALUE _delay_secs
                           A   296    
                           A   297    .CLASS 2
                           A   298    
                           A   299    .TYPE 65
                           A   300    
                           A   301    .ENDEF
                           A   302    
                           A   303    .BEGFUNC "delay_secs",25,"_delay_secs"
                           A   304    
                           A   305    .LINE 25
                           A   306    
                           A   307    .DEFINE "ticks_end"
                           A   308    
                           A   309    .CLASS 65
                           A   310    
                           A   311    .VALUE 6
                           A   312    
                           A   313    .TYPE 13
                           A   314    
                           A   315    .ENDEF
                           A   316    
                           A   317    .DEFINE "ticks"
                           A   318    
                           A   319    .CLASS 65
                           A   320    
                           A   321    .VALUE -4
                           A   322    
                           A   323    .TYPE 15
                           A   324    
                           A   325    .ENDEF
                           A   326    
0B00E5 DDE5                A   327    	PUSH	IX
0B00E7 DD210000 00         A   328    	LD	IX,0
0B00EC DD39                A   329    	ADD	IX,SP
0B00EE C5                  A   330    	PUSH	BC
0B00EF 3B                  A   331    	DEC	SP
                           A   332    ;   26		
                           A   333    ;   27		UINT32 ticks = 0;
                           A   334    .LINE 27
                           A   335    
0B00F0 01000000            A   336    	LD	BC,0
0B00F4 AF                  A   337    	XOR	A,A
0B00F5 DD0FFC              A   338    	LD	(IX+%FFFFFFFC),BC
0B00F8 DD77FF              A   339    	LD	(IX+%FFFFFFFF),A
                           A   340    ;   28		ticks_end *= 60;
                           A   341    .LINE 28
                           A   342    
0B00FB 49213C00            A   343    	LD.LIS	HL,60
0B00FF DD0706              A   344    	LD	BC,(IX+%6)
0B0102 CD 11 27 0B         A   345    	CALL	__smulu
0B0106 DD7506              A   346    	LD	(IX+%6),L
0B0109 DD7407              A   347    	LD	(IX+%7),H
                           A   348    ;   29		while(true) {
0B010C                     A   349    L_3:
                           A   350    .LINE 29
                           A   351    
                           A   352    ;   30			
                           A   353    ;   31			waitvblank();
                           A   354    .LINE 31
                           A   355    
0B010C CD FB 1C 0B         A   356    	CALL	_waitvblank
                           A   357    ;   32			ticks++;
                           A   358    .LINE 32
                           A   359    
0B0110 DD27FC              A   360    	LD	HL,(IX+%FFFFFFFC)
0B0113 DD5EFF              A   361    	LD	E,(IX+%FFFFFFFF)
0B0116 3E01                A   362    	LD	A,%1
0B0118 CD B5 20 0B         A   363    	CALL	__ladd_b
0B011C DD2FFC              A   364    	LD	(IX+%FFFFFFFC),HL
0B011F DD73FF              A   365    	LD	(IX+%FFFFFFFF),E
                           A   366    ;   33			if(ticks >= ticks_end) break;
                           A   367    .LINE 33
                           A   368    
0B0122 DD0706              A   369    	LD	BC,(IX+%6)
0B0125 CD 23 24 0B         A   370    	CALL	__stoiu
0B0129 E5C1                A   371    	LD	BC,HL
0B012B AF                  A   372    	XOR	A,A
0B012C DD27FC              A   373    	LD	HL,(IX+%FFFFFFFC)
0B012F DD5EFF              A   374    	LD	E,(IX+%FFFFFFFF)
0B0132 CD 1E 26 0B         A   375    	CALL	__lcmpu
0B0136 38 D4               A   376    	JR	C,L_3
                           A   377    ;   34			
                           A   378    ;   35		}
                           A   379    ;   36		
                           A   380    ;   37	}
                           A   381    .LINE 37
                           A   382    
0B0138 DDF9                A   383    	LD	SP,IX
0B013A DDE1                A   384    	POP	IX
0B013C C9                  A   385    	RET	
                           A   386    
                           A   387    
                           A   388    ;**************************** _delay_secs *****
                           A   389    ;Name                         Addr/Register   S
                           A   390    ;_waitvblank                         IMPORT  --
                           A   391    ;ticks                                 IX-4    
                           A   392    ;ticks_end                             IX+6    
                           A   393    
                           A   394    
                           A   395    ; Stack Frame Size: 13 (bytes)
                           A   396    ;       Spill Code: 0 (instruction)
                           A   397    
                           A   398    
                           A   399    .ENDFUNC "delay_secs",37,"_delay_secs"
                           A   400    ;   38	
                           A   401    ;   39	int min(int a, int b) {
0B013D                     A   402    _min:
                           A   403    .DEFINE "_min"
                           A   404    
                           A   405    .VALUE _min
                           A   406    
                           A   407    .CLASS 2
                           A   408    
                           A   409    .TYPE 68
                           A   410    
                           A   411    .ENDEF
                           A   412    
                           A   413    .BEGFUNC "min",39,"_min"
                           A   414    
                           A   415    .LINE 39
                           A   416    
                           A   417    .DEFINE "a"
                           A   418    
                           A   419    .CLASS 65
                           A   420    
                           A   421    .VALUE 6
                           A   422    
                           A   423    .TYPE 4
                           A   424    
                           A   425    .ENDEF
                           A   426    
                           A   427    .DEFINE "b"
                           A   428    
                           A   429    .CLASS 65
                           A   430    
                           A   431    .VALUE 9
                           A   432    
                           A   433    .TYPE 4
                           A   434    
                           A   435    .ENDEF
                           A   436    
0B013D DDE5                A   437    	PUSH	IX
0B013F DD210000 00         A   438    	LD	IX,0
0B0144 DD39                A   439    	ADD	IX,SP
                           A   440    ;   40	    if (a > b)
                           A   441    .LINE 40
                           A   442    
0B0146 DD0706              A   443    	LD	BC,(IX+%6)
0B0149 DD2709              A   444    	LD	HL,(IX+%9)
0B014C B7                  A   445    	OR	A,A
0B014D ED42                A   446    	SBC	HL,BC
0B014F F2 59 01 0B         A   447    	JP	P,L__3
0B0153 EA 62 01 0B         A   448    	JP	PE,L_6
0B0157 18 04               A   449    	JR	L__4
0B0159                     A   450    L__3:
0B0159 E2 62 01 0B         A   451    	JP	PO,L_6
0B015D                     A   452    L__4:
                           A   453    ;   41	        return b;
                           A   454    .LINE 41
                           A   455    
0B015D DD2709              A   456    	LD	HL,(IX+%9)
0B0160 18 03               A   457    	JR	L_7
0B0162                     A   458    L_6:
                           A   459    ;   42	    return a;
                           A   460    .LINE 42
                           A   461    
0B0162 DD2706              A   462    	LD	HL,(IX+%6)
                           A   463    ;   43	}
0B0165                     A   464    L_7:
                           A   465    .LINE 43
                           A   466    
0B0165 DDF9                A   467    	LD	SP,IX
0B0167 DDE1                A   468    	POP	IX
0B0169 C9                  A   469    	RET	
                           A   470    
                           A   471    
                           A   472    ;**************************** _min ************
                           A   473    ;Name                         Addr/Register   S
                           A   474    ;b                                     IX+9    
                           A   475    ;a                                     IX+6    
                           A   476    
                           A   477    
                           A   478    ; Stack Frame Size: 12 (bytes)
                           A   479    ;       Spill Code: 0 (instruction)
                           A   480    
                           A   481    
                           A   482    .ENDFUNC "min",43,"_min"
                           A   483    ;   44	
                           A   484    ;   45	int max(int a, int b) {
0B016A                     A   485    _max:
                           A   486    .DEFINE "_max"
                           A   487    
                           A   488    .VALUE _max
                           A   489    
                           A   490    .CLASS 2
                           A   491    
                           A   492    .TYPE 68
                           A   493    
                           A   494    .ENDEF
                           A   495    
                           A   496    .BEGFUNC "max",45,"_max"
                           A   497    
                           A   498    .LINE 45
                           A   499    
                           A   500    .DEFINE "a"
                           A   501    
                           A   502    .CLASS 65
                           A   503    
                           A   504    .VALUE 6
                           A   505    
                           A   506    .TYPE 4
                           A   507    
                           A   508    .ENDEF
                           A   509    
                           A   510    .DEFINE "b"
                           A   511    
                           A   512    .CLASS 65
                           A   513    
                           A   514    .VALUE 9
                           A   515    
                           A   516    .TYPE 4
                           A   517    
                           A   518    .ENDEF
                           A   519    
0B016A DDE5                A   520    	PUSH	IX
0B016C DD210000 00         A   521    	LD	IX,0
0B0171 DD39                A   522    	ADD	IX,SP
                           A   523    ;   46	    if (a > b)
                           A   524    .LINE 46
                           A   525    
0B0173 DD0706              A   526    	LD	BC,(IX+%6)
0B0176 DD2709              A   527    	LD	HL,(IX+%9)
0B0179 B7                  A   528    	OR	A,A
0B017A ED42                A   529    	SBC	HL,BC
0B017C F2 86 01 0B         A   530    	JP	P,L__7
0B0180 EA 8F 01 0B         A   531    	JP	PE,L_9
0B0184 18 04               A   532    	JR	L__8
0B0186                     A   533    L__7:
0B0186 E2 8F 01 0B         A   534    	JP	PO,L_9
0B018A                     A   535    L__8:
                           A   536    ;   47	        return a;
                           A   537    .LINE 47
                           A   538    
0B018A DD2706              A   539    	LD	HL,(IX+%6)
0B018D 18 03               A   540    	JR	L_10
0B018F                     A   541    L_9:
                           A   542    ;   48	    return b;
                           A   543    .LINE 48
                           A   544    
0B018F DD2709              A   545    	LD	HL,(IX+%9)
                           A   546    ;   49	}
0B0192                     A   547    L_10:
                           A   548    .LINE 49
                           A   549    
0B0192 DDF9                A   550    	LD	SP,IX
0B0194 DDE1                A   551    	POP	IX
0B0196 C9                  A   552    	RET	
                           A   553    
                           A   554    
                           A   555    ;**************************** _max ************
                           A   556    ;Name                         Addr/Register   S
                           A   557    ;b                                     IX+9    
                           A   558    ;a                                     IX+6    
                           A   559    
                           A   560    
                           A   561    ; Stack Frame Size: 12 (bytes)
                           A   562    ;       Spill Code: 0 (instruction)
                           A   563    
                           A   564    
                           A   565    .ENDFUNC "max",49,"_max"
                           A   566    ;   50	
                           A   567    ;   51	void flip(uint32_t * framebuffer, int w
0B0197                     A   568    _flip:
                           A   569    .DEFINE "_flip"
                           A   570    
                           A   571    .VALUE _flip
                           A   572    
                           A   573    .CLASS 2
                           A   574    
                           A   575    .TYPE 65
                           A   576    
                           A   577    .ENDEF
                           A   578    
                           A   579    .BEGFUNC "flip",51,"_flip"
                           A   580    
                           A   581    .LINE 51
                           A   582    
                           A   583    .DEFINE "framebuffer"
                           A   584    
                           A   585    .CLASS 65
                           A   586    
                           A   587    .VALUE 6
                           A   588    
                           A   589    .TYPE 47
                           A   590    
                           A   591    .ENDEF
                           A   592    
                           A   593    .DEFINE "width"
                           A   594    
                           A   595    .CLASS 65
                           A   596    
                           A   597    .VALUE 9
                           A   598    
                           A   599    .TYPE 4
                           A   600    
                           A   601    .ENDEF
                           A   602    
                           A   603    .DEFINE "height"
                           A   604    
                           A   605    .CLASS 65
                           A   606    
                           A   607    .VALUE 12
                           A   608    
                           A   609    .TYPE 4
                           A   610    
                           A   611    .ENDEF
                           A   612    
                           A   613    .DEFINE "y"
                           A   614    
                           A   615    .CLASS 65
                           A   616    
                           A   617    .VALUE -2
                           A   618    
                           A   619    .TYPE 13
                           A   620    
                           A   621    .ENDEF
                           A   622    
                           A   623    .DEFINE "row_buffer"
                           A   624    
                           A   625    .CLASS 65
                           A   626    
                           A   627    .VALUE -5
                           A   628    
                           A   629    .TYPE 47
                           A   630    
                           A   631    .ENDEF
                           A   632    
                           A   633    .DEFINE "row_size"
                           A   634    
                           A   635    .CLASS 65
                           A   636    
                           A   637    .VALUE -8
                           A   638    
                           A   639    .TYPE 4
                           A   640    
                           A   641    .ENDEF
                           A   642    
                           A   643    .DEFINE "top_row"
                           A   644    
                           A   645    .CLASS 65
                           A   646    
                           A   647    .VALUE -11
                           A   648    
                           A   649    .TYPE 47
                           A   650    
                           A   651    .ENDEF
                           A   652    
                           A   653    .DEFINE "bottom_row"
                           A   654    
                           A   655    .CLASS 65
                           A   656    
                           A   657    .VALUE -14
                           A   658    
                           A   659    .TYPE 47
                           A   660    
                           A   661    .ENDEF
                           A   662    
0B0197 DDE5                A   663    	PUSH	IX
0B0199 DD210000 00         A   664    	LD	IX,0
0B019E DD39                A   665    	ADD	IX,SP
0B01A0 ED22F1              A   666    	LEA	HL,IX+%FFFFFFF1
0B01A3 F9                  A   667    	LD	SP,HL
                           A   668    ;   52	    uint16_t y;
                           A   669    ;   53	    uint32_t * row_buffer = (uint32_t *
                           A   670    .LINE 53
                           A   671    
0B01A4 DD2709              A   672    	LD	HL,(IX+%9)
0B01A7 29                  A   673    	ADD	HL,HL
0B01A8 29                  A   674    	ADD	HL,HL
0B01A9 E5                  A   675    	PUSH	HL
0B01AA DD77F1              A   676    	LD	(IX+%FFFFFFF1),A
0B01AD CD CF 21 0B         A   677    	CALL	_malloc
0B01B1 DD7EF1              A   678    	LD	A,(IX+%FFFFFFF1)
0B01B4 C1                  A   679    	POP	BC
0B01B5 DD2FFB              A   680    	LD	(IX+%FFFFFFFB),HL
                           A   681    ;   54	    int row_size = width * sizeof(uint3
                           A   682    .LINE 54
                           A   683    
0B01B8 DD2709              A   684    	LD	HL,(IX+%9)
0B01BB 29                  A   685    	ADD	HL,HL
0B01BC 29                  A   686    	ADD	HL,HL
0B01BD DD2FF8              A   687    	LD	(IX+%FFFFFFF8),HL
                           A   688    ;   55	
                           A   689    ;   56	    for (y = 0; y < height / 2; y++) {
                           A   690    .LINE 56
                           A   691    
0B01C0 DD36FE00            A   692    	LD	(IX+%FFFFFFFE),%0
0B01C4 DD36FF00            A   693    	LD	(IX+%FFFFFFFF),%0
0B01C8 C3 58 02 0B         A   694    	JR	L_14
0B01CC                     A   695    L_12:
                           A   696    ;   57	        uint32_t * top_row = framebuffe
                           A   697    .LINE 57
                           A   698    
0B01CC DD07FE              A   699    	LD	BC,(IX+%FFFFFFFE)
0B01CF CD 23 24 0B         A   700    	CALL	__stoiu
0B01D3 DD0709              A   701    	LD	BC,(IX+%9)
0B01D6 CD 81 25 0B         A   702    	CALL	__imuls
0B01DA 29                  A   703    	ADD	HL,HL
0B01DB 29                  A   704    	ADD	HL,HL
0B01DC DD0706              A   705    	LD	BC,(IX+%6)
0B01DF 09                  A   706    	ADD	HL,BC
0B01E0 DD2FF5              A   707    	LD	(IX+%FFFFFFF5),HL
                           A   708    ;   58	        uint32_t * bottom_row = framebu
                           A   709    .LINE 58
                           A   710    
0B01E3 DD07FE              A   711    	LD	BC,(IX+%FFFFFFFE)
0B01E6 CD 23 24 0B         A   712    	CALL	__stoiu
0B01EA E5C1                A   713    	LD	BC,HL
0B01EC DD270C              A   714    	LD	HL,(IX+%C)
0B01EF B7                  A   715    	OR	A,A
0B01F0 ED42                A   716    	SBC	HL,BC
0B01F2 2B                  A   717    	DEC	HL
0B01F3 DD0709              A   718    	LD	BC,(IX+%9)
0B01F6 CD 81 25 0B         A   719    	CALL	__imuls
0B01FA 29                  A   720    	ADD	HL,HL
0B01FB 29                  A   721    	ADD	HL,HL
0B01FC DD0706              A   722    	LD	BC,(IX+%6)
0B01FF 09                  A   723    	ADD	HL,BC
0B0200 DD2FF2              A   724    	LD	(IX+%FFFFFFF2),HL
                           A   725    ;   59	
                           A   726    ;   60	        memcpy(row_buffer, top_row, row
                           A   727    .LINE 60
                           A   728    
0B0203 DD07F8              A   729    	LD	BC,(IX+%FFFFFFF8)
0B0206 C5                  A   730    	PUSH	BC
0B0207 DD07F5              A   731    	LD	BC,(IX+%FFFFFFF5)
0B020A C5                  A   732    	PUSH	BC
0B020B DD07FB              A   733    	LD	BC,(IX+%FFFFFFFB)
0B020E C5                  A   734    	PUSH	BC
0B020F DD77F1              A   735    	LD	(IX+%FFFFFFF1),A
0B0212 CD 21 25 0B         A   736    	CALL	_memcpy
0B0216 DD7EF1              A   737    	LD	A,(IX+%FFFFFFF1)
0B0219 C1                  A   738    	POP	BC
0B021A C1                  A   739    	POP	BC
0B021B C1                  A   740    	POP	BC
                           A   741    ;   61	        memcpy(top_row, bottom_row, row
                           A   742    .LINE 61
                           A   743    
0B021C DD07F8              A   744    	LD	BC,(IX+%FFFFFFF8)
0B021F C5                  A   745    	PUSH	BC
0B0220 DD07F2              A   746    	LD	BC,(IX+%FFFFFFF2)
0B0223 C5                  A   747    	PUSH	BC
0B0224 DD07F5              A   748    	LD	BC,(IX+%FFFFFFF5)
0B0227 C5                  A   749    	PUSH	BC
0B0228 DD77F1              A   750    	LD	(IX+%FFFFFFF1),A
0B022B CD 21 25 0B         A   751    	CALL	_memcpy
0B022F DD7EF1              A   752    	LD	A,(IX+%FFFFFFF1)
0B0232 C1                  A   753    	POP	BC
0B0233 C1                  A   754    	POP	BC
0B0234 C1                  A   755    	POP	BC
                           A   756    ;   62	        memcpy(bottom_row, row_buffer, 
                           A   757    .LINE 62
                           A   758    
0B0235 DD07F8              A   759    	LD	BC,(IX+%FFFFFFF8)
0B0238 C5                  A   760    	PUSH	BC
0B0239 DD07FB              A   761    	LD	BC,(IX+%FFFFFFFB)
0B023C C5                  A   762    	PUSH	BC
0B023D DD07F2              A   763    	LD	BC,(IX+%FFFFFFF2)
0B0240 C5                  A   764    	PUSH	BC
0B0241 DD77F1              A   765    	LD	(IX+%FFFFFFF1),A
0B0244 CD 21 25 0B         A   766    	CALL	_memcpy
0B0248 DD7EF1              A   767    	LD	A,(IX+%FFFFFFF1)
0B024B C1                  A   768    	POP	BC
0B024C C1                  A   769    	POP	BC
0B024D C1                  A   770    	POP	BC
0B024E DD27FE              A   771    	LD	HL,(IX+%FFFFFFFE)
0B0251 23                  A   772    	INC	HL
0B0252 DD75FE              A   773    	LD	(IX+%FFFFFFFE),L
0B0255 DD74FF              A   774    	LD	(IX+%FFFFFFFF),H
                           A   775    ;   63	    }
0B0258                     A   776    L_14:
                           A   777    .LINE 63
                           A   778    
0B0258 01020000            A   779    	LD	BC,2
0B025C DD270C              A   780    	LD	HL,(IX+%C)
0B025F CD BD 25 0B         A   781    	CALL	__idivs
0B0263 E5D1                A   782    	LD	DE,HL
0B0265 DD07FE              A   783    	LD	BC,(IX+%FFFFFFFE)
0B0268 CD 23 24 0B         A   784    	CALL	__stoiu
0B026C B7                  A   785    	OR	A,A
0B026D ED52                A   786    	SBC	HL,DE
0B026F FA 79 02 0B         A   787    	JP	M,L__11
0B0273 EA CC 01 0B         A   788    	JP	PE,L_12
0B0277 18 04               A   789    	JR	L__12
0B0279                     A   790    L__11:
0B0279 E2 CC 01 0B         A   791    	JP	PO,L_12
0B027D                     A   792    L__12:
                           A   793    ;   64	
                           A   794    ;   65	    free(row_buffer);
                           A   795    .LINE 65
                           A   796    
0B027D DD07FB              A   797    	LD	BC,(IX+%FFFFFFFB)
0B0280 C5                  A   798    	PUSH	BC
0B0281 CD CA 20 0B         A   799    	CALL	_free
0B0285 C1                  A   800    	POP	BC
                           A   801    ;   66	}
                           A   802    .LINE 66
                           A   803    
0B0286 DDF9                A   804    	LD	SP,IX
0B0288 DDE1                A   805    	POP	IX
0B028A C9                  A   806    	RET	
                           A   807    
                           A   808    
                           A   809    ;**************************** _flip ***********
                           A   810    ;Name                         Addr/Register   S
                           A   811    ;_free                               IMPORT  --
                           A   812    ;_memcpy                             IMPORT  --
                           A   813    ;_malloc                             IMPORT  --
                           A   814    ;bottom_row                           IX-14    
                           A   815    ;top_row                              IX-11    
                           A   816    ;row_size                              IX-8    
                           A   817    ;row_buffer                            IX-5    
                           A   818    ;y                                     IX-2    
                           A   819    ;height                               IX+12    
                           A   820    ;width                                 IX+9    
                           A   821    ;framebuffer                           IX+6    
                           A   822    
                           A   823    
                           A   824    ; Stack Frame Size: 30 (bytes)
                           A   825    ;       Spill Code: 0 (instruction)
                           A   826    
                           A   827    
                           A   828    .ENDFUNC "flip",66,"_flip"
                           A   829    ;   67	
                           A   830    ;   68	void twiddle_buffer(char* buffer, int w
0B028B                     A   831    _twiddle_buffer:
                           A   832    .DEFINE "_twiddle_buffer"
                           A   833    
                           A   834    .VALUE _twiddle_buffer
                           A   835    
                           A   836    .CLASS 2
                           A   837    
                           A   838    .TYPE 65
                           A   839    
                           A   840    .ENDEF
                           A   841    
                           A   842    .BEGFUNC "twiddle_buffer",68,"_twiddle_buffer"
                           A   843    
                           A   844    .LINE 68
                           A   845    
                           A   846    .DEFINE "buffer"
                           A   847    
                           A   848    .CLASS 65
                           A   849    
                           A   850    .VALUE 6
                           A   851    
                           A   852    .TYPE 34
                           A   853    
                           A   854    .ENDEF
                           A   855    
                           A   856    .DEFINE "width"
                           A   857    
                           A   858    .CLASS 65
                           A   859    
                           A   860    .VALUE 9
                           A   861    
                           A   862    .TYPE 4
                           A   863    
                           A   864    .ENDEF
                           A   865    
                           A   866    .DEFINE "height"
                           A   867    
                           A   868    .CLASS 65
                           A   869    
                           A   870    .VALUE 12
                           A   871    
                           A   872    .TYPE 4
                           A   873    
                           A   874    .ENDEF
                           A   875    
                           A   876    .DEFINE "col"
                           A   877    
                           A   878    .CLASS 65
                           A   879    
                           A   880    .VALUE -3
                           A   881    
                           A   882    .TYPE 4
                           A   883    
                           A   884    .ENDEF
                           A   885    
                           A   886    .DEFINE "tempRow"
                           A   887    
                           A   888    .CLASS 65
                           A   889    
                           A   890    .VALUE -6
                           A   891    
                           A   892    .TYPE 34
                           A   893    
                           A   894    .ENDEF
                           A   895    
                           A   896    .DEFINE "oppositeRowPtr"
                           A   897    
                           A   898    .CLASS 65
                           A   899    
                           A   900    .VALUE -9
                           A   901    
                           A   902    .TYPE 34
                           A   903    
                           A   904    .ENDEF
                           A   905    
                           A   906    .DEFINE "rowPtr"
                           A   907    
                           A   908    .CLASS 65
                           A   909    
                           A   910    .VALUE -12
                           A   911    
                           A   912    .TYPE 34
                           A   913    
                           A   914    .ENDEF
                           A   915    
                           A   916    .DEFINE "row"
                           A   917    
                           A   918    .CLASS 65
                           A   919    
                           A   920    .VALUE -15
                           A   921    
                           A   922    .TYPE 4
                           A   923    
                           A   924    .ENDEF
                           A   925    
0B028B DDE5                A   926    	PUSH	IX
0B028D DD210000 00         A   927    	LD	IX,0
0B0292 DD39                A   928    	ADD	IX,SP
0B0294 ED22E4              A   929    	LEA	HL,IX+%FFFFFFE4
0B0297 F9                  A   930    	LD	SP,HL
                           A   931    ;   69	    int row, col;
                           A   932    ;   70	    char* rowPtr;
                           A   933    ;   71		char* oppositeRowPtr;
                           A   934    ;   72		char* tempRow = (char*)malloc(width
                           A   935    .LINE 72
                           A   936    
0B0298 DD2709              A   937    	LD	HL,(IX+%9)
0B029B 29                  A   938    	ADD	HL,HL
0B029C 29                  A   939    	ADD	HL,HL
0B029D E5                  A   940    	PUSH	HL
0B029E DD77E4              A   941    	LD	(IX+%FFFFFFE4),A
0B02A1 CD CF 21 0B         A   942    	CALL	_malloc
0B02A5 DD7EE4              A   943    	LD	A,(IX+%FFFFFFE4)
0B02A8 C1                  A   944    	POP	BC
0B02A9 DD2FFA              A   945    	LD	(IX+%FFFFFFFA),HL
                           A   946    ;   73	
                           A   947    ;   74	    //Iterate over each row
                           A   948    ;   75	    for (row = 0; row < height / 2; row
                           A   949    .LINE 75
                           A   950    
0B02AC 01000000            A   951    	LD	BC,0
0B02B0 DD0FF1              A   952    	LD	(IX+%FFFFFFF1),BC
0B02B3 C3 6B 04 0B         A   953    	JR	L_24
0B02B7                     A   954    L_22:
                           A   955    ;   76	        rowPtr = buffer + row * width *
                           A   956    .LINE 76
                           A   957    
0B02B7 DD27F1              A   958    	LD	HL,(IX+%FFFFFFF1)
0B02BA DD0709              A   959    	LD	BC,(IX+%9)
0B02BD CD 81 25 0B         A   960    	CALL	__imuls
0B02C1 29                  A   961    	ADD	HL,HL
0B02C2 29                  A   962    	ADD	HL,HL
0B02C3 DD0706              A   963    	LD	BC,(IX+%6)
0B02C6 09                  A   964    	ADD	HL,BC
0B02C7 DD2FF4              A   965    	LD	(IX+%FFFFFFF4),HL
                           A   966    ;   77	        oppositeRowPtr = buffer + (heig
                           A   967    .LINE 77
                           A   968    
0B02CA DD07F1              A   969    	LD	BC,(IX+%FFFFFFF1)
0B02CD DD270C              A   970    	LD	HL,(IX+%C)
0B02D0 B7                  A   971    	OR	A,A
0B02D1 ED42                A   972    	SBC	HL,BC
0B02D3 2B                  A   973    	DEC	HL
0B02D4 DD0709              A   974    	LD	BC,(IX+%9)
0B02D7 CD 81 25 0B         A   975    	CALL	__imuls
0B02DB 29                  A   976    	ADD	HL,HL
0B02DC 29                  A   977    	ADD	HL,HL
0B02DD DD0706              A   978    	LD	BC,(IX+%6)
0B02E0 09                  A   979    	ADD	HL,BC
0B02E1 DD2FF7              A   980    	LD	(IX+%FFFFFFF7),HL
                           A   981    ;   78	
                           A   982    ;   79	        //Swap bytes within each row (B
                           A   983    ;   80	        for (col = 0; col < width; col+
                           A   984    .LINE 80
                           A   985    
0B02E4 01000000            A   986    	LD	BC,0
0B02E8 DD0FFD              A   987    	LD	(IX+%FFFFFFFD),BC
0B02EB C3 4D 04 0B         A   988    	JR	L_21
0B02EF                     A   989    L_19:
                           A   990    ;   81	            tempRow[col * 4] = opposite
                           A   991    .LINE 81
                           A   992    
0B02EF DD27FD              A   993    	LD	HL,(IX+%FFFFFFFD)
0B02F2 29                  A   994    	ADD	HL,HL
0B02F3 29                  A   995    	ADD	HL,HL
0B02F4 E5C1                A   996    	LD	BC,HL
0B02F6 DD27FD              A   997    	LD	HL,(IX+%FFFFFFFD)
0B02F9 29                  A   998    	ADD	HL,HL
0B02FA 29                  A   999    	ADD	HL,HL
0B02FB DD17F7              A  1000    	LD	DE,(IX+%FFFFFFF7)
0B02FE 19                  A  1001    	ADD	HL,DE
0B02FF E5FDE1              A  1002    	LD	IY,HL
0B0302 C5D1                A  1003    	LD	DE,BC
0B0304 DD27FA              A  1004    	LD	HL,(IX+%FFFFFFFA)
0B0307 19                  A  1005    	ADD	HL,DE
0B0308 FD7E02              A  1006    	LD	A,(IY+%2)
0B030B 77                  A  1007    	LD	(HL),A
                           A  1008    ;   82	            tempRow[col * 4 + 1] = oppo
                           A  1009    .LINE 82
                           A  1010    
0B030C DD27FD              A  1011    	LD	HL,(IX+%FFFFFFFD)
0B030F 29                  A  1012    	ADD	HL,HL
0B0310 29                  A  1013    	ADD	HL,HL
0B0311 E5D1                A  1014    	LD	DE,HL
0B0313 DD27F7              A  1015    	LD	HL,(IX+%FFFFFFF7)
0B0316 09                  A  1016    	ADD	HL,BC
0B0317 E5FDE1              A  1017    	LD	IY,HL
0B031A D5C1                A  1018    	LD	BC,DE
0B031C DD27FA              A  1019    	LD	HL,(IX+%FFFFFFFA)
0B031F 09                  A  1020    	ADD	HL,BC
0B0320 23                  A  1021    	INC	HL
0B0321 FD7E01              A  1022    	LD	A,(IY+%1)
0B0324 77                  A  1023    	LD	(HL),A
                           A  1024    ;   83	            tempRow[col * 4 + 2] = oppo
                           A  1025    .LINE 83
                           A  1026    
0B0325 DD27FD              A  1027    	LD	HL,(IX+%FFFFFFFD)
0B0328 29                  A  1028    	ADD	HL,HL
0B0329 29                  A  1029    	ADD	HL,HL
0B032A E5C1                A  1030    	LD	BC,HL
0B032C DD27F7              A  1031    	LD	HL,(IX+%FFFFFFF7)
0B032F 19                  A  1032    	ADD	HL,DE
0B0330 E5FDE1              A  1033    	LD	IY,HL
0B0333 C5D1                A  1034    	LD	DE,BC
0B0335 DD27FA              A  1035    	LD	HL,(IX+%FFFFFFFA)
0B0338 19                  A  1036    	ADD	HL,DE
0B0339 23                  A  1037    	INC	HL
0B033A 23                  A  1038    	INC	HL
0B033B FD7E00              A  1039    	LD	A,(IY)
0B033E 77                  A  1040    	LD	(HL),A
                           A  1041    ;   84	            tempRow[col * 4 + 3] = oppo
                           A  1042    .LINE 84
                           A  1043    
0B033F DD27FD              A  1044    	LD	HL,(IX+%FFFFFFFD)
0B0342 29                  A  1045    	ADD	HL,HL
0B0343 29                  A  1046    	ADD	HL,HL
0B0344 E5D1                A  1047    	LD	DE,HL
0B0346 DD27F7              A  1048    	LD	HL,(IX+%FFFFFFF7)
0B0349 09                  A  1049    	ADD	HL,BC
0B034A E5FDE1              A  1050    	LD	IY,HL
0B034D DD2FEE              A  1051    	LD	(IX+%FFFFFFEE),HL	; spill
0B0350 ED2303              A  1052    	LEA	HL,IY+%3
0B0353 DD2FEB              A  1053    	LD	(IX+%FFFFFFEB),HL	; spill
0B0356 D5C1                A  1054    	LD	BC,DE
0B0358 DD27FA              A  1055    	LD	HL,(IX+%FFFFFFFA)
0B035B 09                  A  1056    	ADD	HL,BC
0B035C E5FDE1              A  1057    	LD	IY,HL
0B035F DD27EB              A  1058    	LD	HL,(IX+%FFFFFFEB)	; unspill
0B0362 7E                  A  1059    	LD	A,(HL)
0B0363 FD7703              A  1060    	LD	(IY+%3),A
                           A  1061    ;   85	
                           A  1062    ;   86	            oppositeRowPtr[col * 4] = r
                           A  1063    .LINE 86
                           A  1064    
0B0366 DD27FD              A  1065    	LD	HL,(IX+%FFFFFFFD)
0B0369 29                  A  1066    	ADD	HL,HL
0B036A 29                  A  1067    	ADD	HL,HL
0B036B E5C1                A  1068    	LD	BC,HL
0B036D DD27F4              A  1069    	LD	HL,(IX+%FFFFFFF4)
0B0370 19                  A  1070    	ADD	HL,DE
0B0371 E5FDE1              A  1071    	LD	IY,HL
0B0374 C5D1                A  1072    	LD	DE,BC
0B0376 DD27F7              A  1073    	LD	HL,(IX+%FFFFFFF7)
0B0379 19                  A  1074    	ADD	HL,DE
0B037A FD7E02              A  1075    	LD	A,(IY+%2)
0B037D 77                  A  1076    	LD	(HL),A
                           A  1077    ;   87	            oppositeRowPtr[col * 4 + 1]
                           A  1078    .LINE 87
                           A  1079    
0B037E DD27FD              A  1080    	LD	HL,(IX+%FFFFFFFD)
0B0381 29                  A  1081    	ADD	HL,HL
0B0382 29                  A  1082    	ADD	HL,HL
0B0383 E5D1                A  1083    	LD	DE,HL
0B0385 DD27F4              A  1084    	LD	HL,(IX+%FFFFFFF4)
0B0388 09                  A  1085    	ADD	HL,BC
0B0389 E5FDE1              A  1086    	LD	IY,HL
0B038C D5C1                A  1087    	LD	BC,DE
0B038E DD27F7              A  1088    	LD	HL,(IX+%FFFFFFF7)
0B0391 09                  A  1089    	ADD	HL,BC
0B0392 23                  A  1090    	INC	HL
0B0393 FD7E01              A  1091    	LD	A,(IY+%1)
0B0396 77                  A  1092    	LD	(HL),A
                           A  1093    ;   88	            oppositeRowPtr[col * 4 + 2]
                           A  1094    .LINE 88
                           A  1095    
0B0397 DD27FD              A  1096    	LD	HL,(IX+%FFFFFFFD)
0B039A 29                  A  1097    	ADD	HL,HL
0B039B 29                  A  1098    	ADD	HL,HL
0B039C E5C1                A  1099    	LD	BC,HL
0B039E DD27F4              A  1100    	LD	HL,(IX+%FFFFFFF4)
0B03A1 19                  A  1101    	ADD	HL,DE
0B03A2 E5FDE1              A  1102    	LD	IY,HL
0B03A5 C5D1                A  1103    	LD	DE,BC
0B03A7 DD27F7              A  1104    	LD	HL,(IX+%FFFFFFF7)
0B03AA 19                  A  1105    	ADD	HL,DE
0B03AB 23                  A  1106    	INC	HL
0B03AC 23                  A  1107    	INC	HL
0B03AD FD7E00              A  1108    	LD	A,(IY)
0B03B0 77                  A  1109    	LD	(HL),A
                           A  1110    ;   89	            oppositeRowPtr[col * 4 + 3]
                           A  1111    .LINE 89
                           A  1112    
0B03B1 DD27FD              A  1113    	LD	HL,(IX+%FFFFFFFD)
0B03B4 29                  A  1114    	ADD	HL,HL
0B03B5 29                  A  1115    	ADD	HL,HL
0B03B6 E5D1                A  1116    	LD	DE,HL
0B03B8 DD27F4              A  1117    	LD	HL,(IX+%FFFFFFF4)
0B03BB 09                  A  1118    	ADD	HL,BC
0B03BC E5FDE1              A  1119    	LD	IY,HL
0B03BF DD2FEE              A  1120    	LD	(IX+%FFFFFFEE),HL	; spill
0B03C2 ED2303              A  1121    	LEA	HL,IY+%3
0B03C5 DD2FE8              A  1122    	LD	(IX+%FFFFFFE8),HL	; spill
0B03C8 D5C1                A  1123    	LD	BC,DE
0B03CA DD27F7              A  1124    	LD	HL,(IX+%FFFFFFF7)
0B03CD 09                  A  1125    	ADD	HL,BC
0B03CE E5FDE1              A  1126    	LD	IY,HL
0B03D1 DD27E8              A  1127    	LD	HL,(IX+%FFFFFFE8)	; unspill
0B03D4 7E                  A  1128    	LD	A,(HL)
0B03D5 FD7703              A  1129    	LD	(IY+%3),A
                           A  1130    ;   90	
                           A  1131    ;   91	            rowPtr[col * 4] = tempRow[c
                           A  1132    .LINE 91
                           A  1133    
0B03D8 DD27FD              A  1134    	LD	HL,(IX+%FFFFFFFD)
0B03DB 29                  A  1135    	ADD	HL,HL
0B03DC 29                  A  1136    	ADD	HL,HL
0B03DD E5C1                A  1137    	LD	BC,HL
0B03DF DD27FA              A  1138    	LD	HL,(IX+%FFFFFFFA)
0B03E2 19                  A  1139    	ADD	HL,DE
0B03E3 E5FDE1              A  1140    	LD	IY,HL
0B03E6 C5D1                A  1141    	LD	DE,BC
0B03E8 DD27F4              A  1142    	LD	HL,(IX+%FFFFFFF4)
0B03EB 19                  A  1143    	ADD	HL,DE
0B03EC FD7E00              A  1144    	LD	A,(IY)
0B03EF 77                  A  1145    	LD	(HL),A
                           A  1146    ;   92	            rowPtr[col * 4 + 1] = tempR
                           A  1147    .LINE 92
                           A  1148    
0B03F0 DD27FD              A  1149    	LD	HL,(IX+%FFFFFFFD)
0B03F3 29                  A  1150    	ADD	HL,HL
0B03F4 29                  A  1151    	ADD	HL,HL
0B03F5 E5D1                A  1152    	LD	DE,HL
0B03F7 DD27FA              A  1153    	LD	HL,(IX+%FFFFFFFA)
0B03FA 09                  A  1154    	ADD	HL,BC
0B03FB E5FDE1              A  1155    	LD	IY,HL
0B03FE D5C1                A  1156    	LD	BC,DE
0B0400 DD27F4              A  1157    	LD	HL,(IX+%FFFFFFF4)
0B0403 09                  A  1158    	ADD	HL,BC
0B0404 23                  A  1159    	INC	HL
0B0405 FD7E01              A  1160    	LD	A,(IY+%1)
0B0408 77                  A  1161    	LD	(HL),A
                           A  1162    ;   93	            rowPtr[col * 4 + 2] = tempR
                           A  1163    .LINE 93
                           A  1164    
0B0409 DD27FD              A  1165    	LD	HL,(IX+%FFFFFFFD)
0B040C 29                  A  1166    	ADD	HL,HL
0B040D 29                  A  1167    	ADD	HL,HL
0B040E E5C1                A  1168    	LD	BC,HL
0B0410 DD27FA              A  1169    	LD	HL,(IX+%FFFFFFFA)
0B0413 19                  A  1170    	ADD	HL,DE
0B0414 E5FDE1              A  1171    	LD	IY,HL
0B0417 C5D1                A  1172    	LD	DE,BC
0B0419 DD27F4              A  1173    	LD	HL,(IX+%FFFFFFF4)
0B041C 19                  A  1174    	ADD	HL,DE
0B041D 23                  A  1175    	INC	HL
0B041E 23                  A  1176    	INC	HL
0B041F FD7E02              A  1177    	LD	A,(IY+%2)
0B0422 77                  A  1178    	LD	(HL),A
                           A  1179    ;   94	            rowPtr[col * 4 + 3] = tempR
                           A  1180    .LINE 94
                           A  1181    
0B0423 DD27FA              A  1182    	LD	HL,(IX+%FFFFFFFA)
0B0426 09                  A  1183    	ADD	HL,BC
0B0427 E5FDE1              A  1184    	LD	IY,HL
0B042A DD2FEE              A  1185    	LD	(IX+%FFFFFFEE),HL	; spill
0B042D ED2303              A  1186    	LEA	HL,IY+%3
0B0430 DD2FE5              A  1187    	LD	(IX+%FFFFFFE5),HL	; spill
0B0433 DD27FD              A  1188    	LD	HL,(IX+%FFFFFFFD)
0B0436 29                  A  1189    	ADD	HL,HL
0B0437 29                  A  1190    	ADD	HL,HL
0B0438 DD07F4              A  1191    	LD	BC,(IX+%FFFFFFF4)
0B043B 09                  A  1192    	ADD	HL,BC
0B043C E5FDE1              A  1193    	LD	IY,HL
0B043F DD27E5              A  1194    	LD	HL,(IX+%FFFFFFE5)	; unspill
0B0442 7E                  A  1195    	LD	A,(HL)
0B0443 FD7703              A  1196    	LD	(IY+%3),A
0B0446 DD07FD              A  1197    	LD	BC,(IX+%FFFFFFFD)
0B0449 03                  A  1198    	INC	BC
0B044A DD0FFD              A  1199    	LD	(IX+%FFFFFFFD),BC
                           A  1200    ;   95	        }
0B044D                     A  1201    L_21:
                           A  1202    .LINE 95
                           A  1203    
0B044D DD0709              A  1204    	LD	BC,(IX+%9)
0B0450 DD27FD              A  1205    	LD	HL,(IX+%FFFFFFFD)
0B0453 B7                  A  1206    	OR	A,A
0B0454 ED42                A  1207    	SBC	HL,BC
0B0456 FA 60 04 0B         A  1208    	JP	M,L__16
0B045A EA EF 02 0B         A  1209    	JP	PE,L_19
0B045E 18 04               A  1210    	JR	L__17
0B0460                     A  1211    L__16:
0B0460 E2 EF 02 0B         A  1212    	JP	PO,L_19
0B0464                     A  1213    L__17:
0B0464 DD07F1              A  1214    	LD	BC,(IX+%FFFFFFF1)
0B0467 03                  A  1215    	INC	BC
0B0468 DD0FF1              A  1216    	LD	(IX+%FFFFFFF1),BC
                           A  1217    ;   96	    }
0B046B                     A  1218    L_24:
                           A  1219    .LINE 96
                           A  1220    
0B046B 01020000            A  1221    	LD	BC,2
0B046F DD270C              A  1222    	LD	HL,(IX+%C)
0B0472 CD BD 25 0B         A  1223    	CALL	__idivs
0B0476 E5C1                A  1224    	LD	BC,HL
0B0478 DD27F1              A  1225    	LD	HL,(IX+%FFFFFFF1)
0B047B B7                  A  1226    	OR	A,A
0B047C ED42                A  1227    	SBC	HL,BC
0B047E FA 88 04 0B         A  1228    	JP	M,L__18
0B0482 EA B7 02 0B         A  1229    	JP	PE,L_22
0B0486 18 04               A  1230    	JR	L__19
0B0488                     A  1231    L__18:
0B0488 E2 B7 02 0B         A  1232    	JP	PO,L_22
0B048C                     A  1233    L__19:
                           A  1234    ;   97		free(tempRow);
                           A  1235    .LINE 97
                           A  1236    
0B048C DD07FA              A  1237    	LD	BC,(IX+%FFFFFFFA)
0B048F C5                  A  1238    	PUSH	BC
0B0490 CD CA 20 0B         A  1239    	CALL	_free
0B0494 C1                  A  1240    	POP	BC
                           A  1241    ;   98	}
                           A  1242    .LINE 98
                           A  1243    
0B0495 DDF9                A  1244    	LD	SP,IX
0B0497 DDE1                A  1245    	POP	IX
0B0499 C9                  A  1246    	RET	
                           A  1247    
                           A  1248    
                           A  1249    ;**************************** _twiddle_buffer *
                           A  1250    ;Name                         Addr/Register   S
                           A  1251    ;_free                               IMPORT  --
                           A  1252    ;_malloc                             IMPORT  --
                           A  1253    ;row                                  IX-15    
                           A  1254    ;rowPtr                               IX-12    
                           A  1255    ;oppositeRowPtr                        IX-9    
                           A  1256    ;tempRow                               IX-6    
                           A  1257    ;col                                   IX-3    
                           A  1258    ;height                               IX+12    
                           A  1259    ;width                                 IX+9    
                           A  1260    ;buffer                                IX+6    
                           A  1261    
                           A  1262    
                           A  1263    ; Stack Frame Size: 43 (bytes)
                           A  1264    ;       Spill Code: -3 (instruction)
                           A  1265    
                           A  1266    
                           A  1267    .ENDFUNC "twiddle_buffer",98,"_twiddle_buffer"
                           A  1268    ;   99	
                           A  1269    ;  100	void reorder(char *arr, uint16_t length
0B049A                     A  1270    _reorder:
                           A  1271    .DEFINE "_reorder"
                           A  1272    
                           A  1273    .VALUE _reorder
                           A  1274    
                           A  1275    .CLASS 2
                           A  1276    
                           A  1277    .TYPE 65
                           A  1278    
                           A  1279    .ENDEF
                           A  1280    
                           A  1281    .BEGFUNC "reorder",100,"_reorder"
                           A  1282    
                           A  1283    .LINE 100
                           A  1284    
                           A  1285    .DEFINE "arr"
                           A  1286    
                           A  1287    .CLASS 65
                           A  1288    
                           A  1289    .VALUE 6
                           A  1290    
                           A  1291    .TYPE 34
                           A  1292    
                           A  1293    .ENDEF
                           A  1294    
                           A  1295    .DEFINE "length"
                           A  1296    
                           A  1297    .CLASS 65
                           A  1298    
                           A  1299    .VALUE 9
                           A  1300    
                           A  1301    .TYPE 13
                           A  1302    
                           A  1303    .ENDEF
                           A  1304    
                           A  1305    .DEFINE "i"
                           A  1306    
                           A  1307    .CLASS 65
                           A  1308    
                           A  1309    .VALUE -2
                           A  1310    
                           A  1311    .TYPE 13
                           A  1312    
                           A  1313    .ENDEF
                           A  1314    
                           A  1315    .DEFINE "temp"
                           A  1316    
                           A  1317    .CLASS 65
                           A  1318    
                           A  1319    .VALUE -3
                           A  1320    
                           A  1321    .TYPE 12
                           A  1322    
                           A  1323    .ENDEF
                           A  1324    
0B049A DDE5                A  1325    	PUSH	IX
0B049C DD210000 00         A  1326    	LD	IX,0
0B04A1 DD39                A  1327    	ADD	IX,SP
0B04A3 C5                  A  1328    	PUSH	BC
0B04A4 C5                  A  1329    	PUSH	BC
                           A  1330    ;  101	    uint16_t i;
                           A  1331    ;  102		for (i = 0; i < length; i += 4) {
                           A  1332    .LINE 102
                           A  1333    
0B04A5 DD36FE00            A  1334    	LD	(IX+%FFFFFFFE),%0
0B04A9 DD36FF00            A  1335    	LD	(IX+%FFFFFFFF),%0
0B04AD 18 68               A  1336    	JR	L_30
0B04AF                     A  1337    L_28:
                           A  1338    ;  103	        if (i + 2 < length) {
                           A  1339    .LINE 103
                           A  1340    
0B04AF DD07FE              A  1341    	LD	BC,(IX+%FFFFFFFE)
0B04B2 CD 23 24 0B         A  1342    	CALL	__stoiu
0B04B6 E5D1                A  1343    	LD	DE,HL
0B04B8 13                  A  1344    	INC	DE
0B04B9 13                  A  1345    	INC	DE
0B04BA DD0709              A  1346    	LD	BC,(IX+%9)
0B04BD CD 23 24 0B         A  1347    	CALL	__stoiu
0B04C1 E5C1                A  1348    	LD	BC,HL
0B04C3 D5E1                A  1349    	LD	HL,DE
0B04C5 B7                  A  1350    	OR	A,A
0B04C6 ED42                A  1351    	SBC	HL,BC
0B04C8 F2 D2 04 0B         A  1352    	JP	P,L__23
0B04CC EA 0B 05 0B         A  1353    	JP	PE,L_29
0B04D0 18 04               A  1354    	JR	L__24
0B04D2                     A  1355    L__23:
0B04D2 E2 0B 05 0B         A  1356    	JP	PO,L_29
0B04D6                     A  1357    L__24:
                           A  1358    ;  104	            uint8_t temp = arr[i];
                           A  1359    .LINE 104
                           A  1360    
0B04D6 DD07FE              A  1361    	LD	BC,(IX+%FFFFFFFE)
0B04D9 CD 23 24 0B         A  1362    	CALL	__stoiu
0B04DD DD0706              A  1363    	LD	BC,(IX+%6)
0B04E0 09                  A  1364    	ADD	HL,BC
0B04E1 DD2FFA              A  1365    	LD	(IX+%FFFFFFFA),HL
0B04E4 7E                  A  1366    	LD	A,(HL)
0B04E5 DD77FD              A  1367    	LD	(IX+%FFFFFFFD),A
                           A  1368    ;  105	            arr[i] = arr[i + 2];
                           A  1369    .LINE 105
                           A  1370    
0B04E8 DD31FA              A  1371    	LD	IY,(IX+%FFFFFFFA)
0B04EB DD07FE              A  1372    	LD	BC,(IX+%FFFFFFFE)
0B04EE CD 23 24 0B         A  1373    	CALL	__stoiu
0B04F2 DD0706              A  1374    	LD	BC,(IX+%6)
0B04F5 09                  A  1375    	ADD	HL,BC
0B04F6 FD7E02              A  1376    	LD	A,(IY+%2)
0B04F9 77                  A  1377    	LD	(HL),A
                           A  1378    ;  106	            arr[i + 2] = temp;
                           A  1379    .LINE 106
                           A  1380    
0B04FA DD07FE              A  1381    	LD	BC,(IX+%FFFFFFFE)
0B04FD CD 23 24 0B         A  1382    	CALL	__stoiu
0B0501 DD0706              A  1383    	LD	BC,(IX+%6)
0B0504 09                  A  1384    	ADD	HL,BC
0B0505 23                  A  1385    	INC	HL
0B0506 23                  A  1386    	INC	HL
0B0507 DD7EFD              A  1387    	LD	A,(IX+%FFFFFFFD)
0B050A 77                  A  1388    	LD	(HL),A
                           A  1389    ;  107	        }
                           A  1390    ;  108	    }
0B050B                     A  1391    L_29:
                           A  1392    .LINE 108
                           A  1393    
0B050B DD31FE              A  1394    	LD	IY,(IX+%FFFFFFFE)
0B050E ED2304              A  1395    	LEA	HL,IY+%4
0B0511 DD75FE              A  1396    	LD	(IX+%FFFFFFFE),L
0B0514 DD74FF              A  1397    	LD	(IX+%FFFFFFFF),H
0B0517                     A  1398    L_30:
0B0517 DD0709              A  1399    	LD	BC,(IX+%9)
0B051A DD27FE              A  1400    	LD	HL,(IX+%FFFFFFFE)
0B051D B7                  A  1401    	OR	A,A
0B051E 40ED42              A  1402    	SBC.SIS	HL,BC
0B0521 38 8C               A  1403    	JR	C,L_28
                           A  1404    ;  109	}
                           A  1405    .LINE 109
                           A  1406    
0B0523 DDF9                A  1407    	LD	SP,IX
0B0525 DDE1                A  1408    	POP	IX
0B0527 C9                  A  1409    	RET	
                           A  1410    
                           A  1411    
                           A  1412    ;**************************** _reorder ********
                           A  1413    ;Name                         Addr/Register   S
                           A  1414    ;temp                                  IX-3    
                           A  1415    ;i                                     IX-2    
                           A  1416    ;length                                IX+9    
                           A  1417    ;arr                                   IX+6    
                           A  1418    
                           A  1419    
                           A  1420    ; Stack Frame Size: 18 (bytes)
                           A  1421    ;       Spill Code: -3 (instruction)
                           A  1422    
                           A  1423    
                           A  1424    .ENDFUNC "reorder",109,"_reorder"
                           A  1425    ;  110	
                           A  1426    ;  111	bmp_info load_bmp_big(const char * file
0B0528                     A  1427    _load_bmp_big:
                           A  1428    .DEFINE "_load_bmp_big"
                           A  1429    
                           A  1430    .VALUE _load_bmp_big
                           A  1431    
                           A  1432    .CLASS 2
                           A  1433    
                           A  1434    .TAG "NONAME6"
                           A  1435    
                           A  1436    .TYPE 72
                           A  1437    
                           A  1438    .ENDEF
                           A  1439    
                           A  1440    .BEGFUNC "load_bmp_big",111,"_load_bmp_big"
                           A  1441    
                           A  1442    .LINE 111
                           A  1443    
                           A  1444    .DEFINE "filename"
                           A  1445    
                           A  1446    .CLASS 65
                           A  1447    
                           A  1448    .VALUE 9
                           A  1449    
                           A  1450    .TYPE 194
                           A  1451    
                           A  1452    .ENDEF
                           A  1453    
                           A  1454    .DEFINE "slot"
                           A  1455    
                           A  1456    .CLASS 65
                           A  1457    
                           A  1458    .VALUE 12
                           A  1459    
                           A  1460    .TYPE 12
                           A  1461    
                           A  1462    .ENDEF
                           A  1463    
                           A  1464    .DEFINE "file"
                           A  1465    
                           A  1466    .CLASS 65
                           A  1467    
                           A  1468    .VALUE -1
                           A  1469    
                           A  1470    .TYPE 12
                           A  1471    
                           A  1472    .ENDEF
                           A  1473    
                           A  1474    .DEFINE "bit_depth"
                           A  1475    
                           A  1476    .CLASS 65
                           A  1477    
                           A  1478    .VALUE -5
                           A  1479    
                           A  1480    .TYPE 5
                           A  1481    
                           A  1482    .ENDEF
                           A  1483    
                           A  1484    .DEFINE "y"
                           A  1485    
                           A  1486    .CLASS 65
                           A  1487    
                           A  1488    .VALUE -9
                           A  1489    
                           A  1490    .TYPE 5
                           A  1491    
                           A  1492    .ENDEF
                           A  1493    
                           A  1494    .DEFINE "i"
                           A  1495    
                           A  1496    .CLASS 65
                           A  1497    
                           A  1498    .VALUE -13
                           A  1499    
                           A  1500    .TYPE 5
                           A  1501    
                           A  1502    .ENDEF
                           A  1503    
                           A  1504    .DEFINE "return_info"
                           A  1505    
                           A  1506    .CLASS 65
                           A  1507    
                           A  1508    .VALUE -18
                           A  1509    
                           A  1510    .TAG "NONAME6"
                           A  1511    
                           A  1512    .TYPE 8
                           A  1513    
                           A  1514    .ENDEF
                           A  1515    
                           A  1516    .DEFINE "width"
                           A  1517    
                           A  1518    .CLASS 65
                           A  1519    
                           A  1520    .VALUE -26
                           A  1521    
                           A  1522    .TYPE 5
                           A  1523    
                           A  1524    .ENDEF
                           A  1525    
                           A  1526    .DEFINE "height"
                           A  1527    
                           A  1528    .CLASS 65
                           A  1529    
                           A  1530    .VALUE -31
                           A  1531    
                           A  1532    .TYPE 5
                           A  1533    
                           A  1534    .ENDEF
                           A  1535    
                           A  1536    .DEFINE "b"
                           A  1537    
                           A  1538    .CLASS 65
                           A  1539    
                           A  1540    .VALUE -32
                           A  1541    
                           A  1542    .TYPE 12
                           A  1543    
                           A  1544    .ENDEF
                           A  1545    
                           A  1546    .DEFINE "index"
                           A  1547    
                           A  1548    .CLASS 65
                           A  1549    
                           A  1550    .VALUE -33
                           A  1551    
                           A  1552    .TYPE 12
                           A  1553    
                           A  1554    .ENDEF
                           A  1555    
                           A  1556    .DEFINE "color_table_size"
                           A  1557    
                           A  1558    .CLASS 65
                           A  1559    
                           A  1560    .VALUE -37
                           A  1561    
                           A  1562    .TYPE 15
                           A  1563    
                           A  1564    .ENDEF
                           A  1565    
                           A  1566    .DEFINE "x"
                           A  1567    
                           A  1568    .CLASS 65
                           A  1569    
                           A  1570    .VALUE -41
                           A  1571    
                           A  1572    .TYPE 5
                           A  1573    
                           A  1574    .ENDEF
                           A  1575    
                           A  1576    .DEFINE "src"
                           A  1577    
                           A  1578    .CLASS 65
                           A  1579    
                           A  1580    .VALUE -44
                           A  1581    
                           A  1582    .TYPE 34
                           A  1583    
                           A  1584    .ENDEF
                           A  1585    
                           A  1586    .DEFINE "r"
                           A  1587    
                           A  1588    .CLASS 65
                           A  1589    
                           A  1590    .VALUE -45
                           A  1591    
                           A  1592    .TYPE 12
                           A  1593    
                           A  1594    .ENDEF
                           A  1595    
                           A  1596    .DEFINE "g"
                           A  1597    
                           A  1598    .CLASS 65
                           A  1599    
                           A  1600    .VALUE -46
                           A  1601    
                           A  1602    .TYPE 12
                           A  1603    
                           A  1604    .ENDEF
                           A  1605    
                           A  1606    .DEFINE "row_padding"
                           A  1607    
                           A  1608    .CLASS 65
                           A  1609    
                           A  1610    .VALUE -50
                           A  1611    
                           A  1612    .TYPE 5
                           A  1613    
                           A  1614    .ENDEF
                           A  1615    
                           A  1616    .DEFINE "image_buffer"
                           A  1617    
                           A  1618    .CLASS 65
                           A  1619    
                           A  1620    .VALUE -53
                           A  1621    
                           A  1622    .TYPE 34
                           A  1623    
                           A  1624    .ENDEF
                           A  1625    
                           A  1626    .DEFINE "fo"
                           A  1627    
                           A  1628    .CLASS 65
                           A  1629    
                           A  1630    .VALUE -56
                           A  1631    
                           A  1632    .TAG "NONAME5"
                           A  1633    
                           A  1634    .TYPE 40
                           A  1635    
                           A  1636    .ENDEF
                           A  1637    
                           A  1638    .DEFINE "biSize"
                           A  1639    
                           A  1640    .CLASS 65
                           A  1641    
                           A  1642    .VALUE -60
                           A  1643    
                           A  1644    .TYPE 15
                           A  1645    
                           A  1646    .ENDEF
                           A  1647    
                           A  1648    .DEFINE "image_start"
                           A  1649    
                           A  1650    .CLASS 65
                           A  1651    
                           A  1652    .VALUE -64
                           A  1653    
                           A  1654    .TYPE 5
                           A  1655    
                           A  1656    .ENDEF
                           A  1657    
                           A  1658    .DEFINE "non_pad_row"
                           A  1659    
                           A  1660    .CLASS 65
                           A  1661    
                           A  1662    .VALUE -67
                           A  1663    
                           A  1664    .TYPE 4
                           A  1665    
                           A  1666    .ENDEF
                           A  1667    
                           A  1668    .DEFINE "header"
                           A  1669    
                           A  1670    .CLASS 65
                           A  1671    
                           A  1672    .VALUE -121
                           A  1673    
                           A  1674    .DIM 54
                           A  1675    
                           A  1676    .TYPE 98
                           A  1677    
                           A  1678    .ENDEF
                           A  1679    
                           A  1680    .DEFINE "color_table"
                           A  1681    
                           A  1682    .CLASS 65
                           A  1683    
                           A  1684    .VALUE -1145
                           A  1685    
                           A  1686    .DIM 1024
                           A  1687    
                           A  1688    .TYPE 98
                           A  1689    
                           A  1690    .ENDEF
                           A  1691    
0B0528 DDE5                A  1692    	PUSH	IX
0B052A DD210000 00         A  1693    	LD	IX,0
0B052F DD39                A  1694    	ADD	IX,SP
0B0531 2171FBFF            A  1695    	LD	HL,-1167
0B0535 39                  A  1696    	ADD	HL,SP
0B0536 F9                  A  1697    	LD	SP,HL
                           A  1698    ;  112	
                           A  1699    ;  113	    int32_t image_start, width, height,
                           A  1700    ;  114	    uint8_t pixel[4], file, r, g, b, in
                           A  1701    ;  115	    char header[54], color_table[1024];
                           A  1702    ;  116	    uint32_t pixel_value, color_table_s
                           A  1703    ;  117	    uint32_t biSize;
                           A  1704    ;  118	    FIL * fo;
                           A  1705    ;  119		bmp_info return_info;
                           A  1706    ;  120	
                           A  1707    ;  121	    char * src;
                           A  1708    ;  122	    char * image_buffer;
                           A  1709    ;  123		
                           A  1710    ;  124		//if (game.vgm_file != NULL) parse_
                           A  1711    ;  125		
                           A  1712    ;  126		return_info.bmp_width = 0;
                           A  1713    .LINE 126
                           A  1714    
0B0537 DD36EE00            A  1715    	LD	(IX+%FFFFFFEE),%0
0B053B DD36EF00            A  1716    	LD	(IX+%FFFFFFEF),%0
                           A  1717    ;  127		return_info.bmp_height = 0;
                           A  1718    .LINE 127
                           A  1719    
0B053F DD36F000            A  1720    	LD	(IX+%FFFFFFF0),%0
0B0543 DD36F100            A  1721    	LD	(IX+%FFFFFFF1),%0
                           A  1722    ;  128		return_info.bmp_bitdepth = 0;	
                           A  1723    .LINE 128
                           A  1724    
0B0547 DD36F200            A  1725    	LD	(IX+%FFFFFFF2),%0
                           A  1726    ;  129	
                           A  1727    ;  130	    file = mos_fopen(filename, fa_read)
                           A  1728    .LINE 130
                           A  1729    
0B054B 01010000            A  1730    	LD	BC,1
0B054F C5                  A  1731    	PUSH	BC
0B0550 DD0709              A  1732    	LD	BC,(IX+%9)
0B0553 C5                  A  1733    	PUSH	BC
0B0554 CD 19 1F 0B         A  1734    	CALL	_mos_fopen
0B0558 C1                  A  1735    	POP	BC
0B0559 C1                  A  1736    	POP	BC
0B055A DD77FF              A  1737    	LD	(IX+%FFFFFFFF),A
                           A  1738    ;  131	    if (!file) {
                           A  1739    .LINE 131
                           A  1740    
0B055D B7                  A  1741    	OR	A,A
0B055E 20 3B               A  1742    	JR	NZ,L_33
                           A  1743    ;  132	        printf("Error: could not open %
                           A  1744    .LINE 132
                           A  1745    
0B0560 01 29 24 0B         A  1746    	LD	BC,___print_uputch
0B0564 ED43 59 27 0B       A  1747    	LD	(___print_xputch),BC
0B0569 01 5F 27 0B         A  1748    	LD	BC,L__27
0B056D C5                  A  1749    	PUSH	BC
0B056E CD 8E 22 0B         A  1750    	CALL	___print_sendstring
0B0572 C1                  A  1751    	POP	BC
0B0573 DD0709              A  1752    	LD	BC,(IX+%9)
0B0576 C5                  A  1753    	PUSH	BC
0B0577 CD 8E 22 0B         A  1754    	CALL	___print_sendstring
0B057B C1                  A  1755    	POP	BC
0B057C 01 76 27 0B         A  1756    	LD	BC,L__28
0B0580 C5                  A  1757    	PUSH	BC
0B0581 CD 8E 22 0B         A  1758    	CALL	___print_sendstring
0B0585 C1                  A  1759    	POP	BC
                           A  1760    ;  133	        return return_info;
                           A  1761    .LINE 133
                           A  1762    
0B0586 ED2206              A  1763    	LEA	HL,IX+%6
0B0589 ED17                A  1764    	LD	DE,(HL)
0B058B ED22EE              A  1765    	LEA	HL,IX+%FFFFFFEE
0B058E 01050000            A  1766    	LD	BC,5
0B0592 EDB0                A  1767    	LDIR	
0B0594 DD2706              A  1768    	LD	HL,(IX+%6)
0B0597 C3 C1 0B 0B         A  1769    	JR	L_70
                           A  1770    ;  134	    }
0B059B                     A  1771    L_33:
                           A  1772    .LINE 134
                           A  1773    
                           A  1774    ;  135	    fo = (FIL * ) mos_getfil(file);
                           A  1775    .LINE 135
                           A  1776    
0B059B DD4EFF              A  1777    	LD	C,(IX+%FFFFFFFF)
0B059E 0600                A  1778    	LD	B,%0
0B05A0 C5                  A  1779    	PUSH	BC
0B05A1 CD 9F 20 0B         A  1780    	CALL	_mos_getfil
0B05A5 C1                  A  1781    	POP	BC
0B05A6 DD2FC8              A  1782    	LD	(IX+%FFFFFFC8),HL
                           A  1783    ;  136	
                           A  1784    ;  137	    mos_fread(file, header, 54);
                           A  1785    .LINE 137
                           A  1786    
0B05A9 01360000            A  1787    	LD	BC,54
0B05AD C5                  A  1788    	PUSH	BC
0B05AE ED6587              A  1789    	PEA	IX+%FFFFFF87
0B05B1 DD4EFF              A  1790    	LD	C,(IX+%FFFFFFFF)
0B05B4 0600                A  1791    	LD	B,%0
0B05B6 C5                  A  1792    	PUSH	BC
0B05B7 CD 46 20 0B         A  1793    	CALL	_mos_fread
0B05BB C1                  A  1794    	POP	BC
0B05BC C1                  A  1795    	POP	BC
0B05BD C1                  A  1796    	POP	BC
                           A  1797    ;  138	
                           A  1798    ;  139		image_start = * (uint32_t * ) & hea
                           A  1799    .LINE 139
                           A  1800    
0B05BE ED5587              A  1801    	LEA	IY,IX+%FFFFFF87
0B05C1 ED230A              A  1802    	LEA	HL,IY+%A
0B05C4 ED07                A  1803    	LD	BC,(HL)
0B05C6 23                  A  1804    	INC	HL
0B05C7 23                  A  1805    	INC	HL
0B05C8 23                  A  1806    	INC	HL
0B05C9 7E                  A  1807    	LD	A,(HL)
0B05CA DD0FC0              A  1808    	LD	(IX+%FFFFFFC0),BC
0B05CD DD77C3              A  1809    	LD	(IX+%FFFFFFC3),A
                           A  1810    ;  140	    biSize = * (uint32_t * ) & header[1
                           A  1811    .LINE 140
                           A  1812    
0B05D0 ED230E              A  1813    	LEA	HL,IY+%E
0B05D3 ED07                A  1814    	LD	BC,(HL)
0B05D5 23                  A  1815    	INC	HL
0B05D6 23                  A  1816    	INC	HL
0B05D7 23                  A  1817    	INC	HL
0B05D8 7E                  A  1818    	LD	A,(HL)
0B05D9 DD0FC4              A  1819    	LD	(IX+%FFFFFFC4),BC
0B05DC DD77C7              A  1820    	LD	(IX+%FFFFFFC7),A
                           A  1821    ;  141	    width = * (INT32 * ) & header[18];
                           A  1822    .LINE 141
                           A  1823    
0B05DF ED2312              A  1824    	LEA	HL,IY+%12
0B05E2 ED07                A  1825    	LD	BC,(HL)
0B05E4 23                  A  1826    	INC	HL
0B05E5 23                  A  1827    	INC	HL
0B05E6 23                  A  1828    	INC	HL
0B05E7 7E                  A  1829    	LD	A,(HL)
0B05E8 DD0FE6              A  1830    	LD	(IX+%FFFFFFE6),BC
0B05EB DD77E9              A  1831    	LD	(IX+%FFFFFFE9),A
                           A  1832    ;  142	    height = * (INT32 * ) & header[22];
                           A  1833    .LINE 142
                           A  1834    
0B05EE ED2316              A  1835    	LEA	HL,IY+%16
0B05F1 ED07                A  1836    	LD	BC,(HL)
0B05F3 23                  A  1837    	INC	HL
0B05F4 23                  A  1838    	INC	HL
0B05F5 23                  A  1839    	INC	HL
0B05F6 7E                  A  1840    	LD	A,(HL)
0B05F7 DD0FE1              A  1841    	LD	(IX+%FFFFFFE1),BC
0B05FA DD77E4              A  1842    	LD	(IX+%FFFFFFE4),A
                           A  1843    ;  143	    bit_depth = * (uint16_t * ) & heade
                           A  1844    .LINE 143
                           A  1845    
0B05FD ED231C              A  1846    	LEA	HL,IY+%1C
0B0600 ED07                A  1847    	LD	BC,(HL)
0B0602 CD 23 24 0B         A  1848    	CALL	__stoiu
0B0606 E5C1                A  1849    	LD	BC,HL
0B0608 AF                  A  1850    	XOR	A,A
0B0609 DD0FFB              A  1851    	LD	(IX+%FFFFFFFB),BC
0B060C DD77FE              A  1852    	LD	(IX+%FFFFFFFE),A
                           A  1853    ;  144	    color_table_size = * (uint32_t * ) 
                           A  1854    .LINE 144
                           A  1855    
0B060F ED232E              A  1856    	LEA	HL,IY+%2E
0B0612 ED17                A  1857    	LD	DE,(HL)
0B0614 23                  A  1858    	INC	HL
0B0615 23                  A  1859    	INC	HL
0B0616 23                  A  1860    	INC	HL
0B0617 7E                  A  1861    	LD	A,(HL)
0B0618 DD1FDB              A  1862    	LD	(IX+%FFFFFFDB),DE
0B061B DD77DE              A  1863    	LD	(IX+%FFFFFFDE),A
                           A  1864    ;  145		
                           A  1865    ;  146		
                           A  1866    ;  147	    image_buffer = (char * ) malloc(wid
                           A  1867    .LINE 147
                           A  1868    
0B061E DD27E6              A  1869    	LD	HL,(IX+%FFFFFFE6)
0B0621 DD5EE9              A  1870    	LD	E,(IX+%FFFFFFE9)
0B0624 DD7EFE              A  1871    	LD	A,(IX+%FFFFFFFE)
0B0627 CD 98 26 0B         A  1872    	CALL	__lmuls
0B062B 01080000            A  1873    	LD	BC,8
0B062F AF                  A  1874    	XOR	A,A
0B0630 CD AF 24 0B         A  1875    	CALL	__ldivs
0B0634 E5                  A  1876    	PUSH	HL
0B0635 C5                  A  1877    	PUSH	BC
0B0636 E5                  A  1878    	PUSH	HL
0B0637 FDE5E1              A  1879    	LD	HL,IY
0B063A 0171FBFF            A  1880    	LD	BC,-1167
0B063E CD 82 22 0B         A  1881    	CALL	__istix
0B0642 E1                  A  1882    	POP	HL
0B0643 C1                  A  1883    	POP	BC
0B0644 CD CF 21 0B         A  1884    	CALL	_malloc
0B0648 C5                  A  1885    	PUSH	BC
0B0649 0171FBFF            A  1886    	LD	BC,-1167
0B064D E5                  A  1887    	PUSH	HL
0B064E CD 05 27 0B         A  1888    	CALL	__ildix
0B0652 E5FDE1              A  1889    	LD	IY,HL
0B0655 E1                  A  1890    	POP	HL
0B0656 C1                  A  1891    	POP	BC
0B0657 C1                  A  1892    	POP	BC
0B0658 DD2FCB              A  1893    	LD	(IX+%FFFFFFCB),HL
                           A  1894    ;  148	
                           A  1895    ;  149	    if (color_table_size == 0 && bit_de
                           A  1896    .LINE 149
                           A  1897    
0B065B DD27DB              A  1898    	LD	HL,(IX+%FFFFFFDB)
0B065E DD5EDE              A  1899    	LD	E,(IX+%FFFFFFDE)
0B0661 01000000            A  1900    	LD	BC,0
0B0665 AF                  A  1901    	XOR	A,A
0B0666 CD 1E 26 0B         A  1902    	CALL	__lcmpu
0B066A 20 1C               A  1903    	JR	NZ,L_42
0B066C DD27FB              A  1904    	LD	HL,(IX+%FFFFFFFB)
0B066F DD5EFE              A  1905    	LD	E,(IX+%FFFFFFFE)
0B0672 01080000            A  1906    	LD	BC,8
0B0676 AF                  A  1907    	XOR	A,A
0B0677 CD 1E 26 0B         A  1908    	CALL	__lcmps
0B067B 20 0B               A  1909    	JR	NZ,L_42
                           A  1910    ;  150	        color_table_size = 256;
                           A  1911    .LINE 150
                           A  1912    
0B067D 01000100            A  1913    	LD	BC,256
0B0681 AF                  A  1914    	XOR	A,A
0B0682 DD0FDB              A  1915    	LD	(IX+%FFFFFFDB),BC
0B0685 DD77DE              A  1916    	LD	(IX+%FFFFFFDE),A
                           A  1917    ;  151	    }
0B0688                     A  1918    L_42:
                           A  1919    .LINE 151
                           A  1920    
                           A  1921    ;  152	
                           A  1922    ;  153	    if (color_table_size > 0) mos_fread
                           A  1923    .LINE 153
                           A  1924    
0B0688 B7                  A  1925    	OR	A,A
0B0689 ED62                A  1926    	SBC	HL,HL
0B068B 1E00                A  1927    	LD	E,%0
0B068D DD07DB              A  1928    	LD	BC,(IX+%FFFFFFDB)
0B0690 DD7EDE              A  1929    	LD	A,(IX+%FFFFFFDE)
0B0693 CD 1E 26 0B         A  1930    	CALL	__lcmpu
0B0697 30 22               A  1931    	JR	NC,L_41
0B0699 DD27DB              A  1932    	LD	HL,(IX+%FFFFFFDB)
0B069C 29                  A  1933    	ADD	HL,HL
0B069D 29                  A  1934    	ADD	HL,HL
0B069E E5                  A  1935    	PUSH	HL
0B069F DDE5E1              A  1936    	LD	HL,IX
0B06A2 0187FBFF            A  1937    	LD	BC,-1145
0B06A6 09                  A  1938    	ADD	HL,BC
0B06A7 E5C1                A  1939    	LD	BC,HL
0B06A9 C5                  A  1940    	PUSH	BC
0B06AA DD4EFF              A  1941    	LD	C,(IX+%FFFFFFFF)
0B06AD 0600                A  1942    	LD	B,%0
0B06AF C5                  A  1943    	PUSH	BC
0B06B0 CD 46 20 0B         A  1944    	CALL	_mos_fread
0B06B4 C1                  A  1945    	POP	BC
0B06B5 C1                  A  1946    	POP	BC
0B06B6 C1                  A  1947    	POP	BC
                           A  1948    ;  154	
                           A  1949    ;  155	    else if (biSize > 40) { //If for an
                           A  1950    .LINE 155
                           A  1951    
0B06B7 C3 9C 07 0B         A  1952    	JR	L_46
0B06BB                     A  1953    L_41:
0B06BB 21280000            A  1954    	LD	HL,40
0B06BF DD07C4              A  1955    	LD	BC,(IX+%FFFFFFC4)
0B06C2 DD7EC7              A  1956    	LD	A,(IX+%FFFFFFC7)
0B06C5 CD 1E 26 0B         A  1957    	CALL	__lcmpu
0B06C9 D2 9C 07 0B         A  1958    	JR	NC,L_46
                           A  1959    ;  156	
                           A  1960    ;  157	        i = biSize - 40;
                           A  1961    .LINE 157
                           A  1962    
0B06CD DD27C4              A  1963    	LD	HL,(IX+%FFFFFFC4)
0B06D0 DD5EC7              A  1964    	LD	E,(IX+%FFFFFFC7)
0B06D3 01D8FFFF            A  1965    	LD	BC,16777176
0B06D7 3EFF                A  1966    	LD	A,%FF
0B06D9 CD C4 20 0B         A  1967    	CALL	__ladd
0B06DD DD2FF3              A  1968    	LD	(IX+%FFFFFFF3),HL
0B06E0 DD73F6              A  1969    	LD	(IX+%FFFFFFF6),E
                           A  1970    ;  158	        while (i--> 0) {
                           A  1971    .LINE 158
                           A  1972    
0B06E3 18 29               A  1973    	JR	L_37
0B06E5                     A  1974    L_38:
                           A  1975    ;  159	            mos_fgetc(file);
                           A  1976    .LINE 159
                           A  1977    
0B06E5 DD4EFF              A  1978    	LD	C,(IX+%FFFFFFFF)
0B06E8 0600                A  1979    	LD	B,%0
0B06EA C5                  A  1980    	PUSH	BC
0B06EB C5                  A  1981    	PUSH	BC
0B06EC E5                  A  1982    	PUSH	HL
0B06ED FDE5E1              A  1983    	LD	HL,IY
0B06F0 0171FBFF            A  1984    	LD	BC,-1167
0B06F4 CD 82 22 0B         A  1985    	CALL	__istix
0B06F8 E1                  A  1986    	POP	HL
0B06F9 C1                  A  1987    	POP	BC
0B06FA CD 46 1F 0B         A  1988    	CALL	_mos_fgetc
0B06FE C5                  A  1989    	PUSH	BC
0B06FF 0171FBFF            A  1990    	LD	BC,-1167
0B0703 E5                  A  1991    	PUSH	HL
0B0704 CD 05 27 0B         A  1992    	CALL	__ildix
0B0708 E5FDE1              A  1993    	LD	IY,HL
0B070B E1                  A  1994    	POP	HL
0B070C C1                  A  1995    	POP	BC
0B070D C1                  A  1996    	POP	BC
                           A  1997    ;  160	        }
0B070E                     A  1998    L_37:
                           A  1999    .LINE 160
                           A  2000    
0B070E DD27F3              A  2001    	LD	HL,(IX+%FFFFFFF3)
0B0711 017EFBFF            A  2002    	LD	BC,-1154	; spill
0B0715 CD 82 22 0B         A  2003    	CALL	__istix
0B0719 DD66F6              A  2004    	LD	H,(IX+%FFFFFFF6)
0B071C FDE5                A  2005    	PUSH	IY
0B071E FD217CFB FF         A  2006    	LD	IY,-1156	; spill
0B0723 DDE5C1              A  2007    	LD	BC,IX	; spill
0B0726 FD09                A  2008    	ADD	IY,BC
0B0728 FD7400              A  2009    	LD	(IY),H
0B072B FDE1                A  2010    	POP	IY
0B072D DD27F3              A  2011    	LD	HL,(IX+%FFFFFFF3)
0B0730 DD5EF6              A  2012    	LD	E,(IX+%FFFFFFF6)
0B0733 01FFFFFF            A  2013    	LD	BC,16777215
0B0737 3EFF                A  2014    	LD	A,%FF
0B0739 CD C4 20 0B         A  2015    	CALL	__ladd
0B073D DD2FF3              A  2016    	LD	(IX+%FFFFFFF3),HL
0B0740 DD73F6              A  2017    	LD	(IX+%FFFFFFF6),E
0B0743 B7                  A  2018    	OR	A,A
0B0744 ED62                A  2019    	SBC	HL,HL
0B0746 1E00                A  2020    	LD	E,%0
0B0748 FDE5                A  2021    	PUSH	IY
0B074A FD217DFB FF         A  2022    	LD	IY,-1155	; spill
0B074F DDE5C1              A  2023    	LD	BC,IX	; spill
0B0752 FD09                A  2024    	ADD	IY,BC
0B0754 FD7400              A  2025    	LD	(IY),H
0B0757 FD217CFB FF         A  2026    	LD	IY,-1156	; unspill
0B075C DDE5C1              A  2027    	LD	BC,IX	; unspill
0B075F FD09                A  2028    	ADD	IY,BC
0B0761 FD6600              A  2029    	LD	H,(IY)
0B0764 FDE1                A  2030    	POP	IY
0B0766 7C                  A  2031    	LD	A,H
0B0767 FDE5                A  2032    	PUSH	IY
0B0769 FD217DFB FF         A  2033    	LD	IY,-1155	; unspill
0B076E DDE5C1              A  2034    	LD	BC,IX	; unspill
0B0771 FD09                A  2035    	ADD	IY,BC
0B0773 FD6600              A  2036    	LD	H,(IY)
0B0776 FDE1                A  2037    	POP	IY
0B0778 0181FBFF            A  2038    	LD	BC,-1151	; spill
0B077C CD 82 22 0B         A  2039    	CALL	__istix
0B0780 017EFBFF            A  2040    	LD	BC,-1154	; unspill
0B0784 CD 05 27 0B         A  2041    	CALL	__ildix
0B0788 E5C1                A  2042    	LD	BC,HL
0B078A C5                  A  2043    	PUSH	BC
0B078B 0181FBFF            A  2044    	LD	BC,-1151	; unspill
0B078F CD 05 27 0B         A  2045    	CALL	__ildix
0B0793 C1                  A  2046    	POP	BC
0B0794 CD 1E 26 0B         A  2047    	CALL	__lcmps
0B0798 FA E5 06 0B         A  2048    	JP	M,L_38
                           A  2049    ;  161	
                           A  2050    ;  162	    }
0B079C                     A  2051    L_46:
                           A  2052    .LINE 162
                           A  2053    
                           A  2054    ;  163	
                           A  2055    ;  164	    if ((bit_depth != 32) && (bit_depth
                           A  2056    .LINE 164
                           A  2057    
0B079C DD27FB              A  2058    	LD	HL,(IX+%FFFFFFFB)
0B079F DD5EFE              A  2059    	LD	E,(IX+%FFFFFFFE)
0B07A2 01200000            A  2060    	LD	BC,32
0B07A6 AF                  A  2061    	XOR	A,A
0B07A7 CD 1E 26 0B         A  2062    	CALL	__lcmps
0B07AB 20 04               A  2063    	JR	NZ,L__35
0B07AD 3E01                A  2064    	LD	A,%1
0B07AF 18 01               A  2065    	JR	L__36
0B07B1                     A  2066    L__35:
0B07B1 AF                  A  2067    	XOR	A,A
0B07B2                     A  2068    L__36:
0B07B2 DD77E5              A  2069    	LD	(IX+%FFFFFFE5),A
0B07B5 B7                  A  2070    	OR	A,A
0B07B6 20 55               A  2071    	JR	NZ,L_47
0B07B8 DD27FB              A  2072    	LD	HL,(IX+%FFFFFFFB)
0B07BB DD5EFE              A  2073    	LD	E,(IX+%FFFFFFFE)
0B07BE 01180000            A  2074    	LD	BC,24
0B07C2 AF                  A  2075    	XOR	A,A
0B07C3 CD 1E 26 0B         A  2076    	CALL	__lcmps
0B07C7 28 44               A  2077    	JR	Z,L_47
0B07C9 DD27FB              A  2078    	LD	HL,(IX+%FFFFFFFB)
0B07CC DD5EFE              A  2079    	LD	E,(IX+%FFFFFFFE)
0B07CF 01080000            A  2080    	LD	BC,8
0B07D3 AF                  A  2081    	XOR	A,A
0B07D4 CD 1E 26 0B         A  2082    	CALL	__lcmps
0B07D8 28 33               A  2083    	JR	Z,L_47
                           A  2084    ;  165	        printf("Error: unsupported bit 
                           A  2085    .LINE 165
                           A  2086    
0B07DA 01 29 24 0B         A  2087    	LD	BC,___print_uputch
0B07DE ED43 59 27 0B       A  2088    	LD	(___print_xputch),BC
0B07E3 01 7A 27 0B         A  2089    	LD	BC,L__40
0B07E7 C5                  A  2090    	PUSH	BC
0B07E8 CD 8E 22 0B         A  2091    	CALL	___print_sendstring
0B07EC C1                  A  2092    	POP	BC
                           A  2093    ;  166	        mos_fclose(file);
                           A  2094    .LINE 166
                           A  2095    
0B07ED DD4EFF              A  2096    	LD	C,(IX+%FFFFFFFF)
0B07F0 0600                A  2097    	LD	B,%0
0B07F2 C5                  A  2098    	PUSH	BC
0B07F3 CD 31 1F 0B         A  2099    	CALL	_mos_fclose
0B07F7 C1                  A  2100    	POP	BC
                           A  2101    ;  167	        return return_info;
                           A  2102    .LINE 167
                           A  2103    
0B07F8 ED2206              A  2104    	LEA	HL,IX+%6
0B07FB ED17                A  2105    	LD	DE,(HL)
0B07FD ED22EE              A  2106    	LEA	HL,IX+%FFFFFFEE
0B0800 01050000            A  2107    	LD	BC,5
0B0804 EDB0                A  2108    	LDIR	
0B0806 DD2706              A  2109    	LD	HL,(IX+%6)
0B0809 C3 C1 0B 0B         A  2110    	JR	L_70
                           A  2111    ;  168	    }
0B080D                     A  2112    L_47:
                           A  2113    .LINE 168
                           A  2114    
                           A  2115    ;  169	
                           A  2116    ;  170	    row_padding = (4 - (width * (bit_de
                           A  2117    .LINE 170
                           A  2118    
0B080D DD27FB              A  2119    	LD	HL,(IX+%FFFFFFFB)
0B0810 DD5EFE              A  2120    	LD	E,(IX+%FFFFFFFE)
0B0813 01080000            A  2121    	LD	BC,8
0B0817 AF                  A  2122    	XOR	A,A
0B0818 CD AF 24 0B         A  2123    	CALL	__ldivs
0B081C DD07E6              A  2124    	LD	BC,(IX+%FFFFFFE6)
0B081F DD7EE9              A  2125    	LD	A,(IX+%FFFFFFE9)
0B0822 CD 98 26 0B         A  2126    	CALL	__lmuls
0B0826 01040000            A  2127    	LD	BC,4
0B082A AF                  A  2128    	XOR	A,A
0B082B CD 3D 26 0B         A  2129    	CALL	__lrems
0B082F 7B                  A  2130    	LD	A,E
0B0830 E5C1                A  2131    	LD	BC,HL
0B0832 21040000            A  2132    	LD	HL,4
0B0836 1E00                A  2133    	LD	E,%0
0B0838 CD 3D 25 0B         A  2134    	CALL	__lsub
0B083C 01040000            A  2135    	LD	BC,4
0B0840 AF                  A  2136    	XOR	A,A
0B0841 CD 3D 26 0B         A  2137    	CALL	__lrems
0B0845 DD2FCE              A  2138    	LD	(IX+%FFFFFFCE),HL
0B0848 DD73D1              A  2139    	LD	(IX+%FFFFFFD1),E
                           A  2140    ;  171	
                           A  2141    ;  172	    vdp_bitmapSelect(slot);
                           A  2142    .LINE 172
                           A  2143    
0B084B DD4E0C              A  2144    	LD	C,(IX+%C)
0B084E 0600                A  2145    	LD	B,%0
0B0850 C5                  A  2146    	PUSH	BC
0B0851 CD 60 15 0B         A  2147    	CALL	_vdp_bitmapSelect
0B0855 C1                  A  2148    	POP	BC
                           A  2149    ;  173	    putch(23); // vdu_sys
                           A  2150    .LINE 173
                           A  2151    
0B0856 01170000            A  2152    	LD	BC,23
0B085A C5                  A  2153    	PUSH	BC
0B085B CD C1 1C 0B         A  2154    	CALL	_putch
0B085F C1                  A  2155    	POP	BC
                           A  2156    ;  174	    putch(27); // sprite command
                           A  2157    .LINE 174
                           A  2158    
0B0860 011B0000            A  2159    	LD	BC,27
0B0864 C5                  A  2160    	PUSH	BC
0B0865 CD C1 1C 0B         A  2161    	CALL	_putch
0B0869 C1                  A  2162    	POP	BC
                           A  2163    ;  175	    putch(1); // send data to selected 
                           A  2164    .LINE 175
                           A  2165    
0B086A 01010000            A  2166    	LD	BC,1
0B086E C5                  A  2167    	PUSH	BC
0B086F CD C1 1C 0B         A  2168    	CALL	_putch
0B0873 C1                  A  2169    	POP	BC
                           A  2170    ;  176	
                           A  2171    ;  177	    write16bit(width);
                           A  2172    .LINE 177
                           A  2173    
0B0874 DD07E6              A  2174    	LD	BC,(IX+%FFFFFFE6)
0B0877 C5                  A  2175    	PUSH	BC
0B0878 CD FF 10 0B         A  2176    	CALL	_write16bit
0B087C C1                  A  2177    	POP	BC
                           A  2178    ;  178	    write16bit(height);
                           A  2179    .LINE 178
                           A  2180    
0B087D DD07E1              A  2181    	LD	BC,(IX+%FFFFFFE1)
0B0880 C5                  A  2182    	PUSH	BC
0B0881 CD FF 10 0B         A  2183    	CALL	_write16bit
0B0885 C1                  A  2184    	POP	BC
                           A  2185    ;  179		
                           A  2186    ;  180	
                           A  2187    ;  181	    // if (bit_depth == 32) putch(1);
                           A  2188    ;  182	    // if (bit_depth == 24 || bit_depth
                           A  2189    ;  183	
                           A  2190    ;  184	    if (bit_depth == 8) {
                           A  2191    .LINE 184
                           A  2192    
0B0886 DD27FB              A  2193    	LD	HL,(IX+%FFFFFFFB)
0B0889 DD5EFE              A  2194    	LD	E,(IX+%FFFFFFFE)
0B088C 01080000            A  2195    	LD	BC,8
0B0890 AF                  A  2196    	XOR	A,A
0B0891 CD 1E 26 0B         A  2197    	CALL	__lcmps
0B0895 C2 E8 09 0B         A  2198    	JR	NZ,L_68
                           A  2199    ;  185	
                           A  2200    ;  186	        for (y = height - 1; y >= 0; y-
                           A  2201    .LINE 186
                           A  2202    
0B0899 DD27E1              A  2203    	LD	HL,(IX+%FFFFFFE1)
0B089C DD5EE4              A  2204    	LD	E,(IX+%FFFFFFE4)
0B089F 01FFFFFF            A  2205    	LD	BC,16777215
0B08A3 3EFF                A  2206    	LD	A,%FF
0B08A5 CD C4 20 0B         A  2207    	CALL	__ladd
0B08A9 DD2FF7              A  2208    	LD	(IX+%FFFFFFF7),HL
0B08AC DD73FA              A  2209    	LD	(IX+%FFFFFFFA),E
0B08AF C3 C7 09 0B         A  2210    	JR	L_60
0B08B3                     A  2211    L_58:
                           A  2212    ;  187	            for (x = 0; x < width; x++)
                           A  2213    .LINE 187
                           A  2214    
0B08B3 01000000            A  2215    	LD	BC,0
0B08B7 AF                  A  2216    	XOR	A,A
0B08B8 DD0FD7              A  2217    	LD	(IX+%FFFFFFD7),BC
0B08BB DD77DA              A  2218    	LD	(IX+%FFFFFFDA),A
0B08BE C3 55 09 0B         A  2219    	JR	L_52
0B08C2                     A  2220    L_50:
                           A  2221    ;  188	
                           A  2222    ;  189	                index = (UINT8) mos_fge
                           A  2223    .LINE 189
                           A  2224    
0B08C2 DD4EFF              A  2225    	LD	C,(IX+%FFFFFFFF)
0B08C5 0600                A  2226    	LD	B,%0
0B08C7 C5                  A  2227    	PUSH	BC
0B08C8 CD 46 1F 0B         A  2228    	CALL	_mos_fgetc
0B08CC C1                  A  2229    	POP	BC
0B08CD DD77DF              A  2230    	LD	(IX+%FFFFFFDF),A
                           A  2231    ;  190	                b = color_table[index *
                           A  2232    .LINE 190
                           A  2233    
0B08D0 B7ED62              A  2234    	UEXT	HL
0B08D3 6F                  A  2235    	LD	L,A
0B08D4 29                  A  2236    	ADD	HL,HL
0B08D5 29                  A  2237    	ADD	HL,HL
0B08D6 E5D1                A  2238    	LD	DE,HL
0B08D8 DDE5E1              A  2239    	LD	HL,IX
0B08DB 0187FBFF            A  2240    	LD	BC,-1145
0B08DF 09                  A  2241    	ADD	HL,BC
0B08E0 19                  A  2242    	ADD	HL,DE
0B08E1 FD2184FB FF         A  2243    	LD	IY,-1148
0B08E6 DDE5C1              A  2244    	LD	BC,IX
0B08E9 FD09                A  2245    	ADD	IY,BC
0B08EB FD2F00              A  2246    	LD	(IY),HL
0B08EE 2184FBFF            A  2247    	LD	HL,-1148
0B08F2 DDE5C1              A  2248    	LD	BC,IX
0B08F5 09                  A  2249    	ADD	HL,BC
0B08F6 ED27                A  2250    	LD	HL,(HL)
0B08F8 7E                  A  2251    	LD	A,(HL)
0B08F9 DD77E0              A  2252    	LD	(IX+%FFFFFFE0),A
                           A  2253    ;  191	                g = color_table[index *
                           A  2254    .LINE 191
                           A  2255    
0B08FC 2184FBFF            A  2256    	LD	HL,-1148
0B0900 DDE5C1              A  2257    	LD	BC,IX
0B0903 09                  A  2258    	ADD	HL,BC
0B0904 ED27                A  2259    	LD	HL,(HL)
0B0906 23                  A  2260    	INC	HL
0B0907 7E                  A  2261    	LD	A,(HL)
0B0908 DD77D2              A  2262    	LD	(IX+%FFFFFFD2),A
                           A  2263    ;  192	                r = color_table[index *
                           A  2264    .LINE 192
                           A  2265    
0B090B 2184FBFF            A  2266    	LD	HL,-1148
0B090F DDE5C1              A  2267    	LD	BC,IX
0B0912 09                  A  2268    	ADD	HL,BC
0B0913 ED31                A  2269    	LD	IY,(HL)
0B0915 ED2302              A  2270    	LEA	HL,IY+%2
0B0918 7E                  A  2271    	LD	A,(HL)
0B0919 DD77D3              A  2272    	LD	(IX+%FFFFFFD3),A
                           A  2273    ;  193	                putch(b);
                           A  2274    .LINE 193
                           A  2275    
0B091C DD7EE0              A  2276    	LD	A,(IX+%FFFFFFE0)
0B091F B7ED62              A  2277    	UEXT	HL
0B0922 6F                  A  2278    	LD	L,A
0B0923 E5                  A  2279    	PUSH	HL
0B0924 CD C1 1C 0B         A  2280    	CALL	_putch
0B0928 C1                  A  2281    	POP	BC
                           A  2282    ;  194	                putch(g);
                           A  2283    .LINE 194
                           A  2284    
0B0929 DD7ED2              A  2285    	LD	A,(IX+%FFFFFFD2)
0B092C B7ED62              A  2286    	UEXT	HL
0B092F 6F                  A  2287    	LD	L,A
0B0930 E5                  A  2288    	PUSH	HL
0B0931 CD C1 1C 0B         A  2289    	CALL	_putch
0B0935 C1                  A  2290    	POP	BC
                           A  2291    ;  195	                putch(r);
                           A  2292    .LINE 195
                           A  2293    
0B0936 DD7ED3              A  2294    	LD	A,(IX+%FFFFFFD3)
0B0939 B7ED62              A  2295    	UEXT	HL
0B093C 6F                  A  2296    	LD	L,A
0B093D E5                  A  2297    	PUSH	HL
0B093E CD C1 1C 0B         A  2298    	CALL	_putch
0B0942 C1                  A  2299    	POP	BC
0B0943 DD27D7              A  2300    	LD	HL,(IX+%FFFFFFD7)
0B0946 DD5EDA              A  2301    	LD	E,(IX+%FFFFFFDA)
0B0949 3E01                A  2302    	LD	A,%1
0B094B CD B5 20 0B         A  2303    	CALL	__ladd_b
0B094F DD2FD7              A  2304    	LD	(IX+%FFFFFFD7),HL
0B0952 DD73DA              A  2305    	LD	(IX+%FFFFFFDA),E
                           A  2306    ;  196	
                           A  2307    ;  197	            }
0B0955                     A  2308    L_52:
                           A  2309    .LINE 197
                           A  2310    
0B0955 DD27D7              A  2311    	LD	HL,(IX+%FFFFFFD7)
0B0958 DD5EDA              A  2312    	LD	E,(IX+%FFFFFFDA)
0B095B DD07E6              A  2313    	LD	BC,(IX+%FFFFFFE6)
0B095E DD7EE9              A  2314    	LD	A,(IX+%FFFFFFE9)
0B0961 CD 1E 26 0B         A  2315    	CALL	__lcmps
0B0965 FA C2 08 0B         A  2316    	JP	M,L_50
                           A  2317    ;  198	
                           A  2318    ;  199	            for (i = 0; i < row_padding
                           A  2319    .LINE 199
                           A  2320    
0B0969 01000000            A  2321    	LD	BC,0
0B096D AF                  A  2322    	XOR	A,A
0B096E DD0FF3              A  2323    	LD	(IX+%FFFFFFF3),BC
0B0971 DD77F6              A  2324    	LD	(IX+%FFFFFFF6),A
0B0974 18 1D               A  2325    	JR	L_56
0B0976                     A  2326    L_54:
                           A  2327    ;  200	                mos_fgetc(file);
                           A  2328    .LINE 200
                           A  2329    
0B0976 DD4EFF              A  2330    	LD	C,(IX+%FFFFFFFF)
0B0979 0600                A  2331    	LD	B,%0
0B097B C5                  A  2332    	PUSH	BC
0B097C CD 46 1F 0B         A  2333    	CALL	_mos_fgetc
0B0980 C1                  A  2334    	POP	BC
0B0981 DD27F3              A  2335    	LD	HL,(IX+%FFFFFFF3)
0B0984 DD5EF6              A  2336    	LD	E,(IX+%FFFFFFF6)
0B0987 3E01                A  2337    	LD	A,%1
0B0989 CD B5 20 0B         A  2338    	CALL	__ladd_b
0B098D DD2FF3              A  2339    	LD	(IX+%FFFFFFF3),HL
0B0990 DD73F6              A  2340    	LD	(IX+%FFFFFFF6),E
                           A  2341    ;  201	            }
0B0993                     A  2342    L_56:
                           A  2343    .LINE 201
                           A  2344    
0B0993 DD27F3              A  2345    	LD	HL,(IX+%FFFFFFF3)
0B0996 DD5EF6              A  2346    	LD	E,(IX+%FFFFFFF6)
0B0999 DD07CE              A  2347    	LD	BC,(IX+%FFFFFFCE)
0B099C DD7ED1              A  2348    	LD	A,(IX+%FFFFFFD1)
0B099F CD 1E 26 0B         A  2349    	CALL	__lcmps
0B09A3 FA AD 09 0B         A  2350    	JP	M,L__48
0B09A7 EA 76 09 0B         A  2351    	JP	PE,L_54
0B09AB 18 04               A  2352    	JR	L__49
0B09AD                     A  2353    L__48:
0B09AD E2 76 09 0B         A  2354    	JP	PO,L_54
0B09B1                     A  2355    L__49:
0B09B1 DD27F7              A  2356    	LD	HL,(IX+%FFFFFFF7)
0B09B4 DD5EFA              A  2357    	LD	E,(IX+%FFFFFFFA)
0B09B7 01FFFFFF            A  2358    	LD	BC,16777215
0B09BB 3EFF                A  2359    	LD	A,%FF
0B09BD CD C4 20 0B         A  2360    	CALL	__ladd
0B09C1 DD2FF7              A  2361    	LD	(IX+%FFFFFFF7),HL
0B09C4 DD73FA              A  2362    	LD	(IX+%FFFFFFFA),E
                           A  2363    ;  202	
                           A  2364    ;  203	        }
0B09C7                     A  2365    L_60:
                           A  2366    .LINE 203
                           A  2367    
0B09C7 DD27F7              A  2368    	LD	HL,(IX+%FFFFFFF7)
0B09CA DD5EFA              A  2369    	LD	E,(IX+%FFFFFFFA)
0B09CD 01000000            A  2370    	LD	BC,0
0B09D1 AF                  A  2371    	XOR	A,A
0B09D2 CD 1E 26 0B         A  2372    	CALL	__lcmps
0B09D6 F2 E0 09 0B         A  2373    	JP	P,L__50
0B09DA EA B3 08 0B         A  2374    	JP	PE,L_58
0B09DE 18 04               A  2375    	JR	L__51
0B09E0                     A  2376    L__50:
0B09E0 E2 B3 08 0B         A  2377    	JP	PO,L_58
0B09E4                     A  2378    L__51:
0B09E4 C3 84 0B 0B         A  2379    	JR	L_69
                           A  2380    ;  204	
                           A  2381    ;  205	    } else if (bit_depth == 32 || bit_d
0B09E8                     A  2382    L_68:
                           A  2383    .LINE 205
                           A  2384    
0B09E8 DD7EE5              A  2385    	LD	A,(IX+%FFFFFFE5)
0B09EB B7                  A  2386    	OR	A,A
0B09EC 20 13               A  2387    	JR	NZ,L_66
0B09EE DD27FB              A  2388    	LD	HL,(IX+%FFFFFFFB)
0B09F1 DD5EFE              A  2389    	LD	E,(IX+%FFFFFFFE)
0B09F4 01180000            A  2390    	LD	BC,24
0B09F8 AF                  A  2391    	XOR	A,A
0B09F9 CD 1E 26 0B         A  2392    	CALL	__lcmps
0B09FD C2 84 0B 0B         A  2393    	JR	NZ,L_69
0B0A01                     A  2394    L_66:
                           A  2395    ;  206	        int non_pad_row = width * bit_d
                           A  2396    .LINE 206
                           A  2397    
0B0A01 DD27E6              A  2398    	LD	HL,(IX+%FFFFFFE6)
0B0A04 DD5EE9              A  2399    	LD	E,(IX+%FFFFFFE9)
0B0A07 DD07FB              A  2400    	LD	BC,(IX+%FFFFFFFB)
0B0A0A DD7EFE              A  2401    	LD	A,(IX+%FFFFFFFE)
0B0A0D CD 98 26 0B         A  2402    	CALL	__lmuls
0B0A11 01080000            A  2403    	LD	BC,8
0B0A15 AF                  A  2404    	XOR	A,A
0B0A16 CD AF 24 0B         A  2405    	CALL	__ldivs
0B0A1A DD2FEA              A  2406    	LD	(IX+%FFFFFFEA),HL
0B0A1D DD73ED              A  2407    	LD	(IX+%FFFFFFED),E
0B0A20 DD2FBD              A  2408    	LD	(IX+%FFFFFFBD),HL
                           A  2409    ;  207	        //bytes_per_row = (width * bit_
                           A  2410    ;  208	
                           A  2411    ;  209	        src = (char * ) malloc(width * 
                           A  2412    .LINE 209
                           A  2413    
0B0A23 E5C1                A  2414    	LD	BC,HL
0B0A25 C5                  A  2415    	PUSH	BC
0B0A26 CD CF 21 0B         A  2416    	CALL	_malloc
0B0A2A C1                  A  2417    	POP	BC
0B0A2B DD2FD4              A  2418    	LD	(IX+%FFFFFFD4),HL
                           A  2419    ;  210			mos_flseek(file, image_start + 
                           A  2420    .LINE 210
                           A  2421    
0B0A2E DD07EA              A  2422    	LD	BC,(IX+%FFFFFFEA)
0B0A31 CD F6 25 0B         A  2423    	CALL	__itol
0B0A35 DD27CE              A  2424    	LD	HL,(IX+%FFFFFFCE)
0B0A38 DD5ED1              A  2425    	LD	E,(IX+%FFFFFFD1)
0B0A3B CD C4 20 0B         A  2426    	CALL	__ladd
0B0A3F 7B                  A  2427    	LD	A,E
0B0A40 FD217AFB FF         A  2428    	LD	IY,-1158	; spill
0B0A45 DDE5C1              A  2429    	LD	BC,IX	; spill
0B0A48 FD09                A  2430    	ADD	IY,BC
0B0A4A FD7700              A  2431    	LD	(IY),A
0B0A4D 0174FBFF            A  2432    	LD	BC,-1164	; spill
0B0A51 CD 82 22 0B         A  2433    	CALL	__istix
0B0A55 DD27E1              A  2434    	LD	HL,(IX+%FFFFFFE1)
0B0A58 DD5EE4              A  2435    	LD	E,(IX+%FFFFFFE4)
0B0A5B 01010000            A  2436    	LD	BC,1
0B0A5F AF                  A  2437    	XOR	A,A
0B0A60 CD 3D 25 0B         A  2438    	CALL	__lsub
0B0A64 7B                  A  2439    	LD	A,E
0B0A65 E5C1                A  2440    	LD	BC,HL
0B0A67 C5                  A  2441    	PUSH	BC
0B0A68 FD217BFB FF         A  2442    	LD	IY,-1157	; spill
0B0A6D DDE5C1              A  2443    	LD	BC,IX	; spill
0B0A70 FD09                A  2444    	ADD	IY,BC
0B0A72 FD7700              A  2445    	LD	(IY),A
0B0A75 FD217AFB FF         A  2446    	LD	IY,-1158	; unspill
0B0A7A DDE5C1              A  2447    	LD	BC,IX	; unspill
0B0A7D FD09                A  2448    	ADD	IY,BC
0B0A7F FD7E00              A  2449    	LD	A,(IY)
0B0A82 C1                  A  2450    	POP	BC
0B0A83 5F                  A  2451    	LD	E,A
0B0A84 C5                  A  2452    	PUSH	BC
0B0A85 FD217BFB FF         A  2453    	LD	IY,-1157	; unspill
0B0A8A DDE5C1              A  2454    	LD	BC,IX	; unspill
0B0A8D FD09                A  2455    	ADD	IY,BC
0B0A8F FD7E00              A  2456    	LD	A,(IY)
0B0A92 C1                  A  2457    	POP	BC
0B0A93 C5E1                A  2458    	LD	HL,BC
0B0A95 0177FBFF            A  2459    	LD	BC,-1161	; spill
0B0A99 CD 82 22 0B         A  2460    	CALL	__istix
0B0A9D 0174FBFF            A  2461    	LD	BC,-1164	; unspill
0B0AA1 CD 05 27 0B         A  2462    	CALL	__ildix
0B0AA5 E5C1                A  2463    	LD	BC,HL
0B0AA7 C5E1                A  2464    	LD	HL,BC
0B0AA9 0177FBFF            A  2465    	LD	BC,-1161	; unspill
0B0AAD E5                  A  2466    	PUSH	HL
0B0AAE CD 05 27 0B         A  2467    	CALL	__ildix
0B0AB2 E5C1                A  2468    	LD	BC,HL
0B0AB4 E1                  A  2469    	POP	HL
0B0AB5 CD 98 26 0B         A  2470    	CALL	__lmulu
0B0AB9 DD07C0              A  2471    	LD	BC,(IX+%FFFFFFC0)
0B0ABC DD7EC3              A  2472    	LD	A,(IX+%FFFFFFC3)
0B0ABF CD C4 20 0B         A  2473    	CALL	__ladd
0B0AC3 4B                  A  2474    	LD	C,E
0B0AC4 0600                A  2475    	LD	B,%0
0B0AC6 C5                  A  2476    	PUSH	BC
0B0AC7 E5                  A  2477    	PUSH	HL
0B0AC8 DD4EFF              A  2478    	LD	C,(IX+%FFFFFFFF)
0B0ACB C5                  A  2479    	PUSH	BC
0B0ACC CD 80 20 0B         A  2480    	CALL	_mos_flseek
0B0AD0 C1                  A  2481    	POP	BC
0B0AD1 C1                  A  2482    	POP	BC
0B0AD2 C1                  A  2483    	POP	BC
                           A  2484    ;  211	
                           A  2485    ;  212	        for (y = height - 1; y >= 0; y-
                           A  2486    .LINE 212
                           A  2487    
0B0AD3 DD27E1              A  2488    	LD	HL,(IX+%FFFFFFE1)
0B0AD6 DD5EE4              A  2489    	LD	E,(IX+%FFFFFFE4)
0B0AD9 01FFFFFF            A  2490    	LD	BC,16777215
0B0ADD 3EFF                A  2491    	LD	A,%FF
0B0ADF CD C4 20 0B         A  2492    	CALL	__ladd
0B0AE3 DD2FF7              A  2493    	LD	(IX+%FFFFFFF7),HL
0B0AE6 DD73FA              A  2494    	LD	(IX+%FFFFFFFA),E
0B0AE9 C3 71 0B 0B         A  2495    	JR	L_65
0B0AED                     A  2496    L_63:
                           A  2497    ;  213	
                           A  2498    ;  214	            mos_fread(file, src, non_pa
                           A  2499    .LINE 214
                           A  2500    
0B0AED DD07EA              A  2501    	LD	BC,(IX+%FFFFFFEA)
0B0AF0 C5                  A  2502    	PUSH	BC
0B0AF1 DD07D4              A  2503    	LD	BC,(IX+%FFFFFFD4)
0B0AF4 C5                  A  2504    	PUSH	BC
0B0AF5 DD4EFF              A  2505    	LD	C,(IX+%FFFFFFFF)
0B0AF8 0600                A  2506    	LD	B,%0
0B0AFA C5                  A  2507    	PUSH	BC
0B0AFB CD 46 20 0B         A  2508    	CALL	_mos_fread
0B0AFF C1                  A  2509    	POP	BC
0B0B00 C1                  A  2510    	POP	BC
0B0B01 C1                  A  2511    	POP	BC
                           A  2512    ;  215				reorder(src, non_pad_row);
                           A  2513    .LINE 215
                           A  2514    
0B0B02 DD07EA              A  2515    	LD	BC,(IX+%FFFFFFEA)
0B0B05 C5                  A  2516    	PUSH	BC
0B0B06 DD07D4              A  2517    	LD	BC,(IX+%FFFFFFD4)
0B0B09 C5                  A  2518    	PUSH	BC
0B0B0A CD 9A 04 0B         A  2519    	CALL	_reorder
0B0B0E C1                  A  2520    	POP	BC
0B0B0F C1                  A  2521    	POP	BC
                           A  2522    ;  216	            mos_puts(src, non_pad_row, 
                           A  2523    .LINE 216
                           A  2524    
0B0B10 01000000            A  2525    	LD	BC,0
0B0B14 C5                  A  2526    	PUSH	BC
0B0B15 DD07EA              A  2527    	LD	BC,(IX+%FFFFFFEA)
0B0B18 C5                  A  2528    	PUSH	BC
0B0B19 DD07D4              A  2529    	LD	BC,(IX+%FFFFFFD4)
0B0B1C C5                  A  2530    	PUSH	BC
0B0B1D CD D9 1C 0B         A  2531    	CALL	_mos_puts
0B0B21 C1                  A  2532    	POP	BC
0B0B22 C1                  A  2533    	POP	BC
0B0B23 C1                  A  2534    	POP	BC
                           A  2535    ;  217	            mos_flseek(file, fo -> fptr
                           A  2536    .LINE 217
                           A  2537    
0B0B24 DD27EA              A  2538    	LD	HL,(IX+%FFFFFFEA)
0B0B27 29                  A  2539    	ADD	HL,HL
0B0B28 E5C1                A  2540    	LD	BC,HL
0B0B2A CD F6 25 0B         A  2541    	CALL	__itol
0B0B2E 5F                  A  2542    	LD	E,A
0B0B2F C5E1                A  2543    	LD	HL,BC
0B0B31 DD07CE              A  2544    	LD	BC,(IX+%FFFFFFCE)
0B0B34 DD7ED1              A  2545    	LD	A,(IX+%FFFFFFD1)
0B0B37 CD C4 20 0B         A  2546    	CALL	__ladd
0B0B3B 7B                  A  2547    	LD	A,E
0B0B3C E5C1                A  2548    	LD	BC,HL
0B0B3E DD31C8              A  2549    	LD	IY,(IX+%FFFFFFC8)
0B0B41 FD2711              A  2550    	LD	HL,(IY+%11)
0B0B44 FD5E14              A  2551    	LD	E,(IY+%14)
0B0B47 CD 3D 25 0B         A  2552    	CALL	__lsub
0B0B4B 4B                  A  2553    	LD	C,E
0B0B4C 0600                A  2554    	LD	B,%0
0B0B4E C5                  A  2555    	PUSH	BC
0B0B4F E5                  A  2556    	PUSH	HL
0B0B50 DD4EFF              A  2557    	LD	C,(IX+%FFFFFFFF)
0B0B53 C5                  A  2558    	PUSH	BC
0B0B54 CD 80 20 0B         A  2559    	CALL	_mos_flseek
0B0B58 C1                  A  2560    	POP	BC
0B0B59 C1                  A  2561    	POP	BC
0B0B5A C1                  A  2562    	POP	BC
0B0B5B DD27F7              A  2563    	LD	HL,(IX+%FFFFFFF7)
0B0B5E DD5EFA              A  2564    	LD	E,(IX+%FFFFFFFA)
0B0B61 01FFFFFF            A  2565    	LD	BC,16777215
0B0B65 3EFF                A  2566    	LD	A,%FF
0B0B67 CD C4 20 0B         A  2567    	CALL	__ladd
0B0B6B DD2FF7              A  2568    	LD	(IX+%FFFFFFF7),HL
0B0B6E DD73FA              A  2569    	LD	(IX+%FFFFFFFA),E
                           A  2570    ;  218	
                           A  2571    ;  219	        }
0B0B71                     A  2572    L_65:
                           A  2573    .LINE 219
                           A  2574    
0B0B71 DD27F7              A  2575    	LD	HL,(IX+%FFFFFFF7)
0B0B74 DD5EFA              A  2576    	LD	E,(IX+%FFFFFFFA)
0B0B77 01000000            A  2577    	LD	BC,0
0B0B7B AF                  A  2578    	XOR	A,A
0B0B7C CD 1E 26 0B         A  2579    	CALL	__lcmps
0B0B80 F2 ED 0A 0B         A  2580    	JP	P,L_63
                           A  2581    ;  220	
                           A  2582    ;  221	    }
0B0B84                     A  2583    L_69:
                           A  2584    .LINE 221
                           A  2585    
                           A  2586    ;  222	
                           A  2587    ;  223	    mos_fclose(file);
                           A  2588    .LINE 223
                           A  2589    
0B0B84 DD4EFF              A  2590    	LD	C,(IX+%FFFFFFFF)
0B0B87 0600                A  2591    	LD	B,%0
0B0B89 C5                  A  2592    	PUSH	BC
0B0B8A CD 31 1F 0B         A  2593    	CALL	_mos_fclose
0B0B8E C1                  A  2594    	POP	BC
                           A  2595    ;  224	    free(image_buffer);
                           A  2596    .LINE 224
                           A  2597    
0B0B8F DD07CB              A  2598    	LD	BC,(IX+%FFFFFFCB)
0B0B92 C5                  A  2599    	PUSH	BC
0B0B93 CD CA 20 0B         A  2600    	CALL	_free
0B0B97 C1                  A  2601    	POP	BC
                           A  2602    ;  225	    //return width * height;
                           A  2603    ;  226		return_info.bmp_width = width;
                           A  2604    .LINE 226
                           A  2605    
0B0B98 DD27E6              A  2606    	LD	HL,(IX+%FFFFFFE6)
0B0B9B DD75EE              A  2607    	LD	(IX+%FFFFFFEE),L
0B0B9E DD74EF              A  2608    	LD	(IX+%FFFFFFEF),H
                           A  2609    ;  227		return_info.bmp_height = height;
                           A  2610    .LINE 227
                           A  2611    
0B0BA1 DD27E1              A  2612    	LD	HL,(IX+%FFFFFFE1)
0B0BA4 DD75F0              A  2613    	LD	(IX+%FFFFFFF0),L
0B0BA7 DD74F1              A  2614    	LD	(IX+%FFFFFFF1),H
                           A  2615    ;  228		return_info.bmp_bitdepth = bit_dept
                           A  2616    .LINE 228
                           A  2617    
0B0BAA DD7EFB              A  2618    	LD	A,(IX+%FFFFFFFB)
0B0BAD DD77F2              A  2619    	LD	(IX+%FFFFFFF2),A
                           A  2620    ;  229		return return_info;
                           A  2621    .LINE 229
                           A  2622    
0B0BB0 ED2206              A  2623    	LEA	HL,IX+%6
0B0BB3 ED17                A  2624    	LD	DE,(HL)
0B0BB5 ED22EE              A  2625    	LEA	HL,IX+%FFFFFFEE
0B0BB8 01050000            A  2626    	LD	BC,5
0B0BBC EDB0                A  2627    	LDIR	
0B0BBE DD2706              A  2628    	LD	HL,(IX+%6)
                           A  2629    ;  230	
                           A  2630    ;  231	}
0B0BC1                     A  2631    L_70:
                           A  2632    .LINE 231
                           A  2633    
0B0BC1 DDF9                A  2634    	LD	SP,IX
0B0BC3 DDE1                A  2635    	POP	IX
0B0BC5 C9                  A  2636    	RET	
                           A  2637    
                           A  2638    
                           A  2639    ;**************************** _load_bmp_big ***
                           A  2640    ;Name                         Addr/Register   S
                           A  2641    ;_free                               IMPORT  --
                           A  2642    ;_mos_puts                           IMPORT  --
                           A  2643    ;_mos_flseek                         IMPORT  --
                           A  2644    ;_write16bit                         IMPORT  --
                           A  2645    ;_putch                              IMPORT  --
                           A  2646    ;_vdp_bitmapSelect                   IMPORT  --
                           A  2647    ;_mos_fclose                         IMPORT  --
                           A  2648    ;_mos_fgetc                          IMPORT  --
                           A  2649    ;_malloc                             IMPORT  --
                           A  2650    ;_mos_fread                          IMPORT  --
                           A  2651    ;_mos_getfil                         IMPORT  --
                           A  2652    ;___print_sendstring                 IMPORT  --
                           A  2653    ;___print_xputch                     IMPORT    
                           A  2654    ;___print_uputch                     IMPORT  --
                           A  2655    ;_mos_fopen                          IMPORT  --
                           A  2656    ;color_table                        IX-1145   1
                           A  2657    ;header                              IX-121    
                           A  2658    ;non_pad_row                          IX-67    
                           A  2659    ;image_start                          IX-64    
                           A  2660    ;biSize                               IX-60    
                           A  2661    ;fo                                   IX-56    
                           A  2662    ;image_buffer                         IX-53    
                           A  2663    ;row_padding                          IX-50    
                           A  2664    ;g                                    IX-46    
                           A  2665    ;r                                    IX-45    
                           A  2666    ;src                                  IX-44    
                           A  2667    ;x                                    IX-41    
                           A  2668    ;color_table_size                     IX-37    
                           A  2669    ;index                                IX-33    
                           A  2670    ;b                                    IX-32    
                           A  2671    ;height                               IX-31    
                           A  2672    ;G_0                                  IX-27    
                           A  2673    ;width                                IX-26    
                           A  2674    ;O_15                                 IX-22    
                           A  2675    ;return_info                          IX-18    
                           A  2676    ;i                                    IX-13    
                           A  2677    ;y                                     IX-9    
                           A  2678    ;bit_depth                             IX-5    
                           A  2679    ;file                                  IX-1    
                           A  2680    ;slot                                 IX+12    
                           A  2681    ;filename                              IX+9    
                           A  2682    
                           A  2683    
                           A  2684    ; Stack Frame Size: 1182 (bytes)
                           A  2685    ;       Spill Code: -3 (instruction)
                           A  2686    
                           A  2687    
                           A  2688    .ENDFUNC "load_bmp_big",231,"_load_bmp_big"
                           A  2689    	SEGMENT STRSECT
0B275F                     A  2690    L__27:
0B275F 4572726F 723A2063   A  2691    	DB	"Error: could not open "
0B2767 6F756C64 206E6F74 
0B276F 206F7065 6E20 
0B2775 00                  A  2692    	DB	0
0B2776                     A  2693    L__28:
0B2776 2E                  A  2694    	DB	"."
0B2777 0D0A00              A  2695    	DB	13,10,0
0B277A                     A  2696    L__40:
0B277A 4572726F 723A2075   A  2697    	DB	"Error: unsupported bit depth (not 8, 2
0B2782 6E737570 706F7274 
0B278A 65642062 69742064 
0B2792 65707468 20286E6F 
0B279A 7420382C 20323420 
0B27A2 6F722033 322D6269 
0B27AA 74292E 
0B27AD 0A00                A  2698    	DB	10,0
                           A  2699    	SEGMENT CODE
                           A  2700    ;  232	
                           A  2701    ;  233	uint16_t strtou16(const char *str) {
0B0BC6                     A  2702    _strtou16:
                           A  2703    .DEFINE "_strtou16"
                           A  2704    
                           A  2705    .VALUE _strtou16
                           A  2706    
                           A  2707    .CLASS 2
                           A  2708    
                           A  2709    .TYPE 77
                           A  2710    
                           A  2711    .ENDEF
                           A  2712    
                           A  2713    .BEGFUNC "strtou16",233,"_strtou16"
                           A  2714    
                           A  2715    .LINE 233
                           A  2716    
                           A  2717    .DEFINE "str"
                           A  2718    
                           A  2719    .CLASS 65
                           A  2720    
                           A  2721    .VALUE 6
                           A  2722    
                           A  2723    .TYPE 194
                           A  2724    
                           A  2725    .ENDEF
                           A  2726    
                           A  2727    .DEFINE "result"
                           A  2728    
                           A  2729    .CLASS 65
                           A  2730    
                           A  2731    .VALUE -2
                           A  2732    
                           A  2733    .TYPE 13
                           A  2734    
                           A  2735    .ENDEF
                           A  2736    
                           A  2737    .DEFINE "digit"
                           A  2738    
                           A  2739    .CLASS 65
                           A  2740    
                           A  2741    .VALUE -4
                           A  2742    
                           A  2743    .TYPE 13
                           A  2744    
                           A  2745    .ENDEF
                           A  2746    
0B0BC6 DDE5                A  2747    	PUSH	IX
0B0BC8 DD210000 00         A  2748    	LD	IX,0
0B0BCD DD39                A  2749    	ADD	IX,SP
0B0BCF C5                  A  2750    	PUSH	BC
0B0BD0 3B                  A  2751    	DEC	SP
                           A  2752    ;  234	    uint16_t result = 0;
                           A  2753    .LINE 234
                           A  2754    
0B0BD1 DD36FE00            A  2755    	LD	(IX+%FFFFFFFE),%0
0B0BD5 DD36FF00            A  2756    	LD	(IX+%FFFFFFFF),%0
                           A  2757    ;  235	    const uint16_t maxDiv10 = 6553;  //
                           A  2758    ;  236	    const uint16_t maxMod10 = 5;     //
                           A  2759    ;  237	
                           A  2760    ;  238	    while (*str == ' ' || *str == '\t' 
                           A  2761    .LINE 238
                           A  2762    
0B0BD9 18 07               A  2763    	JR	L_74
0B0BDB                     A  2764    L_75:
                           A  2765    ;  239	        str++;
                           A  2766    .LINE 239
                           A  2767    
0B0BDB DD0706              A  2768    	LD	BC,(IX+%6)
0B0BDE 03                  A  2769    	INC	BC
0B0BDF DD0F06              A  2770    	LD	(IX+%6),BC
                           A  2771    ;  240	    }
0B0BE2                     A  2772    L_74:
                           A  2773    .LINE 240
                           A  2774    
0B0BE2 DD2706              A  2775    	LD	HL,(IX+%6)
0B0BE5 7E                  A  2776    	LD	A,(HL)
0B0BE6 47                  A  2777    	LD	B,A
0B0BE7 17ED62              A  2778    	SEXT	HL
0B0BEA 68                  A  2779    	LD	L,B
0B0BEB 01200000            A  2780    	LD	BC,32
0B0BEF B7                  A  2781    	OR	A,A
0B0BF0 ED42                A  2782    	SBC	HL,BC
0B0BF2 28 E7               A  2783    	JR	Z,L_75
0B0BF4 DD2706              A  2784    	LD	HL,(IX+%6)
0B0BF7 7E                  A  2785    	LD	A,(HL)
0B0BF8 47                  A  2786    	LD	B,A
0B0BF9 17ED62              A  2787    	SEXT	HL
0B0BFC 68                  A  2788    	LD	L,B
0B0BFD 01090000            A  2789    	LD	BC,9
0B0C01 B7                  A  2790    	OR	A,A
0B0C02 ED42                A  2791    	SBC	HL,BC
0B0C04 28 D5               A  2792    	JR	Z,L_75
0B0C06 DD2706              A  2793    	LD	HL,(IX+%6)
0B0C09 7E                  A  2794    	LD	A,(HL)
0B0C0A 47                  A  2795    	LD	B,A
0B0C0B 17ED62              A  2796    	SEXT	HL
0B0C0E 68                  A  2797    	LD	L,B
0B0C0F 010A0000            A  2798    	LD	BC,10
0B0C13 B7                  A  2799    	OR	A,A
0B0C14 ED42                A  2800    	SBC	HL,BC
0B0C16 28 C3               A  2801    	JR	Z,L_75
                           A  2802    ;  241	
                           A  2803    ;  242	    while (*str >= '0' && *str <= '9') 
                           A  2804    .LINE 242
                           A  2805    
0B0C18 18 5F               A  2806    	JR	L_82
0B0C1A                     A  2807    L_83:
                           A  2808    ;  243	        uint16_t digit = *str - '0';
                           A  2809    .LINE 243
                           A  2810    
0B0C1A DD2706              A  2811    	LD	HL,(IX+%6)
0B0C1D 7E                  A  2812    	LD	A,(HL)
0B0C1E 47                  A  2813    	LD	B,A
0B0C1F 17ED62              A  2814    	SEXT	HL
0B0C22 68                  A  2815    	LD	L,B
0B0C23 E5FDE1              A  2816    	LD	IY,HL
0B0C26 ED23D0              A  2817    	LEA	HL,IY+%FFFFFFD0
0B0C29 DD75FC              A  2818    	LD	(IX+%FFFFFFFC),L
0B0C2C DD74FD              A  2819    	LD	(IX+%FFFFFFFD),H
                           A  2820    ;  244	        if (result > maxDiv10 || (resul
                           A  2821    .LINE 244
                           A  2822    
0B0C2F DD07FE              A  2823    	LD	BC,(IX+%FFFFFFFE)
0B0C32 49219919            A  2824    	LD.LIS	HL,6553
0B0C36 B7                  A  2825    	OR	A,A
0B0C37 40ED42              A  2826    	SBC.SIS	HL,BC
0B0C3A 38 1A               A  2827    	JR	C,L_79
0B0C3C 49019919            A  2828    	LD.LIS	BC,6553
0B0C40 DD27FE              A  2829    	LD	HL,(IX+%FFFFFFFE)
0B0C43 B7                  A  2830    	OR	A,A
0B0C44 40ED42              A  2831    	SBC.SIS	HL,BC
0B0C47 20 13               A  2832    	JR	NZ,L_80
0B0C49 DD07FC              A  2833    	LD	BC,(IX+%FFFFFFFC)
0B0C4C 49210500            A  2834    	LD.LIS	HL,5
0B0C50 B7                  A  2835    	OR	A,A
0B0C51 40ED42              A  2836    	SBC.SIS	HL,BC
0B0C54 30 06               A  2837    	JR	NC,L_80
0B0C56                     A  2838    L_79:
                           A  2839    ;  245	            return 65535;
                           A  2840    .LINE 245
                           A  2841    
0B0C56 4921FFFF            A  2842    	LD.LIS	HL,65535
0B0C5A 18 5E               A  2843    	JR	L_86
                           A  2844    ;  246	        }
0B0C5C                     A  2845    L_80:
                           A  2846    .LINE 246
                           A  2847    
                           A  2848    ;  247	        result = result * 10 + digit;
                           A  2849    .LINE 247
                           A  2850    
0B0C5C 49210A00            A  2851    	LD.LIS	HL,10
0B0C60 DD07FE              A  2852    	LD	BC,(IX+%FFFFFFFE)
0B0C63 CD 11 27 0B         A  2853    	CALL	__smulu
0B0C67 DD07FC              A  2854    	LD	BC,(IX+%FFFFFFFC)
0B0C6A 4009                A  2855    	ADD.SIS	HL,BC
0B0C6C DD75FE              A  2856    	LD	(IX+%FFFFFFFE),L
0B0C6F DD74FF              A  2857    	LD	(IX+%FFFFFFFF),H
                           A  2858    ;  248	        str++;
                           A  2859    .LINE 248
                           A  2860    
0B0C72 DD0706              A  2861    	LD	BC,(IX+%6)
0B0C75 03                  A  2862    	INC	BC
0B0C76 DD0F06              A  2863    	LD	(IX+%6),BC
                           A  2864    ;  249	    }
0B0C79                     A  2865    L_82:
                           A  2866    .LINE 249
                           A  2867    
0B0C79 DD2706              A  2868    	LD	HL,(IX+%6)
0B0C7C 7E                  A  2869    	LD	A,(HL)
0B0C7D 47                  A  2870    	LD	B,A
0B0C7E 17ED62              A  2871    	SEXT	HL
0B0C81 68                  A  2872    	LD	L,B
0B0C82 01300000            A  2873    	LD	BC,48
0B0C86 B7                  A  2874    	OR	A,A
0B0C87 ED42                A  2875    	SBC	HL,BC
0B0C89 FA 93 0C 0B         A  2876    	JP	M,L__61
0B0C8D EA B7 0C 0B         A  2877    	JP	PE,L_85
0B0C91 18 04               A  2878    	JR	L__62
0B0C93                     A  2879    L__61:
0B0C93 E2 B7 0C 0B         A  2880    	JP	PO,L_85
0B0C97                     A  2881    L__62:
0B0C97 DD2706              A  2882    	LD	HL,(IX+%6)
0B0C9A 7E                  A  2883    	LD	A,(HL)
0B0C9B 47                  A  2884    	LD	B,A
0B0C9C 17ED62              A  2885    	SEXT	HL
0B0C9F 68                  A  2886    	LD	L,B
0B0CA0 E5C1                A  2887    	LD	BC,HL
0B0CA2 21390000            A  2888    	LD	HL,57
0B0CA6 B7                  A  2889    	OR	A,A
0B0CA7 ED42                A  2890    	SBC	HL,BC
0B0CA9 F2 B3 0C 0B         A  2891    	JP	P,L__63
0B0CAD EA 1A 0C 0B         A  2892    	JP	PE,L_83
0B0CB1 18 04               A  2893    	JR	L__64
0B0CB3                     A  2894    L__63:
0B0CB3 E2 1A 0C 0B         A  2895    	JP	PO,L_83
0B0CB7                     A  2896    L__64:
0B0CB7                     A  2897    L_85:
                           A  2898    ;  250	
                           A  2899    ;  251	    return result;
                           A  2900    .LINE 251
                           A  2901    
0B0CB7 DD27FE              A  2902    	LD	HL,(IX+%FFFFFFFE)
                           A  2903    ;  252	}
0B0CBA                     A  2904    L_86:
                           A  2905    .LINE 252
                           A  2906    
0B0CBA DDF9                A  2907    	LD	SP,IX
0B0CBC DDE1                A  2908    	POP	IX
0B0CBE C9                  A  2909    	RET	
                           A  2910    
                           A  2911    
                           A  2912    ;**************************** _strtou16 *******
                           A  2913    ;Name                         Addr/Register   S
                           A  2914    ;digit                                 IX-4    
                           A  2915    ;result                                IX-2    
                           A  2916    ;str                                   IX+6    
                           A  2917    
                           A  2918    
                           A  2919    ; Stack Frame Size: 13 (bytes)
                           A  2920    ;       Spill Code: -3 (instruction)
                           A  2921    
                           A  2922    
                           A  2923    .ENDFUNC "strtou16",252,"_strtou16"
                           A  2924    ;  253	
                           A  2925    ;  254	uint8_t strtou8(const char *str) {
0B0CBF                     A  2926    _strtou8:
                           A  2927    .DEFINE "_strtou8"
                           A  2928    
                           A  2929    .VALUE _strtou8
                           A  2930    
                           A  2931    .CLASS 2
                           A  2932    
                           A  2933    .TYPE 76
                           A  2934    
                           A  2935    .ENDEF
                           A  2936    
                           A  2937    .BEGFUNC "strtou8",254,"_strtou8"
                           A  2938    
                           A  2939    .LINE 254
                           A  2940    
                           A  2941    .DEFINE "str"
                           A  2942    
                           A  2943    .CLASS 65
                           A  2944    
                           A  2945    .VALUE 6
                           A  2946    
                           A  2947    .TYPE 194
                           A  2948    
                           A  2949    .ENDEF
                           A  2950    
                           A  2951    .DEFINE "result"
                           A  2952    
                           A  2953    .CLASS 65
                           A  2954    
                           A  2955    .VALUE -1
                           A  2956    
                           A  2957    .TYPE 12
                           A  2958    
                           A  2959    .ENDEF
                           A  2960    
                           A  2961    .DEFINE "digit"
                           A  2962    
                           A  2963    .CLASS 65
                           A  2964    
                           A  2965    .VALUE -2
                           A  2966    
                           A  2967    .TYPE 12
                           A  2968    
                           A  2969    .ENDEF
                           A  2970    
0B0CBF DDE5                A  2971    	PUSH	IX
0B0CC1 DD210000 00         A  2972    	LD	IX,0
0B0CC6 DD39                A  2973    	ADD	IX,SP
0B0CC8 3B                  A  2974    	DEC	SP
0B0CC9 3B                  A  2975    	DEC	SP
                           A  2976    ;  255	    uint8_t result = 0;
                           A  2977    .LINE 255
                           A  2978    
0B0CCA DD36FF00            A  2979    	LD	(IX+%FFFFFFFF),%0
                           A  2980    ;  256	    const uint8_t maxDiv10 = 255 / 10;
                           A  2981    ;  257	    const uint8_t maxMod10 = 255 % 10;
                           A  2982    ;  258	
                           A  2983    ;  259	    while (*str == ' ' || *str == '\t' 
                           A  2984    .LINE 259
                           A  2985    
0B0CCE 18 07               A  2986    	JR	L_90
0B0CD0                     A  2987    L_91:
                           A  2988    ;  260	        str++;
                           A  2989    .LINE 260
                           A  2990    
0B0CD0 DD0706              A  2991    	LD	BC,(IX+%6)
0B0CD3 03                  A  2992    	INC	BC
0B0CD4 DD0F06              A  2993    	LD	(IX+%6),BC
                           A  2994    ;  261	    }
0B0CD7                     A  2995    L_90:
                           A  2996    .LINE 261
                           A  2997    
0B0CD7 DD2706              A  2998    	LD	HL,(IX+%6)
0B0CDA 7E                  A  2999    	LD	A,(HL)
0B0CDB 47                  A  3000    	LD	B,A
0B0CDC 17ED62              A  3001    	SEXT	HL
0B0CDF 68                  A  3002    	LD	L,B
0B0CE0 01200000            A  3003    	LD	BC,32
0B0CE4 B7                  A  3004    	OR	A,A
0B0CE5 ED42                A  3005    	SBC	HL,BC
0B0CE7 28 E7               A  3006    	JR	Z,L_91
0B0CE9 DD2706              A  3007    	LD	HL,(IX+%6)
0B0CEC 7E                  A  3008    	LD	A,(HL)
0B0CED 47                  A  3009    	LD	B,A
0B0CEE 17ED62              A  3010    	SEXT	HL
0B0CF1 68                  A  3011    	LD	L,B
0B0CF2 01090000            A  3012    	LD	BC,9
0B0CF6 B7                  A  3013    	OR	A,A
0B0CF7 ED42                A  3014    	SBC	HL,BC
0B0CF9 28 D5               A  3015    	JR	Z,L_91
0B0CFB DD2706              A  3016    	LD	HL,(IX+%6)
0B0CFE 7E                  A  3017    	LD	A,(HL)
0B0CFF 47                  A  3018    	LD	B,A
0B0D00 17ED62              A  3019    	SEXT	HL
0B0D03 68                  A  3020    	LD	L,B
0B0D04 010A0000            A  3021    	LD	BC,10
0B0D08 B7                  A  3022    	OR	A,A
0B0D09 ED42                A  3023    	SBC	HL,BC
0B0D0B 28 C3               A  3024    	JR	Z,L_91
                           A  3025    ;  262	
                           A  3026    ;  263	    while (*str >= '0' && *str <= '9') 
                           A  3027    .LINE 263
                           A  3028    
0B0D0D 18 37               A  3029    	JR	L_98
0B0D0F                     A  3030    L_99:
                           A  3031    ;  264	        uint8_t digit = *str - '0';
                           A  3032    .LINE 264
                           A  3033    
0B0D0F DD2706              A  3034    	LD	HL,(IX+%6)
0B0D12 7E                  A  3035    	LD	A,(HL)
0B0D13 D630                A  3036    	SUB	A,%30
0B0D15 DD77FE              A  3037    	LD	(IX+%FFFFFFFE),A
                           A  3038    ;  265	        if (result > maxDiv10 || (resul
                           A  3039    .LINE 265
                           A  3040    
0B0D18 3E19                A  3041    	LD	A,%19
0B0D1A DDBEFF              A  3042    	CP	A,(IX+%FFFFFFFF)
0B0D1D 38 0E               A  3043    	JR	C,L_95
0B0D1F DD7EFF              A  3044    	LD	A,(IX+%FFFFFFFF)
0B0D22 FE19                A  3045    	CP	A,%19
0B0D24 20 0B               A  3046    	JR	NZ,L_96
0B0D26 3E05                A  3047    	LD	A,%5
0B0D28 DDBEFE              A  3048    	CP	A,(IX+%FFFFFFFE)
0B0D2B 30 04               A  3049    	JR	NC,L_96
0B0D2D                     A  3050    L_95:
                           A  3051    ;  266	            return 255;
                           A  3052    .LINE 266
                           A  3053    
0B0D2D 3EFF                A  3054    	LD	A,%FF
0B0D2F 18 56               A  3055    	JR	L_102
                           A  3056    ;  267	        }
0B0D31                     A  3057    L_96:
                           A  3058    .LINE 267
                           A  3059    
                           A  3060    ;  268	        result = result * 10 + digit;
                           A  3061    .LINE 268
                           A  3062    
0B0D31 060A                A  3063    	LD	B,%A
0B0D33 DD4EFF              A  3064    	LD	C,(IX+%FFFFFFFF)
0B0D36 ED4C                A  3065    	MLT	BC
0B0D38 79                  A  3066    	LD	A,C
0B0D39 DD86FE              A  3067    	ADD	A,(IX+%FFFFFFFE)
0B0D3C DD77FF              A  3068    	LD	(IX+%FFFFFFFF),A
                           A  3069    ;  269	        str++;
                           A  3070    .LINE 269
                           A  3071    
0B0D3F DD0706              A  3072    	LD	BC,(IX+%6)
0B0D42 03                  A  3073    	INC	BC
0B0D43 DD0F06              A  3074    	LD	(IX+%6),BC
                           A  3075    ;  270	    }
0B0D46                     A  3076    L_98:
                           A  3077    .LINE 270
                           A  3078    
0B0D46 DD2706              A  3079    	LD	HL,(IX+%6)
0B0D49 7E                  A  3080    	LD	A,(HL)
0B0D4A 47                  A  3081    	LD	B,A
0B0D4B 17ED62              A  3082    	SEXT	HL
0B0D4E 68                  A  3083    	LD	L,B
0B0D4F 01300000            A  3084    	LD	BC,48
0B0D53 B7                  A  3085    	OR	A,A
0B0D54 ED42                A  3086    	SBC	HL,BC
0B0D56 FA 60 0D 0B         A  3087    	JP	M,L__74
0B0D5A EA 84 0D 0B         A  3088    	JP	PE,L_101
0B0D5E 18 04               A  3089    	JR	L__75
0B0D60                     A  3090    L__74:
0B0D60 E2 84 0D 0B         A  3091    	JP	PO,L_101
0B0D64                     A  3092    L__75:
0B0D64 DD2706              A  3093    	LD	HL,(IX+%6)
0B0D67 7E                  A  3094    	LD	A,(HL)
0B0D68 47                  A  3095    	LD	B,A
0B0D69 17ED62              A  3096    	SEXT	HL
0B0D6C 68                  A  3097    	LD	L,B
0B0D6D E5C1                A  3098    	LD	BC,HL
0B0D6F 21390000            A  3099    	LD	HL,57
0B0D73 B7                  A  3100    	OR	A,A
0B0D74 ED42                A  3101    	SBC	HL,BC
0B0D76 F2 80 0D 0B         A  3102    	JP	P,L__76
0B0D7A EA 0F 0D 0B         A  3103    	JP	PE,L_99
0B0D7E 18 04               A  3104    	JR	L__77
0B0D80                     A  3105    L__76:
0B0D80 E2 0F 0D 0B         A  3106    	JP	PO,L_99
0B0D84                     A  3107    L__77:
0B0D84                     A  3108    L_101:
                           A  3109    ;  271	
                           A  3110    ;  272	    return result;
                           A  3111    .LINE 272
                           A  3112    
0B0D84 DD7EFF              A  3113    	LD	A,(IX+%FFFFFFFF)
                           A  3114    ;  273	}
0B0D87                     A  3115    L_102:
                           A  3116    .LINE 273
                           A  3117    
0B0D87 DDF9                A  3118    	LD	SP,IX
0B0D89 DDE1                A  3119    	POP	IX
0B0D8B C9                  A  3120    	RET	
                           A  3121    
                           A  3122    
                           A  3123    ;**************************** _strtou8 ********
                           A  3124    ;Name                         Addr/Register   S
                           A  3125    ;digit                                 IX-2    
                           A  3126    ;result                                IX-1    
                           A  3127    ;str                                   IX+6    
                           A  3128    
                           A  3129    
                           A  3130    ; Stack Frame Size: 11 (bytes)
                           A  3131    ;       Spill Code: -3 (instruction)
                           A  3132    
                           A  3133    
                           A  3134    .ENDFUNC "strtou8",273,"_strtou8"
                           A  3135    ;  274	
                           A  3136    ;  275	uint24_t strtou24(const char *str) {
0B0D8C                     A  3137    _strtou24:
                           A  3138    .DEFINE "_strtou24"
                           A  3139    
                           A  3140    .VALUE _strtou24
                           A  3141    
                           A  3142    .CLASS 2
                           A  3143    
                           A  3144    .TYPE 78
                           A  3145    
                           A  3146    .ENDEF
                           A  3147    
                           A  3148    .BEGFUNC "strtou24",275,"_strtou24"
                           A  3149    
                           A  3150    .LINE 275
                           A  3151    
                           A  3152    .DEFINE "str"
                           A  3153    
                           A  3154    .CLASS 65
                           A  3155    
                           A  3156    .VALUE 6
                           A  3157    
                           A  3158    .TYPE 194
                           A  3159    
                           A  3160    .ENDEF
                           A  3161    
                           A  3162    .DEFINE "result"
                           A  3163    
                           A  3164    .CLASS 65
                           A  3165    
                           A  3166    .VALUE -4
                           A  3167    
                           A  3168    .TYPE 15
                           A  3169    
                           A  3170    .ENDEF
                           A  3171    
                           A  3172    .DEFINE "digit"
                           A  3173    
                           A  3174    .CLASS 65
                           A  3175    
                           A  3176    .VALUE -8
                           A  3177    
                           A  3178    .TYPE 15
                           A  3179    
                           A  3180    .ENDEF
                           A  3181    
0B0D8C DDE5                A  3182    	PUSH	IX
0B0D8E DD210000 00         A  3183    	LD	IX,0
0B0D93 DD39                A  3184    	ADD	IX,SP
0B0D95 C5                  A  3185    	PUSH	BC
0B0D96 C5                  A  3186    	PUSH	BC
0B0D97 3B                  A  3187    	DEC	SP
0B0D98 3B                  A  3188    	DEC	SP
                           A  3189    ;  276	    uint32_t result = 0;
                           A  3190    .LINE 276
                           A  3191    
0B0D99 01000000            A  3192    	LD	BC,0
0B0D9D AF                  A  3193    	XOR	A,A
0B0D9E DD0FFC              A  3194    	LD	(IX+%FFFFFFFC),BC
0B0DA1 DD77FF              A  3195    	LD	(IX+%FFFFFFFF),A
                           A  3196    ;  277	    const uint32_t maxDiv10 = 1677721;
                           A  3197    ;  278	    const uint32_t maxMod10 = 5;
                           A  3198    ;  279	
                           A  3199    ;  280	    while (*str == ' ' || *str == '\t' 
                           A  3200    .LINE 280
                           A  3201    
0B0DA4 18 07               A  3202    	JR	L_106
0B0DA6                     A  3203    L_107:
                           A  3204    ;  281	        str++;
                           A  3205    .LINE 281
                           A  3206    
0B0DA6 DD0706              A  3207    	LD	BC,(IX+%6)
0B0DA9 03                  A  3208    	INC	BC
0B0DAA DD0F06              A  3209    	LD	(IX+%6),BC
                           A  3210    ;  282	    }
0B0DAD                     A  3211    L_106:
                           A  3212    .LINE 282
                           A  3213    
0B0DAD DD2706              A  3214    	LD	HL,(IX+%6)
0B0DB0 7E                  A  3215    	LD	A,(HL)
0B0DB1 47                  A  3216    	LD	B,A
0B0DB2 17ED62              A  3217    	SEXT	HL
0B0DB5 68                  A  3218    	LD	L,B
0B0DB6 01200000            A  3219    	LD	BC,32
0B0DBA B7                  A  3220    	OR	A,A
0B0DBB ED42                A  3221    	SBC	HL,BC
0B0DBD 28 E7               A  3222    	JR	Z,L_107
0B0DBF DD2706              A  3223    	LD	HL,(IX+%6)
0B0DC2 7E                  A  3224    	LD	A,(HL)
0B0DC3 47                  A  3225    	LD	B,A
0B0DC4 17ED62              A  3226    	SEXT	HL
0B0DC7 68                  A  3227    	LD	L,B
0B0DC8 01090000            A  3228    	LD	BC,9
0B0DCC B7                  A  3229    	OR	A,A
0B0DCD ED42                A  3230    	SBC	HL,BC
0B0DCF 28 D5               A  3231    	JR	Z,L_107
0B0DD1 DD2706              A  3232    	LD	HL,(IX+%6)
0B0DD4 7E                  A  3233    	LD	A,(HL)
0B0DD5 47                  A  3234    	LD	B,A
0B0DD6 17ED62              A  3235    	SEXT	HL
0B0DD9 68                  A  3236    	LD	L,B
0B0DDA 010A0000            A  3237    	LD	BC,10
0B0DDE B7                  A  3238    	OR	A,A
0B0DDF ED42                A  3239    	SBC	HL,BC
0B0DE1 28 C3               A  3240    	JR	Z,L_107
                           A  3241    ;  283		
                           A  3242    ;  284	    while (*str >= '0' && *str <= '9') 
                           A  3243    .LINE 284
                           A  3244    
0B0DE3 18 7A               A  3245    	JR	L_114
0B0DE5                     A  3246    L_115:
                           A  3247    ;  285	        uint32_t digit = *str - '0';
                           A  3248    .LINE 285
                           A  3249    
0B0DE5 DD2706              A  3250    	LD	HL,(IX+%6)
0B0DE8 7E                  A  3251    	LD	A,(HL)
0B0DE9 47                  A  3252    	LD	B,A
0B0DEA 17ED62              A  3253    	SEXT	HL
0B0DED 68                  A  3254    	LD	L,B
0B0DEE 5C                  A  3255    	LD	E,H
0B0DEF 01300000            A  3256    	LD	BC,48
0B0DF3 AF                  A  3257    	XOR	A,A
0B0DF4 CD 3D 25 0B         A  3258    	CALL	__lsub
0B0DF8 DD2FF8              A  3259    	LD	(IX+%FFFFFFF8),HL
0B0DFB DD73FB              A  3260    	LD	(IX+%FFFFFFFB),E
                           A  3261    ;  286	        if (result > maxDiv10 || (resul
                           A  3262    .LINE 286
                           A  3263    
0B0DFE 21999919            A  3264    	LD	HL,1677721
0B0E02 1E00                A  3265    	LD	E,%0
0B0E04 DD07FC              A  3266    	LD	BC,(IX+%FFFFFFFC)
0B0E07 DD7EFF              A  3267    	LD	A,(IX+%FFFFFFFF)
0B0E0A CD 1E 26 0B         A  3268    	CALL	__lcmpu
0B0E0E 38 23               A  3269    	JR	C,L_111
0B0E10 DD27FC              A  3270    	LD	HL,(IX+%FFFFFFFC)
0B0E13 DD5EFF              A  3271    	LD	E,(IX+%FFFFFFFF)
0B0E16 01999919            A  3272    	LD	BC,1677721
0B0E1A AF                  A  3273    	XOR	A,A
0B0E1B CD 1E 26 0B         A  3274    	CALL	__lcmpu
0B0E1F 20 18               A  3275    	JR	NZ,L_112
0B0E21 21050000            A  3276    	LD	HL,5
0B0E25 1E00                A  3277    	LD	E,%0
0B0E27 DD07F8              A  3278    	LD	BC,(IX+%FFFFFFF8)
0B0E2A DD7EFB              A  3279    	LD	A,(IX+%FFFFFFFB)
0B0E2D CD 1E 26 0B         A  3280    	CALL	__lcmpu
0B0E31 30 06               A  3281    	JR	NC,L_112
0B0E33                     A  3282    L_111:
                           A  3283    ;  287	            return 16777215;
                           A  3284    .LINE 287
                           A  3285    
0B0E33 21FFFFFF            A  3286    	LD	HL,16777215
0B0E37 18 67               A  3287    	JR	L_118
                           A  3288    ;  288	        }
0B0E39                     A  3289    L_112:
                           A  3290    .LINE 288
                           A  3291    
                           A  3292    ;  289	        result = result * 10 + digit;
                           A  3293    .LINE 289
                           A  3294    
0B0E39 DD27FC              A  3295    	LD	HL,(IX+%FFFFFFFC)
0B0E3C DD5EFF              A  3296    	LD	E,(IX+%FFFFFFFF)
0B0E3F 010A0000            A  3297    	LD	BC,10
0B0E43 AF                  A  3298    	XOR	A,A
0B0E44 CD 98 26 0B         A  3299    	CALL	__lmulu
0B0E48 DD07F8              A  3300    	LD	BC,(IX+%FFFFFFF8)
0B0E4B DD7EFB              A  3301    	LD	A,(IX+%FFFFFFFB)
0B0E4E CD C4 20 0B         A  3302    	CALL	__ladd
0B0E52 DD2FFC              A  3303    	LD	(IX+%FFFFFFFC),HL
0B0E55 DD73FF              A  3304    	LD	(IX+%FFFFFFFF),E
                           A  3305    ;  290	        str++;
                           A  3306    .LINE 290
                           A  3307    
0B0E58 DD0706              A  3308    	LD	BC,(IX+%6)
0B0E5B 03                  A  3309    	INC	BC
0B0E5C DD0F06              A  3310    	LD	(IX+%6),BC
                           A  3311    ;  291	    }
0B0E5F                     A  3312    L_114:
                           A  3313    .LINE 291
                           A  3314    
0B0E5F DD2706              A  3315    	LD	HL,(IX+%6)
0B0E62 7E                  A  3316    	LD	A,(HL)
0B0E63 47                  A  3317    	LD	B,A
0B0E64 17ED62              A  3318    	SEXT	HL
0B0E67 68                  A  3319    	LD	L,B
0B0E68 01300000            A  3320    	LD	BC,48
0B0E6C B7                  A  3321    	OR	A,A
0B0E6D ED42                A  3322    	SBC	HL,BC
0B0E6F FA 79 0E 0B         A  3323    	JP	M,L__87
0B0E73 EA 9D 0E 0B         A  3324    	JP	PE,L_117
0B0E77 18 04               A  3325    	JR	L__88
0B0E79                     A  3326    L__87:
0B0E79 E2 9D 0E 0B         A  3327    	JP	PO,L_117
0B0E7D                     A  3328    L__88:
0B0E7D DD2706              A  3329    	LD	HL,(IX+%6)
0B0E80 7E                  A  3330    	LD	A,(HL)
0B0E81 47                  A  3331    	LD	B,A
0B0E82 17ED62              A  3332    	SEXT	HL
0B0E85 68                  A  3333    	LD	L,B
0B0E86 E5C1                A  3334    	LD	BC,HL
0B0E88 21390000            A  3335    	LD	HL,57
0B0E8C B7                  A  3336    	OR	A,A
0B0E8D ED42                A  3337    	SBC	HL,BC
0B0E8F F2 99 0E 0B         A  3338    	JP	P,L__89
0B0E93 EA E5 0D 0B         A  3339    	JP	PE,L_115
0B0E97 18 04               A  3340    	JR	L__90
0B0E99                     A  3341    L__89:
0B0E99 E2 E5 0D 0B         A  3342    	JP	PO,L_115
0B0E9D                     A  3343    L__90:
0B0E9D                     A  3344    L_117:
                           A  3345    ;  292	
                           A  3346    ;  293	    return result;
                           A  3347    .LINE 293
                           A  3348    
0B0E9D DD27FC              A  3349    	LD	HL,(IX+%FFFFFFFC)
                           A  3350    ;  294	}
0B0EA0                     A  3351    L_118:
                           A  3352    .LINE 294
                           A  3353    
0B0EA0 DDF9                A  3354    	LD	SP,IX
0B0EA2 DDE1                A  3355    	POP	IX
0B0EA4 C9                  A  3356    	RET	
                           A  3357    
                           A  3358    
                           A  3359    ;**************************** _strtou24 *******
                           A  3360    ;Name                         Addr/Register   S
                           A  3361    ;digit                                 IX-8    
                           A  3362    ;result                                IX-4    
                           A  3363    ;str                                   IX+6    
                           A  3364    
                           A  3365    
                           A  3366    ; Stack Frame Size: 17 (bytes)
                           A  3367    ;       Spill Code: -3 (instruction)
                           A  3368    
                           A  3369    
                           A  3370    .ENDFUNC "strtou24",294,"_strtou24"
                           A  3371    ;  295	
                           A  3372    ;  296	int main(int argc, char * argv[]) {
0B0EA5                     A  3373    _main:
                           A  3374    .DEFINE "_main"
                           A  3375    
                           A  3376    .VALUE _main
                           A  3377    
                           A  3378    .CLASS 2
                           A  3379    
                           A  3380    .TYPE 68
                           A  3381    
                           A  3382    .ENDEF
                           A  3383    
                           A  3384    .BEGFUNC "main",296,"_main"
                           A  3385    
                           A  3386    .LINE 296
                           A  3387    
                           A  3388    .DEFINE "argc"
                           A  3389    
                           A  3390    .CLASS 65
                           A  3391    
                           A  3392    .VALUE 6
                           A  3393    
                           A  3394    .TYPE 4
                           A  3395    
                           A  3396    .ENDEF
                           A  3397    
                           A  3398    .DEFINE "argv"
                           A  3399    
                           A  3400    .CLASS 65
                           A  3401    
                           A  3402    .VALUE 9
                           A  3403    
                           A  3404    .TYPE 290
                           A  3405    
                           A  3406    .ENDEF
                           A  3407    
                           A  3408    .DEFINE "bitmap_slot"
                           A  3409    
                           A  3410    .CLASS 65
                           A  3411    
                           A  3412    .VALUE -1
                           A  3413    
                           A  3414    .TYPE 12
                           A  3415    
                           A  3416    .ENDEF
                           A  3417    
                           A  3418    .DEFINE "y"
                           A  3419    
                           A  3420    .CLASS 65
                           A  3421    
                           A  3422    .VALUE -4
                           A  3423    
                           A  3424    .TYPE 14
                           A  3425    
                           A  3426    .ENDEF
                           A  3427    
                           A  3428    .DEFINE "x"
                           A  3429    
                           A  3430    .CLASS 65
                           A  3431    
                           A  3432    .VALUE -7
                           A  3433    
                           A  3434    .TYPE 14
                           A  3435    
                           A  3436    .ENDEF
                           A  3437    
                           A  3438    .DEFINE "bmp"
                           A  3439    
                           A  3440    .CLASS 65
                           A  3441    
                           A  3442    .VALUE -12
                           A  3443    
                           A  3444    .TAG "NONAME6"
                           A  3445    
                           A  3446    .TYPE 8
                           A  3447    
                           A  3448    .ENDEF
                           A  3449    
0B0EA5 DDE5                A  3450    	PUSH	IX
0B0EA7 DD210000 00         A  3451    	LD	IX,0
0B0EAC DD39                A  3452    	ADD	IX,SP
0B0EAE ED22E4              A  3453    	LEA	HL,IX+%FFFFFFE4
0B0EB1 F9                  A  3454    	LD	SP,HL
                           A  3455    ;  297	
                           A  3456    ;  298	    uint24_t x, y;
                           A  3457    ;  299		uint8_t bitmap_slot = 0;
                           A  3458    .LINE 299
                           A  3459    
0B0EB2 DD36FF00            A  3460    	LD	(IX+%FFFFFFFF),%0
                           A  3461    ;  300		bmp_info bmp;
                           A  3462    ;  301		
                           A  3463    ;  302		//Args = 0:binary name, 1:filname, 
                           A  3464    ;  303		
                           A  3465    ;  304		if ((argc < 2) || (argc == 4) || (a
                           A  3466    .LINE 304
                           A  3467    
0B0EB6 01020000            A  3468    	LD	BC,2
0B0EBA DD2706              A  3469    	LD	HL,(IX+%6)
0B0EBD B7                  A  3470    	OR	A,A
0B0EBE ED42                A  3471    	SBC	HL,BC
0B0EC0 FA CA 0E 0B         A  3472    	JP	M,L__101
0B0EC4 EA F2 0E 0B         A  3473    	JP	PE,L_121
0B0EC8 18 04               A  3474    	JR	L__102
0B0ECA                     A  3475    L__101:
0B0ECA E2 F2 0E 0B         A  3476    	JP	PO,L_121
0B0ECE                     A  3477    L__102:
0B0ECE 01040000            A  3478    	LD	BC,4
0B0ED2 DD2706              A  3479    	LD	HL,(IX+%6)
0B0ED5 B7                  A  3480    	OR	A,A
0B0ED6 ED42                A  3481    	SBC	HL,BC
0B0ED8 28 18               A  3482    	JR	Z,L_121
0B0EDA DD0706              A  3483    	LD	BC,(IX+%6)
0B0EDD 21050000            A  3484    	LD	HL,5
0B0EE1 B7                  A  3485    	OR	A,A
0B0EE2 ED42                A  3486    	SBC	HL,BC
0B0EE4 F2 EE 0E 0B         A  3487    	JP	P,L__103
0B0EE8 EA 21 0F 0B         A  3488    	JP	PE,L_123
0B0EEC 18 04               A  3489    	JR	L__104
0B0EEE                     A  3490    L__103:
0B0EEE E2 21 0F 0B         A  3491    	JP	PO,L_123
0B0EF2                     A  3492    L__104:
0B0EF2                     A  3493    L_121:
                           A  3494    ;  305	        printf("Usage is %s <filename> 
                           A  3495    .LINE 305
                           A  3496    
0B0EF2 01 29 24 0B         A  3497    	LD	BC,___print_uputch
0B0EF6 ED43 59 27 0B       A  3498    	LD	(___print_xputch),BC
0B0EFB 01 AF 27 0B         A  3499    	LD	BC,L__95
0B0EFF C5                  A  3500    	PUSH	BC
0B0F00 CD 8E 22 0B         A  3501    	CALL	___print_sendstring
0B0F04 C1                  A  3502    	POP	BC
0B0F05 DD2709              A  3503    	LD	HL,(IX+%9)
0B0F08 ED07                A  3504    	LD	BC,(HL)
0B0F0A C5                  A  3505    	PUSH	BC
0B0F0B CD 8E 22 0B         A  3506    	CALL	___print_sendstring
0B0F0F C1                  A  3507    	POP	BC
0B0F10 01 B9 27 0B         A  3508    	LD	BC,L__96
0B0F14 C5                  A  3509    	PUSH	BC
0B0F15 CD 8E 22 0B         A  3510    	CALL	___print_sendstring
0B0F19 C1                  A  3511    	POP	BC
                           A  3512    ;  306	        return 0;
                           A  3513    .LINE 306
                           A  3514    
0B0F1A B7                  A  3515    	OR	A,A
0B0F1B ED62                A  3516    	SBC	HL,HL
0B0F1D C3 FA 10 0B         A  3517    	JR	L_131
                           A  3518    ;  307	    }
0B0F21                     A  3519    L_123:
                           A  3520    .LINE 307
                           A  3521    
                           A  3522    ;  308		
                           A  3523    ;  309		if (argc > 2) bitmap_slot = strtou8
                           A  3524    .LINE 309
                           A  3525    
0B0F21 DD0706              A  3526    	LD	BC,(IX+%6)
0B0F24 21020000            A  3527    	LD	HL,2
0B0F28 B7                  A  3528    	OR	A,A
0B0F29 ED42                A  3529    	SBC	HL,BC
0B0F2B F2 35 0F 0B         A  3530    	JP	P,L__105
0B0F2F EA 4A 0F 0B         A  3531    	JP	PE,L_129
0B0F33 18 04               A  3532    	JR	L__106
0B0F35                     A  3533    L__105:
0B0F35 E2 4A 0F 0B         A  3534    	JP	PO,L_129
0B0F39                     A  3535    L__106:
0B0F39 DD3109              A  3536    	LD	IY,(IX+%9)
0B0F3C ED2306              A  3537    	LEA	HL,IY+%6
0B0F3F ED07                A  3538    	LD	BC,(HL)
0B0F41 C5                  A  3539    	PUSH	BC
0B0F42 CD BF 0C 0B         A  3540    	CALL	_strtou8
0B0F46 C1                  A  3541    	POP	BC
0B0F47 DD77FF              A  3542    	LD	(IX+%FFFFFFFF),A
0B0F4A                     A  3543    L_129:
                           A  3544    ;  310		
                           A  3545    ;  311	    //vdp_mode(8);
                           A  3546    ;  312		
                           A  3547    ;  313		if (argc == 2) {
                           A  3548    .LINE 313
                           A  3549    
0B0F4A 01020000            A  3550    	LD	BC,2
0B0F4E DD2706              A  3551    	LD	HL,(IX+%6)
0B0F51 B7                  A  3552    	OR	A,A
0B0F52 ED42                A  3553    	SBC	HL,BC
0B0F54 C2 E7 0F 0B         A  3554    	JR	NZ,L_128
                           A  3555    ;  314	
                           A  3556    ;  315			bmp = load_bmp_big(argv[1], 0);
                           A  3557    .LINE 315
                           A  3558    
0B0F58 01000000            A  3559    	LD	BC,0
0B0F5C C5                  A  3560    	PUSH	BC
0B0F5D DD3109              A  3561    	LD	IY,(IX+%9)
0B0F60 ED2303              A  3562    	LEA	HL,IY+%3
0B0F63 ED07                A  3563    	LD	BC,(HL)
0B0F65 C5                  A  3564    	PUSH	BC
0B0F66 ED65EF              A  3565    	PEA	IX+%FFFFFFEF
0B0F69 DD77E4              A  3566    	LD	(IX+%FFFFFFE4),A
0B0F6C CD 28 05 0B         A  3567    	CALL	_load_bmp_big
0B0F70 DD7EE4              A  3568    	LD	A,(IX+%FFFFFFE4)
0B0F73 C1                  A  3569    	POP	BC
0B0F74 C1                  A  3570    	POP	BC
0B0F75 C1                  A  3571    	POP	BC
0B0F76 ED12F4              A  3572    	LEA	DE,IX+%FFFFFFF4
0B0F79 01050000            A  3573    	LD	BC,5
0B0F7D EDB0                A  3574    	LDIR	
                           A  3575    ;  316			x = (getsysvar_scrwidth() - bmp
                           A  3576    .LINE 316
                           A  3577    
0B0F7F DD77E4              A  3578    	LD	(IX+%FFFFFFE4),A
0B0F82 CD 7A 1D 0B         A  3579    	CALL	_getsysvar_scrwidth
0B0F86 DD7EE4              A  3580    	LD	A,(IX+%FFFFFFE4)
0B0F89 E5C1                A  3581    	LD	BC,HL
0B0F8B CD 23 24 0B         A  3582    	CALL	__stoiu
0B0F8F E5D1                A  3583    	LD	DE,HL
0B0F91 DD07F4              A  3584    	LD	BC,(IX+%FFFFFFF4)
0B0F94 CD 23 24 0B         A  3585    	CALL	__stoiu
0B0F98 E5C1                A  3586    	LD	BC,HL
0B0F9A D5E1                A  3587    	LD	HL,DE
0B0F9C B7                  A  3588    	OR	A,A
0B0F9D ED42                A  3589    	SBC	HL,BC
0B0F9F 01020000            A  3590    	LD	BC,2
0B0FA3 CD BD 25 0B         A  3591    	CALL	__idivs
0B0FA7 DD2FF9              A  3592    	LD	(IX+%FFFFFFF9),HL
                           A  3593    ;  317			y = (getsysvar_scrheight() - bm
                           A  3594    .LINE 317
                           A  3595    
0B0FAA DD77E4              A  3596    	LD	(IX+%FFFFFFE4),A
0B0FAD CD 8D 1D 0B         A  3597    	CALL	_getsysvar_scrheight
0B0FB1 DD7EE4              A  3598    	LD	A,(IX+%FFFFFFE4)
0B0FB4 E5C1                A  3599    	LD	BC,HL
0B0FB6 CD 23 24 0B         A  3600    	CALL	__stoiu
0B0FBA E5D1                A  3601    	LD	DE,HL
0B0FBC DD07F6              A  3602    	LD	BC,(IX+%FFFFFFF6)
0B0FBF CD 23 24 0B         A  3603    	CALL	__stoiu
0B0FC3 E5C1                A  3604    	LD	BC,HL
0B0FC5 D5E1                A  3605    	LD	HL,DE
0B0FC7 B7                  A  3606    	OR	A,A
0B0FC8 ED42                A  3607    	SBC	HL,BC
0B0FCA 01020000            A  3608    	LD	BC,2
0B0FCE CD BD 25 0B         A  3609    	CALL	__idivs
0B0FD2 DD2FFC              A  3610    	LD	(IX+%FFFFFFFC),HL
                           A  3611    ;  318			vdp_bitmapDraw(0,0,0);
                           A  3612    .LINE 318
                           A  3613    
0B0FD5 01000000            A  3614    	LD	BC,0
0B0FD9 C5                  A  3615    	PUSH	BC
0B0FDA C5                  A  3616    	PUSH	BC
0B0FDB C5                  A  3617    	PUSH	BC
0B0FDC CD AA 16 0B         A  3618    	CALL	_vdp_bitmapDraw
0B0FE0 C1                  A  3619    	POP	BC
0B0FE1 C1                  A  3620    	POP	BC
0B0FE2 C1                  A  3621    	POP	BC
                           A  3622    ;  319			
                           A  3623    ;  320		} else if (argc == 3) {
                           A  3624    .LINE 320
                           A  3625    
0B0FE3 C3 F7 10 0B         A  3626    	JR	L_130
0B0FE7                     A  3627    L_128:
0B0FE7 01030000            A  3628    	LD	BC,3
0B0FEB DD2706              A  3629    	LD	HL,(IX+%6)
0B0FEE B7                  A  3630    	OR	A,A
0B0FEF ED42                A  3631    	SBC	HL,BC
0B0FF1 C2 88 10 0B         A  3632    	JR	NZ,L_126
                           A  3633    ;  321			
                           A  3634    ;  322			bmp = load_bmp_big(argv[1], 0);
                           A  3635    .LINE 322
                           A  3636    
0B0FF5 01000000            A  3637    	LD	BC,0
0B0FF9 C5                  A  3638    	PUSH	BC
0B0FFA DD3109              A  3639    	LD	IY,(IX+%9)
0B0FFD ED2303              A  3640    	LEA	HL,IY+%3
0B1000 ED07                A  3641    	LD	BC,(HL)
0B1002 C5                  A  3642    	PUSH	BC
0B1003 ED65EA              A  3643    	PEA	IX+%FFFFFFEA
0B1006 DD77E4              A  3644    	LD	(IX+%FFFFFFE4),A
0B1009 CD 28 05 0B         A  3645    	CALL	_load_bmp_big
0B100D DD7EE4              A  3646    	LD	A,(IX+%FFFFFFE4)
0B1010 C1                  A  3647    	POP	BC
0B1011 C1                  A  3648    	POP	BC
0B1012 C1                  A  3649    	POP	BC
0B1013 ED12F4              A  3650    	LEA	DE,IX+%FFFFFFF4
0B1016 01050000            A  3651    	LD	BC,5
0B101A EDB0                A  3652    	LDIR	
                           A  3653    ;  323			x = (getsysvar_scrwidth() - bmp
                           A  3654    .LINE 323
                           A  3655    
0B101C DD77E4              A  3656    	LD	(IX+%FFFFFFE4),A
0B101F CD 7A 1D 0B         A  3657    	CALL	_getsysvar_scrwidth
0B1023 DD7EE4              A  3658    	LD	A,(IX+%FFFFFFE4)
0B1026 E5C1                A  3659    	LD	BC,HL
0B1028 CD 23 24 0B         A  3660    	CALL	__stoiu
0B102C E5D1                A  3661    	LD	DE,HL
0B102E DD07F4              A  3662    	LD	BC,(IX+%FFFFFFF4)
0B1031 CD 23 24 0B         A  3663    	CALL	__stoiu
0B1035 E5C1                A  3664    	LD	BC,HL
0B1037 D5E1                A  3665    	LD	HL,DE
0B1039 B7                  A  3666    	OR	A,A
0B103A ED42                A  3667    	SBC	HL,BC
0B103C 01020000            A  3668    	LD	BC,2
0B1040 CD BD 25 0B         A  3669    	CALL	__idivs
0B1044 DD2FF9              A  3670    	LD	(IX+%FFFFFFF9),HL
                           A  3671    ;  324			y = (getsysvar_scrheight() - bm
                           A  3672    .LINE 324
                           A  3673    
0B1047 DD77E4              A  3674    	LD	(IX+%FFFFFFE4),A
0B104A CD 8D 1D 0B         A  3675    	CALL	_getsysvar_scrheight
0B104E DD7EE4              A  3676    	LD	A,(IX+%FFFFFFE4)
0B1051 E5C1                A  3677    	LD	BC,HL
0B1053 CD 23 24 0B         A  3678    	CALL	__stoiu
0B1057 E5D1                A  3679    	LD	DE,HL
0B1059 DD07F6              A  3680    	LD	BC,(IX+%FFFFFFF6)
0B105C CD 23 24 0B         A  3681    	CALL	__stoiu
0B1060 E5C1                A  3682    	LD	BC,HL
0B1062 D5E1                A  3683    	LD	HL,DE
0B1064 B7                  A  3684    	OR	A,A
0B1065 ED42                A  3685    	SBC	HL,BC
0B1067 01020000            A  3686    	LD	BC,2
0B106B CD BD 25 0B         A  3687    	CALL	__idivs
0B106F DD2FFC              A  3688    	LD	(IX+%FFFFFFFC),HL
                           A  3689    ;  325			vdp_bitmapDraw(bitmap_slot,x,y)
                           A  3690    .LINE 325
                           A  3691    
0B1072 E5C1                A  3692    	LD	BC,HL
0B1074 C5                  A  3693    	PUSH	BC
0B1075 DD07F9              A  3694    	LD	BC,(IX+%FFFFFFF9)
0B1078 C5                  A  3695    	PUSH	BC
0B1079 DD4EFF              A  3696    	LD	C,(IX+%FFFFFFFF)
0B107C 0600                A  3697    	LD	B,%0
0B107E C5                  A  3698    	PUSH	BC
0B107F CD AA 16 0B         A  3699    	CALL	_vdp_bitmapDraw
0B1083 C1                  A  3700    	POP	BC
0B1084 C1                  A  3701    	POP	BC
0B1085 C1                  A  3702    	POP	BC
                           A  3703    ;  326			
                           A  3704    ;  327		} else if (argc == 5) {
                           A  3705    .LINE 327
                           A  3706    
0B1086 18 6F               A  3707    	JR	L_130
0B1088                     A  3708    L_126:
0B1088 01050000            A  3709    	LD	BC,5
0B108C DD2706              A  3710    	LD	HL,(IX+%6)
0B108F B7                  A  3711    	OR	A,A
0B1090 ED42                A  3712    	SBC	HL,BC
0B1092 20 63               A  3713    	JR	NZ,L_130
                           A  3714    ;  328		
                           A  3715    ;  329			bmp = load_bmp_big(argv[1], 0);
                           A  3716    .LINE 329
                           A  3717    
0B1094 01000000            A  3718    	LD	BC,0
0B1098 C5                  A  3719    	PUSH	BC
0B1099 DD3109              A  3720    	LD	IY,(IX+%9)
0B109C ED2303              A  3721    	LEA	HL,IY+%3
0B109F ED07                A  3722    	LD	BC,(HL)
0B10A1 C5                  A  3723    	PUSH	BC
0B10A2 ED65E5              A  3724    	PEA	IX+%FFFFFFE5
0B10A5 CD 28 05 0B         A  3725    	CALL	_load_bmp_big
0B10A9 C1                  A  3726    	POP	BC
0B10AA C1                  A  3727    	POP	BC
0B10AB C1                  A  3728    	POP	BC
0B10AC ED12F4              A  3729    	LEA	DE,IX+%FFFFFFF4
0B10AF 01050000            A  3730    	LD	BC,5
0B10B3 EDB0                A  3731    	LDIR	
                           A  3732    ;  330			x = strtou16(argv[3]);
                           A  3733    .LINE 330
                           A  3734    
0B10B5 DD3109              A  3735    	LD	IY,(IX+%9)
0B10B8 ED2309              A  3736    	LEA	HL,IY+%9
0B10BB ED07                A  3737    	LD	BC,(HL)
0B10BD C5                  A  3738    	PUSH	BC
0B10BE CD C6 0B 0B         A  3739    	CALL	_strtou16
0B10C2 C1                  A  3740    	POP	BC
0B10C3 E5C1                A  3741    	LD	BC,HL
0B10C5 CD 23 24 0B         A  3742    	CALL	__stoiu
0B10C9 DD2FF9              A  3743    	LD	(IX+%FFFFFFF9),HL
                           A  3744    ;  331			y = strtou16(argv[4]);
                           A  3745    .LINE 331
                           A  3746    
0B10CC DD3109              A  3747    	LD	IY,(IX+%9)
0B10CF ED230C              A  3748    	LEA	HL,IY+%C
0B10D2 ED07                A  3749    	LD	BC,(HL)
0B10D4 C5                  A  3750    	PUSH	BC
0B10D5 CD C6 0B 0B         A  3751    	CALL	_strtou16
0B10D9 C1                  A  3752    	POP	BC
0B10DA E5C1                A  3753    	LD	BC,HL
0B10DC CD 23 24 0B         A  3754    	CALL	__stoiu
0B10E0 DD2FFC              A  3755    	LD	(IX+%FFFFFFFC),HL
                           A  3756    ;  332			vdp_bitmapDraw(bitmap_slot,x,y)
                           A  3757    .LINE 332
                           A  3758    
0B10E3 E5C1                A  3759    	LD	BC,HL
0B10E5 C5                  A  3760    	PUSH	BC
0B10E6 DD07F9              A  3761    	LD	BC,(IX+%FFFFFFF9)
0B10E9 C5                  A  3762    	PUSH	BC
0B10EA DD4EFF              A  3763    	LD	C,(IX+%FFFFFFFF)
0B10ED 0600                A  3764    	LD	B,%0
0B10EF C5                  A  3765    	PUSH	BC
0B10F0 CD AA 16 0B         A  3766    	CALL	_vdp_bitmapDraw
0B10F4 C1                  A  3767    	POP	BC
0B10F5 C1                  A  3768    	POP	BC
0B10F6 C1                  A  3769    	POP	BC
                           A  3770    ;  333			
                           A  3771    ;  334		}
0B10F7                     A  3772    L_130:
                           A  3773    .LINE 334
                           A  3774    
                           A  3775    ;  335	
                           A  3776    ;  336	    return 0;
                           A  3777    .LINE 336
                           A  3778    
0B10F7 B7                  A  3779    	OR	A,A
0B10F8 ED62                A  3780    	SBC	HL,HL
0B10FA                     A  3781    L_131:
                           A  3782    .LINE 337
                           A  3783    
0B10FA DDF9                A  3784    	LD	SP,IX
0B10FC DDE1                A  3785    	POP	IX
0B10FE C9                  A  3786    	RET	
                           A  3787    
                           A  3788    
                           A  3789    ;**************************** _main ***********
                           A  3790    ;Name                         Addr/Register   S
                           A  3791    ;_vdp_bitmapDraw                     IMPORT  --
                           A  3792    ;_getsysvar_scrheight                IMPORT  --
                           A  3793    ;_getsysvar_scrwidth                 IMPORT  --
                           A  3794    ;___print_sendstring                 IMPORT  --
                           A  3795    ;___print_xputch                     IMPORT    
                           A  3796    ;___print_uputch                     IMPORT  --
                           A  3797    ;bmp                                  IX-12    
                           A  3798    ;x                                     IX-7    
                           A  3799    ;y                                     IX-4    
                           A  3800    ;bitmap_slot                           IX-1    
                           A  3801    ;argv                                  IX+9    
                           A  3802    ;argc                                  IX+6    
                           A  3803    
                           A  3804    
                           A  3805    ; Stack Frame Size: 40 (bytes)
                           A  3806    ;       Spill Code: -3 (instruction)
                           A  3807    
                           A  3808    
                           A  3809    .ENDFUNC "main",337,"_main"
                           A  3810    	SEGMENT STRSECT
0B27AF                     A  3811    L__95:
0B27AF 55736167 65206973   A  3812    	DB	"Usage is "
0B27B7 20 
0B27B8 00                  A  3813    	DB	0
0B27B9                     A  3814    L__96:
0B27B9 203C6669 6C656E61   A  3815    	DB	" <filename> [bitmap slot] [top-left x]
0B27C1 6D653E20 5B626974 
0B27C9 6D617020 736C6F74 
0B27D1 5D205B74 6F702D6C 
0B27D9 65667420 785D205B 
0B27E1 746F702D 6C656674 
0B27E9 20795D 
0B27EC 0D0A00              A  3816    	DB	13,10,0
                           A  3817    	XREF _write16bit:ROM
                           A  3818    	XREF _vdp_bitmapDraw:ROM
                           A  3819    	XREF _vdp_bitmapSelect:ROM
                           A  3820    	XREF _mos_getfil:ROM
                           A  3821    	XREF _mos_flseek:ROM
                           A  3822    	XREF _mos_fread:ROM
                           A  3823    	XREF _mos_fgetc:ROM
                           A  3824    	XREF _mos_fclose:ROM
                           A  3825    	XREF _mos_fopen:ROM
                           A  3826    	XREF _getsysvar_scrheight:ROM
                           A  3827    	XREF _getsysvar_scrwidth:ROM
                           A  3828    	XREF _mos_puts:ROM
                           A  3829    	XREF _waitvblank:ROM
                           A  3830    	XREF _putch:ROM
                           A  3831    	XREF _memcpy:ROM
                           A  3832    	XREF _malloc:ROM
                           A  3833    	XREF _free:ROM
                           A  3834    	XREF ___print_sendstring:ROM
                           A  3835    	XREF ___print_xputch:ROM
                           A  3836    	XREF ___print_uputch:ROM
                           A  3837    	XREF __lcmps:ROM
                           A  3838    	XREF __lcmpu:ROM
                           A  3839    	XREF __ladd:ROM
                           A  3840    	XREF __lsub:ROM
                           A  3841    	XREF __idivs:ROM
                           A  3842    	XREF __ldivs:ROM
                           A  3843    	XREF __imuls:ROM
                           A  3844    	XREF __lmuls:ROM
                           A  3845    	XREF __lmulu:ROM
                           A  3846    	XREF __smulu:ROM
                           A  3847    	XREF __lrems:ROM
                           A  3848    	XREF __stoiu:ROM
                           A  3849    	XREF __itol:ROM
                           A  3850    	XREF __ildix:ROM
                           A  3851    	XREF __istix:ROM
                           A  3852    	XREF __ladd_b:ROM
                           A  3853    	XDEF _main
                           A  3854    	XDEF _strtou24
                           A  3855    	XDEF _strtou8
                           A  3856    	XDEF _strtou16
                           A  3857    	XDEF _load_bmp_big
                           A  3858    	XDEF _reorder
                           A  3859    	XDEF _twiddle_buffer
                           A  3860    	XDEF _flip
                           A  3861    	XDEF _max
                           A  3862    	XDEF _min
                           A  3863    	XDEF _delay_secs
                           A  3864    	END


Errors: 0
Warnings: 0
Lines Assembled: 3865
